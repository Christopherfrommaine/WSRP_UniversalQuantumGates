(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[    377732,       7715]
NotebookOptionsPosition[    364481,       7489]
NotebookOutlinePosition[    365110,       7512]
CellTagsIndexPosition[    365067,       7509]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Exploring Universal Classical and Quantum Gates through Matrix Decomposition\
\>", "Title",
 CellChangeTimes->{{3.9290048301496887`*^9, 
  3.929004868603094*^9}},ExpressionUUID->"80ccb2bd-270f-604e-8ff0-\
1b73aebceafb"],

Cell["\<\
Theoretical approaches to representing discrete operators as linear state \
space transformations\
\>", "Subtitle",
 CellChangeTimes->{{3.9290048389372425`*^9, 3.929004916706066*^9}, {
  3.929025879276476*^9, 
  3.9290258875228577`*^9}},ExpressionUUID->"a6c8d056-788c-7a46-b828-\
99086904c6f9"],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.929004942711172*^9, 
  3.9290049444641724`*^9}},ExpressionUUID->"8579bbb3-05e8-2147-aff1-\
6cb8de6e6200"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<DarkMode\>\"", "]"}], "[", "False", 
  "]"}]], "Input",
 CellChangeTimes->{{3.929027304475828*^9, 3.929027320747448*^9}, {
  3.9290276688437195`*^9, 3.929027690016117*^9}, {3.929096506735466*^9, 
  3.9290965088081436`*^9}, {3.9291741321477833`*^9, 3.9291741407680073`*^9}, {
  3.9291743833427563`*^9, 3.929174383865814*^9}, {3.9291792275199223`*^9, 
  3.9291792292013206`*^9}},
 CellLabel->
  "In[444]:=",ExpressionUUID->"aa00de69-e013-0a4d-b823-333acd447754"],

Cell[CellGroupData[{

Cell["Universal Classical Gates", "Subsection",
 CellChangeTimes->{{3.929019889590479*^9, 
  3.929019896209961*^9}},ExpressionUUID->"1c9f7b6d-b0ac-2d42-b6c6-\
1eb267d2aabe"],

Cell["\<\
Classical logic uses logical operators, called gates, that transform one or \
more boolean-valued inputs to one or more boolean-valued outputs. For \
example, the AND gate returns True only when both of it\[CloseCurlyQuote]s \
inputs are True. AND is of the form 2\[Rule]1, because it takes in two inputs \
and returns a single output.
An operation of two boolean values can be represented by a truth table, with \
each axis representing each input.\
\>", "Text",
 CellChangeTimes->{{3.929004948997984*^9, 3.929005101617935*^9}, {
   3.929005185843904*^9, 3.9290051858920135`*^9}, {3.929005606967634*^9, 
   3.929005639200197*^9}, 3.929009480228964*^9, {3.929011326749731*^9, 
   3.929011387044459*^9}},ExpressionUUID->"c8a3a6e0-c439-3348-baf0-\
0a4bf7c7da19"],

Cell[CellGroupData[{

Cell["Implementation", "Subsubsection",
 CellChangeTimes->{{3.9290956679193974`*^9, 
  3.92909567029286*^9}},ExpressionUUID->"9f1c1c30-d27d-e04c-9a84-\
ee360426b892"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"For", " ", "Boolean", " ", 
     RowBox[{"(", 
      RowBox[{"True", " ", "or", " ", "False"}], ")"}]}], "-", 
    RowBox[{"valued", " ", "functions"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"truthTable", "[", 
     RowBox[{"func_", ",", " ", 
      RowBox[{"inputName_", ":", "\"\<_None\>\""}]}], "]"}], ":=", 
    RowBox[{"Grid", "[", "\[IndentingNewLine]", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Truth", " ", "Table", " ", "with", " ", "Axis", " ", "Labels"}], " ", 
      "*)"}], "\n", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"inputName", "==", "\"\<_None\>\""}], ",", " ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"StringContainsQ", "[", 
               RowBox[{
                RowBox[{"ToString", "[", "func", "]"}], ",", " ", 
                "\"\<&\>\""}], "]"}], ",", " ", "\"\<func&\>\"", ",", " ", 
              "func"}], "]"}], ",", " ", "inputName"}], "]"}], ",", " ", 
          "\"\<0\>\"", ",", " ", "\"\<1\>\""}], "}"}], ",", 
        "\[IndentingNewLine]", "  ", 
        RowBox[{"{", 
         RowBox[{"\"\<0\>\"", ",", " ", 
          RowBox[{"b2i", "@", 
           RowBox[{"func", "[", 
            RowBox[{"False", ",", "False"}], "]"}]}], ",", " ", 
          RowBox[{"b2i", "@", 
           RowBox[{"func", "[", 
            RowBox[{"True", ",", "False"}], "]"}]}]}], "}"}], ",", 
        "\[IndentingNewLine]", "  ", 
        RowBox[{"{", 
         RowBox[{"\"\<1\>\"", ",", " ", 
          RowBox[{"b2i", "@", 
           RowBox[{"func", "[", 
            RowBox[{"False", ",", " ", "True"}], "]"}]}], ",", " ", 
          RowBox[{"b2i", "@", 
           RowBox[{"func", "[", 
            RowBox[{"True", ",", " ", "True"}], "]"}]}]}], "}"}]}], "}"}], 
      ",", "\n", "  ", "\n", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Dividers", " ", "to", " ", "seperate", " ", "inputs", " ", "and", " ",
         "outputs"}], " ", "*)"}], "\[IndentingNewLine]", " ", 
      RowBox[{"Dividers", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", "->", "True"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"2", "->", "True"}], "}"}]}], "}"}]}], ",", "\n", " ", "\n",
       " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Alligns", " ", "the", " ", "input", " ", "labels", " ", "to", " ", 
        "the", " ", "right"}], " ", "*)"}], "\n", " ", 
      RowBox[{"Alignment", "->", 
       RowBox[{"{", 
        RowBox[{"Right", ",", " ", "Baseline"}], "}"}]}], ",", "\n", " ", 
      "\n", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Color", " ", "based", " ", "on", " ", "the", " ", "value", " ", "of", 
        " ", "each", " ", "cell"}], " ", "*)"}], "\n", " ", 
      RowBox[{"Background", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", " ", "None", ",", " ", 
         RowBox[{"Flatten", "@", 
          RowBox[{"Table", "[", "\n", "  ", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"b1", ",", " ", "b2"}], "}"}], "->", "\n", "   ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"func", "[", 
                RowBox[{
                 RowBox[{"Positive", "[", 
                  RowBox[{"b1", "-", "2"}], "]"}], ",", " ", 
                 RowBox[{"Positive", "[", 
                  RowBox[{"b2", "-", "2"}], "]"}]}], "]"}], ",", " ", 
               RowBox[{"SetAlphaChannel", "[", 
                RowBox[{"Green", ",", " ", "0.5"}], "]"}], ",", " ", 
               RowBox[{"SetAlphaChannel", "[", 
                RowBox[{"Red", ",", " ", "0.5"}], "]"}]}], "]"}]}], ",", "\n",
             "    ", 
            RowBox[{"{", 
             RowBox[{"b1", ",", " ", 
              RowBox[{"{", 
               RowBox[{"2", ",", " ", "3"}], "}"}]}], "}"}], ",", "\n", 
            "    ", 
            RowBox[{"{", 
             RowBox[{"b2", ",", " ", 
              RowBox[{"{", 
               RowBox[{"2", ",", " ", "3"}], "}"}]}], "}"}]}], "]"}]}]}], 
        "}"}]}]}], "]"}]}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"For", " ", "Integer", " ", "Boolean", " ", 
      RowBox[{"(", 
       RowBox[{"1", " ", "or", " ", "0"}], ")"}]}], "-", 
     RowBox[{"valued", " ", "functions"}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"numericalTruthTable", "[", 
     RowBox[{"func_", ",", " ", 
      RowBox[{"inputName_", ":", "\"\<_None\>\""}]}], "]"}], ":=", 
    RowBox[{"Grid", "[", "\n", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Truth", " ", "Table", " ", "with", " ", "Axis", " ", "Labels"}], " ", 
      "*)"}], "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"inputName", "==", "\"\<_None\>\""}], ",", " ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"StringContainsQ", "[", 
               RowBox[{
                RowBox[{"ToString", "[", "func", "]"}], ",", "\"\<&\>\""}], 
               "]"}], ",", " ", "\"\<func&\>\"", ",", " ", "func"}], "]"}], 
            ",", " ", "inputName"}], "]"}], ",", " ", "\"\<0\>\"", ",", " ", 
          "\"\<1\>\""}], "}"}], ",", "\[IndentingNewLine]", "  ", 
        RowBox[{"{", 
         RowBox[{"\"\<0\>\"", ",", " ", 
          RowBox[{"func", "[", 
           RowBox[{"0", ",", " ", "0"}], "]"}], ",", " ", 
          RowBox[{"func", "[", 
           RowBox[{"1", ",", " ", "0"}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", "  ", 
        RowBox[{"{", 
         RowBox[{"\"\<1\>\"", ",", " ", 
          RowBox[{"func", "[", 
           RowBox[{"0", ",", " ", "1"}], "]"}], ",", " ", 
          RowBox[{"func", "[", 
           RowBox[{"1", ",", " ", "1"}], "]"}]}], "}"}]}], "}"}], ",", "\n", 
      "  ", "\n", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Dividers", " ", "to", " ", "seperate", " ", "inputs", " ", "and", " ",
         "outputs"}], " ", "*)"}], "\[IndentingNewLine]", " ", 
      RowBox[{"Dividers", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", "->", "True"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"2", "->", "True"}], "}"}]}], "}"}]}], ",", "\n", " ", "\n",
       " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Alligns", " ", "the", " ", "input", " ", "labels", " ", "to", " ", 
        "the", " ", "right"}], " ", "*)"}], "\n", " ", 
      RowBox[{"Alignment", "->", 
       RowBox[{"{", 
        RowBox[{"Right", ",", " ", "Baseline"}], "}"}]}], ",", "\n", " ", 
      "\n", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Color", " ", "based", " ", "on", " ", "the", " ", "value", " ", "of", 
        " ", "each", " ", "cell"}], " ", "*)"}], "\n", " ", 
      RowBox[{"Background", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", " ", "None", ",", " ", 
         RowBox[{"Flatten", "@", 
          RowBox[{"Table", "[", "\n", "  ", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"b1", ",", " ", "b2"}], "}"}], "->", "\n", "   ", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"func", "[", 
                 RowBox[{
                  RowBox[{"b1", "-", "2"}], ",", " ", 
                  RowBox[{"b2", "-", "2"}]}], "]"}], ")"}], 
               RowBox[{"SetAlphaChannel", "[", 
                RowBox[{"Green", ",", " ", "0.3"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"func", "[", 
                  RowBox[{
                   RowBox[{"b1", "-", "2"}], ",", " ", 
                   RowBox[{"b2", "-", "2"}]}], "]"}]}], ")"}], 
               RowBox[{"SetAlphaChannel", "[", 
                RowBox[{"Red", ",", " ", "0.3"}], "]"}]}]}]}], ",", "\n", 
            "    ", 
            RowBox[{"{", 
             RowBox[{"b1", ",", " ", 
              RowBox[{"{", 
               RowBox[{"2", ",", " ", "3"}], "}"}]}], "}"}], ",", "\n", 
            "    ", 
            RowBox[{"{", 
             RowBox[{"b2", ",", " ", 
              RowBox[{"{", 
               RowBox[{"2", ",", " ", "3"}], "}"}]}], "}"}]}], "]"}]}]}], 
        "}"}]}]}], "]"}]}]}]}]], "Code",
 CellChangeTimes->{{3.929005641115703*^9, 3.929005728249834*^9}, {
   3.929005782335623*^9, 3.929005996019657*^9}, {3.9290060289880104`*^9, 
   3.9290060570433087`*^9}, {3.9290061171869545`*^9, 
   3.9290061211755047`*^9}, {3.929006894767229*^9, 3.929006904929552*^9}, {
   3.9290071424295616`*^9, 3.929007151825035*^9}, {3.929007187545447*^9, 
   3.929007453663021*^9}, {3.929007485671783*^9, 3.929007490018116*^9}, {
   3.929007629678913*^9, 3.9290077368885517`*^9}, {3.929007787886324*^9, 
   3.929007892361351*^9}, {3.929008003203062*^9, 3.929008115772106*^9}, {
   3.9290081773711147`*^9, 3.929008183161586*^9}, {3.9290082249993362`*^9, 
   3.929008267629732*^9}, {3.929008316327381*^9, 3.929008355179081*^9}, {
   3.929008448489311*^9, 3.929008514280239*^9}, 3.9290087539197*^9, {
   3.9290087983097973`*^9, 3.929008998191763*^9}, {3.929009032734457*^9, 
   3.929009270011692*^9}, {3.929009325528381*^9, 3.92900933006114*^9}, {
   3.9290093668264866`*^9, 3.9290094736572533`*^9}, {3.9290196946393433`*^9, 
   3.929019781221138*^9}, {3.929025918573994*^9, 3.92902593905561*^9}, {
   3.929027383606932*^9, 3.929027399770836*^9}, {3.929095618589329*^9, 
   3.929095659563238*^9}, {3.9291164797930317`*^9, 3.929116482990473*^9}, {
   3.9291169665494847`*^9, 3.929117031517809*^9}, {3.929117091222332*^9, 
   3.929117098315649*^9}, {3.929117130293377*^9, 3.929117154398697*^9}, {
   3.929117251895764*^9, 3.929117273519371*^9}, {3.929117315591652*^9, 
   3.929117352534985*^9}, {3.929120286441139*^9, 3.929120289720339*^9}, {
   3.929120347326922*^9, 3.929120349573075*^9}, {3.929120401193903*^9, 
   3.9291204198170185`*^9}, 3.9291204794846077`*^9, {3.9291831230987434`*^9, 
   3.9291833317787323`*^9}, {3.92918337118725*^9, 3.929183382796219*^9}, {
   3.929183538145254*^9, 3.929183564756817*^9}, {3.9291836467326317`*^9, 
   3.929183708388956*^9}},
 CellLabel->
  "In[481]:=",ExpressionUUID->"6693699b-7175-db46-ba1e-f3b998612d93"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.929095678484932*^9, 
  3.9290956794494324`*^9}},ExpressionUUID->"a66e0c76-80f6-634d-a35f-\
f9cbc2163739"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"truthTable", "[", "And", "]"}]], "Input",
 CellChangeTimes->{{3.929005131307575*^9, 3.9290051717819653`*^9}, {
  3.9290069130968*^9, 3.929006915495924*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"985fc76f-d1f7-f041-8057-13945d17852f"],

Cell[BoxData[
 TagBox[GridBox[{
    {"And", "\<\"0\"\>", "\<\"1\"\>"},
    {"\<\"0\"\>", "0", "0"},
    {"\<\"1\"\>", "0", "1"}
   },
   AutoDelete->False,
   GridBoxBackground->{
    "Columns" -> {{None}}, "Rows" -> {{None}}, 
     "ItemsIndexed" -> {{2, 2} -> RGBColor[1, 0, 0, 0.5], {2, 3} -> 
       RGBColor[1, 0, 0, 0.5], {3, 2} -> RGBColor[1, 0, 0, 0.5], {3, 3} -> 
       RGBColor[0, 1, 0, 0.5]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {2 -> True}, "RowsIndexed" -> {2 -> True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.929005172487959*^9, {3.929006920733104*^9, 3.9290069500445976`*^9}, {
   3.929007243062037*^9, 3.929007264985922*^9}, {3.929007459269451*^9, 
   3.92900746297311*^9}, 3.929007739983541*^9, 3.929007791512919*^9, {
   3.92900783344479*^9, 3.929007894498726*^9}, 3.929007945852461*^9, 
   3.929008017363556*^9, {3.929008104655483*^9, 3.929008117984062*^9}, 
   3.929008186391632*^9, 3.929008230285063*^9, 3.9290082711114807`*^9, {
   3.929008327993088*^9, 3.929008367926132*^9}, 3.929008518357373*^9, 
   3.929009490874243*^9, 3.92901978528302*^9, {3.929025927652113*^9, 
   3.929025941468498*^9}, {3.929027403979988*^9, 3.929027413232181*^9}, 
   3.929095439548513*^9, 3.929095694211193*^9, 3.929104905207979*^9, 
   3.929110749237128*^9, 3.929120355182648*^9, 3.929120949170817*^9, 
   3.929121146972019*^9, 3.9291282321208744`*^9, {3.9291290127064333`*^9, 
   3.929129021260006*^9}, {3.929129075122763*^9, 3.929129077196924*^9}, 
   3.929132154128126*^9, 3.929132800284067*^9, 3.929132860992279*^9, 
   3.9291743692022305`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"74a1a4ac-ab8a-0645-889d-69188d7d8c67"]
}, Open  ]],

Cell[TextData[{
 "Some gates are able to be composed with themselves to make any other \
possible gate. These gates are called universal gate.\nThere are only two \
universal, classical, 2\[Rule]1 gates: NAND (\[Nand]) and NOR (\[Nor]). For \
example, here is how the NAND gate can represent the XOR gate with a circuit \
diagram and code:\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3Qu0bWVZ8PF5DnDgGAh4Qz5viHiFGn0qijYqNathRaCWd00DlFJBMUUq
7KQOOSlmjZDPS5Zio08zw8TAa99JoYuQJZqZoqiZpGleuF/O8XuWZ+PY7PZ8
51r7nXs/a871e8f41Sj2XuOZez577TPO/6y17/7LJz/mmZubpnnBPvE/HvOM
Ux9+yinPOO2xB8T/8YsnveBXnnXSCcc/6qRfO+FZJ5xy1C/vEf/Po/Zsmm17
N038r+a73/0uAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
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
WNnXXwBDJv9dYWV0X8FvNxz/+2bX2BdF/gswF0X+O2/y3xVXRr+LXXf835Zd
H+n9If9dHfLfFRZj6zLKeeuO/z2zawSAccR4Rs1r2TFTPFb29RfAkMl/V1yM
xzcc///Mrq8vivwXYC6K/Hfe5L8rLsa1w/k1x/+8sH12jaT2h/x3dch/V1yM
pzYc/zdl1wcA4yju/wywKuS/Ky7G1cOvao6/9xQvXSf5L8AcFPnvvMl/ByDG
2xt64JHZ9ZHaG/Lf1SH/XXExdgzn1hz/ak++XXaNANCm1P+mwRlhiwke59Y9
uP4CGDL57wDEeF1DDzwiu74+KPJfgLko8t95k/8OQIx7NPTAR7LrI7U35L+r
Q/47ADHe0tADB2fXBwBtYuzX8Fq25wSP86QeXH8BDJn8dwBi3KGhBz6cXV8f
FPkvwFwU+e+8yX8HIMYW4eSaHrgoXDe7RtJ6Q/67OuS/AxDjbg098L7s+gCg
TYwdwsU1r2UvnOBxvlDzGD8KhzOxo8LxGzi2B7XNwxFltPed9Zr7mB7MZR4+
WDO/k3tQ2zy8rGZ+k3rDHGt6fdn4OfbmxHUax4tL/frslv2awmLE+EZND1Tn
1Wtm15etyH8B5iLGTWqulyrPXcA1T93/dpf/u/NwUtn4deio7GPKwp47z67p
gcrjs+sjrS/+o6YnvtaD81aXqn388Rs4uge1NTmy1D+Pd8nuJxbynN0UvlvT
A9VvvV8ju0YAaBPjOzWvZT8tY/yWYGn+PNQrs+dHP8X4WEPfjOum2fOY01o8
uWZ+K3F/sLVr5lNmPNbnurb+zVpeq2GNrpVdHwvrg8Mb+mDw94Au8l8AEsX4
cM3r0JOza2NhPXDDUv85+5XY4zFVXxxR0xPvyK6NDY/XDRr2XIN/b2IoYryg
oQ/cAxqA3ovxxobXste0/O1Vwlcb/v7h2fOjn6r34WfMA0/InsMc12Kl89+1
Odbtdcf1luw59EGR/zLqg90a+mDw95Ys8l8AEhX5L6M++GxNH1wYdsyuj5Se
kP8ukSL/ZdQHezb0wVuz6wOANjEOasldDg+bNvi7Kvt9f8PfVfua62TPj36K
cdVwxgx54KOz5zDHtRhC/lt9Bv6CGY733bPn0AdF/sulvXBCTR+cE7bLri95
beS/AKQp8l9GffDEhuv2h2XXR0pPyH+XSJH/cmkvfLmmD84KV8yuDwCaxLhS
OLMle6ly3rusZXY7h4eU+t8fvMSx2XOj3xpyzzZfD1tn17+AdViZ/Hdtni+f
8nh/OLv2vijyXy7thac29MJ9sutLXhv5LwBpivyXUR9cr9TfA9p3xgaoyH+X
SpH/cmkvPLuhFw7Irg8A2sR41ZS5TJMHZs+LfouxTThxwr66KOyfXfuc12Eo
+e+O4bQJj3f1XcabZ9feF0X+y6W9cKOGXnh5dn3JayP/BSBNkf9yaS98rqYX
fha2zK6PhfeD/HeJFPkvl/bCXg298PfZ9QFAmxg3LbPdm3W9b4YrZM+L/lu7
pv7xBL11WHbNHazBIPLftbneMpw95rGuPi9/UHbNfSL/ZV0/fK3uNTi7tuR1
kf8CkEb+y2a98KyGa/dbZdfHwvtB/rtE5L+s64eTanrhS9m1AcA4yvT3Zt3I
vbPnw/JYywRPbemp6nu/z86utaP5Dyb/XZvvPcroM+9Nx/vc8IjsWvtG/su6
fnhhQz/cILu+xHWR/wKQRv7LZr1w84ZrtWdk18fC+0H+u0Tkv6zrhyNreqH6
3sK1s+sDgDZldG/W0+eQ/R6XPReWT4ydwr+t5X7re+rzZcXu+bxu7oPKf9fm
fMNS/93F6vvg+2bX2EfyX9b1w50b+uGR2fUlrov8F4A08l/W9cP3a/rho9m1
sfBekP8uEfkv6/rhHg398JDs+gBgHDHuGs6fIfs9JeySPQ+WV4ydw33Dk8LD
wy2za1rAnAeX/67N2/538jWT/7J5P1whnFXTD6/Nri9xXeS/AKSR/7KuH/69
ph+q38Txm1kDYv+7XOS/rOuHK5WNv69SeWV2fQAwrhiHTJn9Vu9B/352/bBs
5L/2vxOsmfyX9T3xvpp++E52bYlrIv8FII38l3X9cFDD9fttsutjob1g/7tE
5L9s0BN1r+8nZtcGAJOIcWD41QTZb/W935X/niZ0Qf5r/zvBmsl/Wd8TT9QT
l1sT+S8AaeS/rOuH6v5WF+sJ7H+Xi/yXDXrisJp+qM7x22fXBwCTiLF3+ExL
7ntheKPXOZie/Nf+d4I1k/+yvidu2dAT98+uL2lN5L8ApJH/skFPfL2mJ96Z
XRsL7QP73yUi/2WDnrh9Q0/8UXZ9ADCNGHcIrw2fC2eG08LHwour66Hs+mDZ
yX/tfydYM/kv63tiq1L/G8B/m11f0prIfwFII/9lg554dU1PfD+7NhbaB/a/
S0T+ywY9sU04p6YnnpNdHwAA/SP/tf+dYM3kv2zUF8fV9MSHsmtLWg/5LwBp
5L9s0BMPb7iG3yW7PhbWB/a/S0T+S01ffKKmJ96TXRsAAP0j/7X/nWDN5L9s
1BfPremJn2bXlrQe8l8A0sh/2aAnbtxwDX9Adn0srA/sf5eI/JeavnhRTU/8
ILs2AAD6R/5r/zvBmsl/2agv7t3QF7tm15ewHvJfANLIf9mgJzaFM2r64hnZ
9bGwPrD/XSLyX2r64kENfeF+DgAAXIb81/53gjWT/7JRX1yvoS/uk11fwnrI
fwFII/+lpi8+VtMXb8mujYX1gP3vEpH/UtMXN2roi3tk1wcAQL/If+1/J1gz
+S91vfHjmr44LLu2hLWQ/wKQRv5LTV/8Q01ffCW7NhbWA/a/S0T+S01fNN3P
4YnZ9QEA0C/yX/vfCdZM/ktdb3ygpi9el11bwlrIfwFII/+lpi8eVtMX54Wt
sutjIT1g/7tE5L809Ebd/Rz+Nbs2AAD6Rf5r/zvBmsl/qeuNuu+UnJBdW8Ja
yH8BSCP/paYvbtlwHb97dn0spAfsf5eI/JeG3vjnmr74eHZtAAD0i/zX/neC
NZP/Utcbj6rpi7PCpuz6FrwW8l8A0sh/qemL7cLFNb1xn+z6WEgP2P8uEfkv
Db3xuJq+OD27NgAA+kX+a/87wZrJf6nrjTs29MYu2fUteC3kvwCkkf/S0Bvf
q+mNQ7NrYyHH3/53ich/aeiNuzf0xtWz6wMAoD/kv/a/E6yZ/Je63tipoTdu
U/M3W4UHh3eGE8PZ4eTwoXBY2D57XlOuhfwXgDTyXxp64wM1vfGPDX+zV3hl
+HT46ZpPr/3/9sqeExMdf/vfJSL/paE3rtfQGxuel2NsHQ4O7wpfW9t7nxQ+
GJ4SrpY9L2gSY7fwkvCJcFo4M3wuvC7cMbs+AOgr+a/97wRrJv+lqT9+UdMb
D97g3z4wnNLQT5VfhheErbLnNuE6yH8BSCP/paE36n4z8t0b/Nsqe/pQy7Xa
r9eyg12z58ZYx9/+d4nIf2nojS3CuTW9cbn7+cc4qNTf/+ES1V7+OWHL7PnB
5mLsGN4cLmrp4c+GvbPrBYC+KfJf+9/x10z+S1N/fLmmN5662b+pvvP7wlL/
+3Mb+fgy9VeR/wKQqMh/qe+Nw2p644vr/t09yuh7vuNeq1X/dv/s+dF6/O1/
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
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAGBW/g+VyFw6
     "], {{0, 180.}, {465.45454545454544`, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{297, 432}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImagePadding->{{0., 0.}, {0., 0.}},
   ImageSize->{Automatic, 277.96093750000006`},
   ImageSizeRaw->{465.45454545454544`, 180.},
   PlotRange->{{0., 465.45454545454544`}, {0., 180.}},
   PlotRangePadding->Automatic]], "Input",ExpressionUUID->
  "4f19db6e-7943-1d43-8078-0ff484fefc93"]
}], "Text",
 CellChangeTimes->{{3.9290051916542683`*^9, 3.92900526335948*^9}, {
  3.929005305456915*^9, 3.9290053064940243`*^9}, {3.9290111720257225`*^9, 
  3.929011175659069*^9}, {3.9290112329543667`*^9, 3.929011259344923*^9}, {
  3.9290114089177074`*^9, 3.9290114534676933`*^9}, {3.929012248962101*^9, 
  3.9290122601231174`*^9}, {3.9290262509630756`*^9, 3.929026274109133*^9}, {
  3.929027420329729*^9, 
  3.9290274206429005`*^9}},ExpressionUUID->"ddef1cf3-ae58-4f48-b113-\
05bbd59984c3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Built", "-", 
    RowBox[{"In", " ", "XOR"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"xor1", "[", 
      RowBox[{"a_", ",", " ", "b_"}], "]"}], ":=", " ", 
     RowBox[{"Xor", "[", 
      RowBox[{"a", ",", " ", "b"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"XOR", " ", "from", " ", "NAND", " ", "gates"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xor2", "[", 
      RowBox[{"a_", ",", " ", "b_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", "\[Nand]", "a"}], ")"}], "\[Nand]", 
          RowBox[{"(", 
           RowBox[{"b", "\[Nand]", "b"}], ")"}]}], ")"}], "\[Nand]", 
        RowBox[{"(", 
         RowBox[{"a", "\[Nand]", "b"}], ")"}]}], ")"}], "\[Nand]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", "\[Nand]", "a"}], ")"}], "\[Nand]", 
          RowBox[{"(", 
           RowBox[{"b", "\[Nand]", "b"}], ")"}]}], ")"}], "\[Nand]", 
        RowBox[{"(", 
         RowBox[{"a", "\[Nand]", "b"}], ")"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Display", " ", "Truth", " ", "Tables"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"truthTable", "[", "xor1", "]"}], ",", " ", 
      RowBox[{"Spacer", "[", "10", "]"}], ",", " ", 
      RowBox[{"truthTable", "[", "xor2", "]"}]}], "}"}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.929005319630468*^9, 3.9290053622235737`*^9}, {
  3.9290054741186867`*^9, 3.9290055626984043`*^9}, {3.92900698351724*^9, 
  3.929007118122661*^9}, {3.929009515058561*^9, 3.929009517036241*^9}, {
  3.929010814107708*^9, 3.9290108571225815`*^9}, {3.92901097686351*^9, 
  3.929011163832058*^9}, {3.929020063334633*^9, 3.929020067003376*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"d37b91f7-edcb-5f4e-8a32-2b6526556f92"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    GridBox[{{"xor1", "\"0\"", "\"1\""}, {"\"0\"", "0", "1"}, {
      "\"1\"", "1", "0"}}, AutoDelete -> False, 
     GridBoxBackground -> {
      "Columns" -> {{None}}, "Rows" -> {{None}}, 
       "ItemsIndexed" -> {{2, 2} -> RGBColor[1, 0, 0, 0.5], {2, 3} -> 
         RGBColor[0, 1, 0, 0.5], {3, 2} -> RGBColor[0, 1, 0, 0.5], {3, 3} -> 
         RGBColor[1, 0, 0, 0.5]}}, 
     GridBoxDividers -> {
      "ColumnsIndexed" -> {2 -> True}, "RowsIndexed" -> {2 -> True}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
   TemplateBox[{10}, "Spacer1"], 
   TagBox[
    GridBox[{{"xor2", "\"0\"", "\"1\""}, {"\"0\"", "0", "1"}, {
      "\"1\"", "1", "0"}}, AutoDelete -> False, 
     GridBoxBackground -> {
      "Columns" -> {{None}}, "Rows" -> {{None}}, 
       "ItemsIndexed" -> {{2, 2} -> RGBColor[1, 0, 0, 0.5], {2, 3} -> 
         RGBColor[0, 1, 0, 0.5], {3, 2} -> RGBColor[0, 1, 0, 0.5], {3, 3} -> 
         RGBColor[1, 0, 0, 0.5]}}, 
     GridBoxDividers -> {
      "ColumnsIndexed" -> {2 -> True}, "RowsIndexed" -> {2 -> True}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.929007000839805*^9, 3.9290070210387974`*^9}, {
   3.9290070848451347`*^9, 3.929007119775936*^9}, 3.92900950315464*^9, {
   3.92901084331662*^9, 3.929010857515108*^9}, {3.929010978446993*^9, 
   3.929011097008259*^9}, {3.929011162216638*^9, 3.929011164695265*^9}, 
   3.929027413656332*^9, 3.929095439662184*^9, 3.9291049053376255`*^9, 
   3.929110749337166*^9, {3.9291203284231186`*^9, 3.929120355353274*^9}, 
   3.929120949323433*^9, 3.929121147122889*^9, 3.929128232253031*^9, 
   3.929132154228367*^9, 3.929132800473091*^9, 3.929132861118075*^9, 
   3.929174369303194*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"c8b7866b-9745-3a47-b41e-3f5beaadd6e7"]
}, Open  ]],

Cell["\<\
Here is every gate represented with the built-in function, with only NANDs, \
and with only NORs:\
\>", "Text",
 CellChangeTimes->{{3.929011276479088*^9, 3.929011318217745*^9}, {
  3.9290115082128124`*^9, 3.929011518176285*^9}, {3.929011790090948*^9, 
  3.9290117908590126`*^9}, {3.9290118770299187`*^9, 3.92901188408687*^9}, {
  3.929012158136011*^9, 3.9290121798032265`*^9}, {3.9290122415121193`*^9, 
  3.9290122446321964`*^9}, {3.929020088795107*^9, 
  3.9290200972813644`*^9}},ExpressionUUID->"6b9b2105-7e23-6448-9454-\
37d3c893e2c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Universal Function Definitions", "Subsubsection",
 CellChangeTimes->{{3.9290118027441196`*^9, 3.9290118149294834`*^9}, {
   3.929012144697098*^9, 3.9290121469888783`*^9}, 
   3.929012184020939*^9},ExpressionUUID->"4d33db40-88b3-f54a-91b7-\
72e340f40a5f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"and1", "[", 
    RowBox[{"a_", ",", " ", "b_"}], "]"}], ":=", 
   RowBox[{"And", "[", 
    RowBox[{"a", ",", " ", "b"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"and2", "[", 
    RowBox[{"a_", ",", " ", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"a", "\[Nand]", "b"}], ")"}], "\[Nand]", 
    RowBox[{"(", 
     RowBox[{"a", "\[Nand]", "b"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"and3", "[", 
     RowBox[{"a_", ",", " ", "b_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"a", "\[Nor]", "a"}], ")"}], "\[Nor]", 
     RowBox[{"(", 
      RowBox[{"b", "\[Nor]", "b"}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"or1", "[", 
    RowBox[{"a_", ",", " ", "b_"}], "]"}], ":=", 
   RowBox[{"Or", "[", 
    RowBox[{"a", ",", " ", "b"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"or2", "[", 
    RowBox[{"a_", ",", " ", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"a", "\[Nand]", "a"}], ")"}], "\[Nand]", 
    RowBox[{"(", 
     RowBox[{"b", "\[Nand]", "b"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"or3", "[", 
     RowBox[{"a_", ",", " ", "b_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"a", "\[Nor]", "b"}], ")"}], "\[Nor]", 
     RowBox[{"(", 
      RowBox[{"a", "\[Nor]", "b"}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xor1", "[", 
    RowBox[{"a_", ",", " ", "b_"}], "]"}], ":=", 
   RowBox[{"Xor", "[", 
    RowBox[{"a", ",", " ", "b"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xor2", "[", 
    RowBox[{"a_", ",", " ", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a", "\[Nand]", "a"}], ")"}], "\[Nand]", 
        RowBox[{"(", 
         RowBox[{"b", "\[Nand]", "b"}], ")"}]}], ")"}], "\[Nand]", 
      RowBox[{"(", 
       RowBox[{"a", "\[Nand]", "b"}], ")"}]}], ")"}], "\[Nand]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a", "\[Nand]", "a"}], ")"}], "\[Nand]", 
        RowBox[{"(", 
         RowBox[{"b", "\[Nand]", "b"}], ")"}]}], ")"}], "\[Nand]", 
      RowBox[{"(", 
       RowBox[{"a", "\[Nand]", "b"}], ")"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"xor3", "[", 
     RowBox[{"a_", ",", " ", "b_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "\[Nor]", "b"}], ")"}], "\[Nor]", 
         RowBox[{"(", 
          RowBox[{"a", "\[Nor]", "b"}], ")"}]}], ")"}], "\[Nor]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "\[Nor]", "b"}], ")"}], "\[Nor]", 
         RowBox[{"(", 
          RowBox[{"a", "\[Nor]", "b"}], ")"}]}], ")"}]}], ")"}], "\[Nor]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", "\[Nor]", "a"}], ")"}], "\[Nor]", 
       RowBox[{"(", 
        RowBox[{"b", "\[Nor]", "b"}], ")"}]}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nand1", "[", 
    RowBox[{"a_", ",", " ", "b_"}], "]"}], ":=", 
   RowBox[{"Nand", "[", 
    RowBox[{"a", ",", " ", "b"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nand2", "[", 
    RowBox[{"a_", ",", " ", "b_"}], "]"}], ":=", 
   RowBox[{"a", "\[Nand]", "b"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"nand3", "[", 
     RowBox[{"a_", ",", " ", "b_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", "\[Nor]", "a"}], ")"}], "\[Nor]", 
       RowBox[{"(", 
        RowBox[{"b", "\[Nor]", "b"}], ")"}]}], ")"}], "\[Nor]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", "\[Nor]", "a"}], ")"}], "\[Nor]", 
       RowBox[{"(", 
        RowBox[{"b", "\[Nor]", "b"}], ")"}]}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nor1", "[", 
    RowBox[{"a_", ",", " ", "b_"}], "]"}], ":=", 
   RowBox[{"Nor", "[", 
    RowBox[{"a", ",", " ", "b"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nor2", "[", 
    RowBox[{"a_", ",", " ", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a", "\[Nand]", "a"}], ")"}], "\[Nand]", 
      RowBox[{"(", 
       RowBox[{"b", "\[Nand]", "b"}], ")"}]}], ")"}], "\[Nand]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a", "\[Nand]", "a"}], ")"}], "\[Nand]", 
      RowBox[{"(", 
       RowBox[{"b", "\[Nand]", "b"}], ")"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"nor3", "[", 
     RowBox[{"a_", ",", " ", "b_"}], "]"}], ":=", 
    RowBox[{"a", "\[Nor]", "b"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xnor1", "[", 
    RowBox[{"a_", ",", " ", "b_"}], "]"}], ":=", 
   RowBox[{"Xnor", "[", 
    RowBox[{"a", ",", " ", "b"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xnor2", "[", 
    RowBox[{"a_", ",", " ", "b_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", "\[Nand]", "a"}], ")"}], "\[Nand]", 
       RowBox[{"(", 
        RowBox[{"b", "\[Nand]", "b"}], ")"}]}], ")"}], "\[Nand]", 
     RowBox[{"(", 
      RowBox[{"a", "\[Nand]", "b"}], ")"}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xnor3", "[", 
   RowBox[{"a_", ",", " ", "b_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "\[Nor]", "b"}], ")"}], "\[Nor]", 
         RowBox[{"(", 
          RowBox[{"a", "\[Nor]", "b"}], ")"}]}], ")"}], "\[Nor]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "\[Nor]", "b"}], ")"}], "\[Nor]", 
         RowBox[{"(", 
          RowBox[{"a", "\[Nor]", "b"}], ")"}]}], ")"}]}], ")"}], "\[Nor]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", "\[Nor]", "a"}], ")"}], "\[Nor]", 
       RowBox[{"(", 
        RowBox[{"b", "\[Nor]", "b"}], ")"}]}], ")"}]}], ")"}], "\[Nor]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "\[Nor]", "b"}], ")"}], "\[Nor]", 
         RowBox[{"(", 
          RowBox[{"a", "\[Nor]", "b"}], ")"}]}], ")"}], "\[Nor]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "\[Nor]", "b"}], ")"}], "\[Nor]", 
         RowBox[{"(", 
          RowBox[{"a", "\[Nor]", "b"}], ")"}]}], ")"}]}], ")"}], "\[Nor]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", "\[Nor]", "a"}], ")"}], "\[Nor]", 
       RowBox[{"(", 
        RowBox[{"b", "\[Nor]", "b"}], ")"}]}], ")"}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.929011269535969*^9, 3.929011270539191*^9}, {
   3.9290115240509243`*^9, 3.929011787125996*^9}, 3.929011992017573*^9, {
   3.9290121855415573`*^9, 3.929012237672367*^9}, {3.929012270439745*^9, 
   3.929012438293928*^9}, {3.929012490024183*^9, 3.9290125761049976`*^9}, {
   3.929012608231837*^9, 3.929012714641455*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"655eee1d-1c6b-ad4f-840c-90eba3091986"]
}, Closed]],

Cell[CellGroupData[{

Cell["Universal NAND Visualization", "Subsubsection",
 CellChangeTimes->{{3.929011866061344*^9, 3.9290119022589283`*^9}, 
   3.929012149889469*^9},ExpressionUUID->"aa1a102b-71be-8143-91cc-\
02682edd7b24"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Transpose", "@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"truthTable", "[", "#", "]"}], "&"}], "/@", "#"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"and1", ",", " ", "and2", ",", " ", "and3"}], "}"}], ",", 
        " ", 
        RowBox[{"{", 
         RowBox[{"or1", ",", " ", "or2", ",", " ", "or3"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"xor1", ",", " ", "xor2", ",", " ", "xor3"}], "}"}], ",", 
        " ", 
        RowBox[{"{", 
         RowBox[{"nand1", ",", " ", "nand2", ",", " ", "nand3"}], "}"}], ",", 
        " ", 
        RowBox[{"{", 
         RowBox[{"nor1", ",", " ", "nor2", ",", " ", "nor3"}], "}"}], ",", 
        " ", 
        RowBox[{"{", 
         RowBox[{"xnor1", ",", " ", "xnor2", ",", " ", "xnor3"}], "}"}]}], 
       "}"}]}], ")"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Spacings", "->", 
    RowBox[{"{", 
     RowBox[{"3", ",", " ", "2"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.929011908717615*^9, 3.929012113057245*^9}, {
  3.92901244203986*^9, 3.929012474941648*^9}, {3.9291205902332535`*^9, 
  3.929120643272396*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"5f2d0c69-f131-4d40-a905-36a7f0b658a9"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {"and1", "\<\"0\"\>", "\<\"1\"\>"},
        {"\<\"0\"\>", "0", "0"},
        {"\<\"1\"\>", "0", "1"}
       },
       AutoDelete->False,
       GridBoxBackground->{
        "Columns" -> {{None}}, "Rows" -> {{None}}, 
         "ItemsIndexed" -> {{2, 2} -> RGBColor[1, 0, 0, 0.5], {2, 3} -> 
           RGBColor[1, 0, 0, 0.5], {3, 2} -> RGBColor[1, 0, 0, 0.5], {3, 3} -> 
           RGBColor[0, 1, 0, 0.5]}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> True}, "RowsIndexed" -> {2 -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"or1", "\<\"0\"\>", "\<\"1\"\>"},
        {"\<\"0\"\>", "0", "1"},
        {"\<\"1\"\>", "1", "1"}
       },
       AutoDelete->False,
       GridBoxBackground->{
        "Columns" -> {{None}}, "Rows" -> {{None}}, 
         "ItemsIndexed" -> {{2, 2} -> RGBColor[1, 0, 0, 0.5], {2, 3} -> 
           RGBColor[0, 1, 0, 0.5], {3, 2} -> RGBColor[0, 1, 0, 0.5], {3, 3} -> 
           RGBColor[0, 1, 0, 0.5]}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> True}, "RowsIndexed" -> {2 -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"xor1", "\<\"0\"\>", "\<\"1\"\>"},
        {"\<\"0\"\>", "0", "1"},
        {"\<\"1\"\>", "1", "0"}
       },
       AutoDelete->False,
       GridBoxBackground->{
        "Columns" -> {{None}}, "Rows" -> {{None}}, 
         "ItemsIndexed" -> {{2, 2} -> RGBColor[1, 0, 0, 0.5], {2, 3} -> 
           RGBColor[0, 1, 0, 0.5], {3, 2} -> RGBColor[0, 1, 0, 0.5], {3, 3} -> 
           RGBColor[1, 0, 0, 0.5]}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> True}, "RowsIndexed" -> {2 -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"nand1", "\<\"0\"\>", "\<\"1\"\>"},
        {"\<\"0\"\>", "1", "1"},
        {"\<\"1\"\>", "1", "0"}
       },
       AutoDelete->False,
       GridBoxBackground->{
        "Columns" -> {{None}}, "Rows" -> {{None}}, 
         "ItemsIndexed" -> {{2, 2} -> RGBColor[0, 1, 0, 0.5], {2, 3} -> 
           RGBColor[0, 1, 0, 0.5], {3, 2} -> RGBColor[0, 1, 0, 0.5], {3, 3} -> 
           RGBColor[1, 0, 0, 0.5]}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> True}, "RowsIndexed" -> {2 -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"nor1", "\<\"0\"\>", "\<\"1\"\>"},
        {"\<\"0\"\>", "1", "0"},
        {"\<\"1\"\>", "0", "0"}
       },
       AutoDelete->False,
       GridBoxBackground->{
        "Columns" -> {{None}}, "Rows" -> {{None}}, 
         "ItemsIndexed" -> {{2, 2} -> RGBColor[0, 1, 0, 0.5], {2, 3} -> 
           RGBColor[1, 0, 0, 0.5], {3, 2} -> RGBColor[1, 0, 0, 0.5], {3, 3} -> 
           RGBColor[1, 0, 0, 0.5]}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> True}, "RowsIndexed" -> {2 -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"xnor1", "\<\"0\"\>", "\<\"1\"\>"},
        {"\<\"0\"\>", "1", "0"},
        {"\<\"1\"\>", "0", "1"}
       },
       AutoDelete->False,
       GridBoxBackground->{
        "Columns" -> {{None}}, "Rows" -> {{None}}, 
         "ItemsIndexed" -> {{2, 2} -> RGBColor[0, 1, 0, 0.5], {2, 3} -> 
           RGBColor[1, 0, 0, 0.5], {3, 2} -> RGBColor[1, 0, 0, 0.5], {3, 3} -> 
           RGBColor[0, 1, 0, 0.5]}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> True}, "RowsIndexed" -> {2 -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {"and2", "\<\"0\"\>", "\<\"1\"\>"},
        {"\<\"0\"\>", "0", "0"},
        {"\<\"1\"\>", "0", "1"}
       },
       AutoDelete->False,
       GridBoxBackground->{
        "Columns" -> {{None}}, "Rows" -> {{None}}, 
         "ItemsIndexed" -> {{2, 2} -> RGBColor[1, 0, 0, 0.5], {2, 3} -> 
           RGBColor[1, 0, 0, 0.5], {3, 2} -> RGBColor[1, 0, 0, 0.5], {3, 3} -> 
           RGBColor[0, 1, 0, 0.5]}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> True}, "RowsIndexed" -> {2 -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"or2", "\<\"0\"\>", "\<\"1\"\>"},
        {"\<\"0\"\>", "0", "1"},
        {"\<\"1\"\>", "1", "1"}
       },
       AutoDelete->False,
       GridBoxBackground->{
        "Columns" -> {{None}}, "Rows" -> {{None}}, 
         "ItemsIndexed" -> {{2, 2} -> RGBColor[1, 0, 0, 0.5], {2, 3} -> 
           RGBColor[0, 1, 0, 0.5], {3, 2} -> RGBColor[0, 1, 0, 0.5], {3, 3} -> 
           RGBColor[0, 1, 0, 0.5]}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> True}, "RowsIndexed" -> {2 -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"xor2", "\<\"0\"\>", "\<\"1\"\>"},
        {"\<\"0\"\>", "0", "1"},
        {"\<\"1\"\>", "1", "0"}
       },
       AutoDelete->False,
       GridBoxBackground->{
        "Columns" -> {{None}}, "Rows" -> {{None}}, 
         "ItemsIndexed" -> {{2, 2} -> RGBColor[1, 0, 0, 0.5], {2, 3} -> 
           RGBColor[0, 1, 0, 0.5], {3, 2} -> RGBColor[0, 1, 0, 0.5], {3, 3} -> 
           RGBColor[1, 0, 0, 0.5]}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> True}, "RowsIndexed" -> {2 -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"nand2", "\<\"0\"\>", "\<\"1\"\>"},
        {"\<\"0\"\>", "1", "1"},
        {"\<\"1\"\>", "1", "0"}
       },
       AutoDelete->False,
       GridBoxBackground->{
        "Columns" -> {{None}}, "Rows" -> {{None}}, 
         "ItemsIndexed" -> {{2, 2} -> RGBColor[0, 1, 0, 0.5], {2, 3} -> 
           RGBColor[0, 1, 0, 0.5], {3, 2} -> RGBColor[0, 1, 0, 0.5], {3, 3} -> 
           RGBColor[1, 0, 0, 0.5]}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> True}, "RowsIndexed" -> {2 -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"nor2", "\<\"0\"\>", "\<\"1\"\>"},
        {"\<\"0\"\>", "1", "0"},
        {"\<\"1\"\>", "0", "0"}
       },
       AutoDelete->False,
       GridBoxBackground->{
        "Columns" -> {{None}}, "Rows" -> {{None}}, 
         "ItemsIndexed" -> {{2, 2} -> RGBColor[0, 1, 0, 0.5], {2, 3} -> 
           RGBColor[1, 0, 0, 0.5], {3, 2} -> RGBColor[1, 0, 0, 0.5], {3, 3} -> 
           RGBColor[1, 0, 0, 0.5]}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> True}, "RowsIndexed" -> {2 -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"xnor2", "\<\"0\"\>", "\<\"1\"\>"},
        {"\<\"0\"\>", "1", "0"},
        {"\<\"1\"\>", "0", "1"}
       },
       AutoDelete->False,
       GridBoxBackground->{
        "Columns" -> {{None}}, "Rows" -> {{None}}, 
         "ItemsIndexed" -> {{2, 2} -> RGBColor[0, 1, 0, 0.5], {2, 3} -> 
           RGBColor[1, 0, 0, 0.5], {3, 2} -> RGBColor[1, 0, 0, 0.5], {3, 3} -> 
           RGBColor[0, 1, 0, 0.5]}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> True}, "RowsIndexed" -> {2 -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {"and3", "\<\"0\"\>", "\<\"1\"\>"},
        {"\<\"0\"\>", "0", "0"},
        {"\<\"1\"\>", "0", "1"}
       },
       AutoDelete->False,
       GridBoxBackground->{
        "Columns" -> {{None}}, "Rows" -> {{None}}, 
         "ItemsIndexed" -> {{2, 2} -> RGBColor[1, 0, 0, 0.5], {2, 3} -> 
           RGBColor[1, 0, 0, 0.5], {3, 2} -> RGBColor[1, 0, 0, 0.5], {3, 3} -> 
           RGBColor[0, 1, 0, 0.5]}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> True}, "RowsIndexed" -> {2 -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"or3", "\<\"0\"\>", "\<\"1\"\>"},
        {"\<\"0\"\>", "0", "1"},
        {"\<\"1\"\>", "1", "1"}
       },
       AutoDelete->False,
       GridBoxBackground->{
        "Columns" -> {{None}}, "Rows" -> {{None}}, 
         "ItemsIndexed" -> {{2, 2} -> RGBColor[1, 0, 0, 0.5], {2, 3} -> 
           RGBColor[0, 1, 0, 0.5], {3, 2} -> RGBColor[0, 1, 0, 0.5], {3, 3} -> 
           RGBColor[0, 1, 0, 0.5]}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> True}, "RowsIndexed" -> {2 -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"xor3", "\<\"0\"\>", "\<\"1\"\>"},
        {"\<\"0\"\>", "0", "1"},
        {"\<\"1\"\>", "1", "0"}
       },
       AutoDelete->False,
       GridBoxBackground->{
        "Columns" -> {{None}}, "Rows" -> {{None}}, 
         "ItemsIndexed" -> {{2, 2} -> RGBColor[1, 0, 0, 0.5], {2, 3} -> 
           RGBColor[0, 1, 0, 0.5], {3, 2} -> RGBColor[0, 1, 0, 0.5], {3, 3} -> 
           RGBColor[1, 0, 0, 0.5]}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> True}, "RowsIndexed" -> {2 -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"nand3", "\<\"0\"\>", "\<\"1\"\>"},
        {"\<\"0\"\>", "1", "1"},
        {"\<\"1\"\>", "1", "0"}
       },
       AutoDelete->False,
       GridBoxBackground->{
        "Columns" -> {{None}}, "Rows" -> {{None}}, 
         "ItemsIndexed" -> {{2, 2} -> RGBColor[0, 1, 0, 0.5], {2, 3} -> 
           RGBColor[0, 1, 0, 0.5], {3, 2} -> RGBColor[0, 1, 0, 0.5], {3, 3} -> 
           RGBColor[1, 0, 0, 0.5]}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> True}, "RowsIndexed" -> {2 -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"nor3", "\<\"0\"\>", "\<\"1\"\>"},
        {"\<\"0\"\>", "1", "0"},
        {"\<\"1\"\>", "0", "0"}
       },
       AutoDelete->False,
       GridBoxBackground->{
        "Columns" -> {{None}}, "Rows" -> {{None}}, 
         "ItemsIndexed" -> {{2, 2} -> RGBColor[0, 1, 0, 0.5], {2, 3} -> 
           RGBColor[1, 0, 0, 0.5], {3, 2} -> RGBColor[1, 0, 0, 0.5], {3, 3} -> 
           RGBColor[1, 0, 0, 0.5]}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> True}, "RowsIndexed" -> {2 -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"xnor3", "\<\"0\"\>", "\<\"1\"\>"},
        {"\<\"0\"\>", "1", "0"},
        {"\<\"1\"\>", "0", "1"}
       },
       AutoDelete->False,
       GridBoxBackground->{
        "Columns" -> {{None}}, "Rows" -> {{None}}, 
         "ItemsIndexed" -> {{2, 2} -> RGBColor[0, 1, 0, 0.5], {2, 3} -> 
           RGBColor[1, 0, 0, 0.5], {3, 2} -> RGBColor[1, 0, 0, 0.5], {3, 3} -> 
           RGBColor[0, 1, 0, 0.5]}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> True}, "RowsIndexed" -> {2 -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{3}}, "Rows" -> {{2}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.929120638375567*^9, 3.929120949576817*^9, 
  3.929121147333071*^9, 3.929128232449671*^9, 3.929132154378475*^9, 
  3.92913280071867*^9, 3.929132861298397*^9, 3.929174369449953*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"b1674e54-f170-7642-8b96-203ad4bd8733"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["State Vector Representation of Operations", "Subsection",
 CellChangeTimes->{{3.9290199078994217`*^9, 
  3.9290199236939735`*^9}},ExpressionUUID->"a662f355-b1c9-c644-a2a3-\
3eb54da3d785"],

Cell["\<\
Classical 2\[Rule]1 gates are usually considered to be a function with two \
inputs and one output. However, there is an alternative interpretation of \
gates as a linear operation on a unit basis vector representing the systems \
total state. This allows for all operations to be represented as matrix \
multiplications, and generalizes easily to quantum circuits.\
\>", "Text",
 CellChangeTimes->{{3.929019928636997*^9, 3.9290199362682304`*^9}, {
  3.9290201025476017`*^9, 3.9290202057764072`*^9}, {3.9290202866172867`*^9, 
  3.9290203603223934`*^9}},ExpressionUUID->"53771d7a-aeaf-9843-b25b-\
034f8356cf13"],

Cell[CellGroupData[{

Cell["State Vector", "Subsubsection",
 CellChangeTimes->{{3.9290203672607975`*^9, 
  3.929020369740141*^9}},ExpressionUUID->"b7d193ef-b3a6-a842-b630-\
17658764fab9"],

Cell["Let   \[DoubleStruckCapitalB]   be   the   set   of   binary   numbers  \
 {0, 1} .", "Item",
 CellChangeTimes->{{3.92902139745277*^9, 
  3.9290214348078117`*^9}},ExpressionUUID->"19d998e7-3a29-d34f-9262-\
301168cc19c3"],

Cell[TextData[{
 "An n-bit system can be represented with a vector in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalB]", "n"], TraditionalForm]],
  ExpressionUUID->"45d9e858-bb08-ca43-b717-85942c43544b"],
 ", such that each dimension of the vector corresponds to a bit in the state. \
A gate can be considered to be an association of each input \
state\[LongDash]of the  total ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SuperscriptBox["2", 
        StyleBox["n", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
     "2^{n}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "05679d9d-e303-8f40-abc7-85f3d85ca826"],
 " possible states\[LongDash]to a specific output state.\nA vector can be \
constructed in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalB]", 
    SuperscriptBox["2", "n"]], TraditionalForm]],ExpressionUUID->
  "5eece91d-bd0b-1844-8eb1-801d1a4f9d75"],
 " so that each dimension corresponds to a possible state. Thus, a unit basis \
vector of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalB]", 
    SuperscriptBox["2", "n"]], TraditionalForm]],ExpressionUUID->
  "323a3d91-3530-754e-a49f-1fed8aed1f29"],
 " represents one singular state. A matrix transforms the ith basis vector ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["e", "i"], TraditionalForm]],ExpressionUUID->
  "b5dbe0c8-9aae-6847-83e4-61ba054e6519"],
 " to the ith column in the matrix ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["V", "i"], TraditionalForm]],ExpressionUUID->
  "5637c772-6ba0-e74e-be22-fb33cb724050"],
 "."
}], "Text",
 CellChangeTimes->{{3.9290203738204346`*^9, 3.929020418534069*^9}, {
  3.9290204571595097`*^9, 3.92902061451639*^9}, {3.929020681540222*^9, 
  3.9290209223417625`*^9}, {3.929020953063612*^9, 3.929021146498823*^9}, {
  3.929021193080871*^9, 3.9290213868543015`*^9}, {3.929021436234565*^9, 
  3.929021720305769*^9}, {3.929021767391714*^9, 3.929021823140129*^9}, {
  3.929021854764044*^9, 
  3.929021945713038*^9}},ExpressionUUID->"678816f6-3a56-2a46-b459-\
2320030358a5"],

Cell[TextData[{
 "For example, in the 4-bit binary system 1011, there are ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SuperscriptBox["2", "4"], "\[LongEqual]", "16"}], TraditionalForm], 
     "errors" -> {}, "input" -> "2^{4} = 16", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "00e73240-b4fa-c34b-a282-4f866a05b0af"],
 " possible states, so the 16-dimensional state vector representing this \
system is [",
 Cell[BoxData[GridBox[{
    {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", 
     "0", "0"}
   }]],ExpressionUUID->"cfb6831f-a704-304d-9d85-85b06bd1c12f"],
 "].\nNote that the state vector of the binary number n (11 in this example) \
is the basis vector ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["e", "n"], TraditionalForm]],ExpressionUUID->
  "1e25857c-bfcf-4d49-8d8d-c840447b9af8"],
 ", assuming the vector is indexed from 0."
}], "Text",
 CellChangeTimes->{{3.929021948338394*^9, 3.929022130090183*^9}, {
  3.929022162866705*^9, 3.929022406285427*^9}, {3.9290224652933464`*^9, 
  3.9290226072273045`*^9}},ExpressionUUID->"1647efcd-d688-1c42-8032-\
5340aad37fe2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Gate Application to a State Vector", "Subsubsection",
 CellChangeTimes->{{3.929022585627434*^9, 
  3.929022600357172*^9}},ExpressionUUID->"8b785a51-71ed-694c-aeb9-\
12a2b1141b82"],

Cell[TextData[{
 "A matrix M = [",
 Cell[BoxData[GridBox[{
    {
     SubscriptBox["V", "0"], 
     SubscriptBox["V", "1"], 
     SubscriptBox["V", "2"], 
     SubscriptBox["V", "3"], 
     SubscriptBox["V", "4"], 
     SubscriptBox["V", "5"], 
     SubscriptBox["V", "6"], 
     SubscriptBox["V", "7"], 
     SubscriptBox["V", "8"], 
     SubscriptBox["V", "9"], 
     SubscriptBox["V", "10"], 
     SubscriptBox["V", "11"], 
     SubscriptBox["V", "12"], 
     SubscriptBox["V", "13"], 
     SubscriptBox["V", "14"], 
     SubscriptBox["V", "15"]}
   }]],ExpressionUUID->"339b891e-769c-674f-982f-4bf242f6095e"],
 "], where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["V", "i"], "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalB]", 
     SuperscriptBox["2", "n"]]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "4997c805-786b-b647-ba5f-f1843ad4ded8"],
 ", takes the ith basis vector to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["V", "i"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "06fc2306-3c48-4343-bac1-edad0990acee"],
 " (i.e., ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"M", "\[Application]", 
     SubscriptBox["e", "i"]}], "=", 
    SubscriptBox["V", "i"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "271e3b49-3ee7-0442-85d4-50df0521bf39"],
 ").\nThis means that M can associate each basis vector ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["e", "i"], TraditionalForm]],ExpressionUUID->
  "a0645190-51e7-cc4f-bc23-f98780bcd668"],
 " to a specific output vector ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["V", "i"], TraditionalForm]],ExpressionUUID->
  "5f581388-fb0b-7643-83d5-f2e079c14bd9"],
 ", so, by our definition of a gate operation, this matrix can apply any \
arbitrary gate."
}], "Text",
 CellChangeTimes->{{3.929022605298382*^9, 3.9290228068133297`*^9}, {
  3.92902286468482*^9, 
  3.9290229015984135`*^9}},ExpressionUUID->"f7a53cbb-a28c-1045-b619-\
054f13e4af44"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Motivation", "Subsubsection",
 CellChangeTimes->{{3.92902290901667*^9, 
  3.9290229106940804`*^9}},ExpressionUUID->"ddbbd4e7-9663-bb45-8744-\
ef4dc96baa6e"],

Cell[TextData[{
 "The reason for representing gates as matrix multiplication is two-fold:\n\
Firstly, in this representation, all gates are linear transformations, which \
can be easily composed and reasoned about. A whole circuit, made up of many \
gate operations, can be simplified to just a single matrix. Thus, the problem \
of determining whether a set of gates is universal is equivalent to the \
problem of whether every gate matrix can be decomposed into a product of \
elements in that set.\nSecondly, quantum systems exhibit phenomena such as \
superposition and entanglement, in which a quantum state may be in a linear \
combination of multiple states at the same time, and in which a full state \
can not be represented as the tensor product of individual qubit states, \
respectively. This means that an n-bit quantum state can be represented by a \
vector on the complex unit hypersphere of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalC]", 
    SuperscriptBox["2", "n"]], TraditionalForm]],ExpressionUUID->
  "20e5679c-8c74-e94b-8055-935ca56e854c"],
 ". The reason it must be on the unit hypersphere is because the magnitude of \
the vector must be equal to one, which is equivalent to the statement that \
the sum of the probabilities of the states of a random system is one."
}], "Text",
 CellChangeTimes->{{3.929022915289667*^9, 3.929023293515821*^9}, {
   3.929023325750469*^9, 3.929023427376747*^9}, {3.9290234881355953`*^9, 
   3.9290235672031*^9}, {3.929023663554655*^9, 3.929023665279951*^9}, 
   3.92902378783358*^9},ExpressionUUID->"6bcabcd1-dda2-1b49-b788-\
e96eac65faf0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Universal Quantum Gate Sets", "Subsection",
 CellChangeTimes->{{3.9290238429862537`*^9, 
  3.9290238475651016`*^9}},ExpressionUUID->"0017b0c0-feb9-7c48-a85a-\
782006d2132d"],

Cell["TODO", "Text",
 CellChangeTimes->{{3.929023851157484*^9, 
  3.9290238516908073`*^9}},ExpressionUUID->"2fb752b8-9d8b-5b4b-b917-\
0b69e2517b16"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Implementation", "Section",
 CellChangeTimes->{{3.929023858071781*^9, 
  3.9290238610814304`*^9}},ExpressionUUID->"760fe22a-f891-904a-9581-\
e8b81d56d627"],

Cell[CellGroupData[{

Cell["Helper Functions for Boolean State Vectors", "Subsection",
 CellChangeTimes->{{3.928922756164833*^9, 3.9289227628082676`*^9}, {
  3.9290240036120377`*^9, 3.929024009302683*^9}, {3.929024374402212*^9, 
  3.9290243784616985`*^9}},ExpressionUUID->"caf4a320-4e6c-0847-9fd4-\
562c9cb78f6b"],

Cell[CellGroupData[{

Cell["Booleans", "Subsubsection",
 CellChangeTimes->{{3.9289227681024947`*^9, 
  3.928922791409212*^9}},ExpressionUUID->"fa9ae2a6-ccdc-1447-9ee5-\
400f423a2932"],

Cell["\<\
Here are a variety of helper functions which convert between bools (b), \
integers (i), and state vectors (v):\
\>", "Text",
 CellChangeTimes->{{3.929024013582949*^9, 3.9290241037731*^9}, {
  3.929120820082821*^9, 
  3.929120906772253*^9}},ExpressionUUID->"312203f0-125f-9d4d-9432-\
65cd56234cfb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"b2i", "[", "b_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{"b", ",", " ", "1", ",", " ", "0"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"b2i", "[", "b_List", "]"}], ":=", 
   RowBox[{"b2i", "/@", "b"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"b2v", "[", "b_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{"b", ",", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", " ", "1"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "0"}], "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"i2v", "[", "b_Integer", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"b", "==", "1"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", " ", "1"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "0"}], "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"v2i", "[", 
   RowBox[{"{", 
    RowBox[{"v1_Integer", ",", " ", "v2_Integer"}], "}"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"v1", "*", "1"}], "+", 
   RowBox[{"v2", "*", "0"}]}]}]}], "Code",
 CellChangeTimes->{
  3.92892256693652*^9, 3.929024068967882*^9, {3.929026871694538*^9, 
   3.9290268731051464`*^9}, {3.929120726783047*^9, 3.929120780823021*^9}, {
   3.929132062610558*^9, 3.929132068649174*^9}, {3.929132130338344*^9, 
   3.929132149589054*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"1ad0717f-f510-ff41-9de8-1d18b163a836"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tensors and State Construction", "Subsubsection",
 CellChangeTimes->{{3.928922778780348*^9, 
  3.9289227852589874`*^9}},ExpressionUUID->"1dd3c670-4610-0947-aee2-\
7f934b749f29"],

Cell["\<\
A state containing multiple bits is constructed by taking the tensor product \
of each consecutive bit\[CloseCurlyQuote]s state. tensor takes the tensor \
product of vectors, and fullState constructs the state vector of a list of \
boolean values.\
\>", "Text",
 CellChangeTimes->{{3.9290241087421703`*^9, 3.9290241387318745`*^9}, {
  3.929024282126713*^9, 
  3.9290243397502327`*^9}},ExpressionUUID->"9e7f7b5f-e4a4-ac48-b966-\
464e6bfb0085"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tensor", "[", "v__", "]"}], " ", ":=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{"TensorProduct", "[", "v", "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"fullState", "[", "b_List", "]"}], ":=", 
  RowBox[{"tensor", "@@", 
   RowBox[{"i2v", "/@", "b"}]}]}]}], "Code",
 CellChangeTimes->{{3.928922576965088*^9, 3.928922609691492*^9}, {
  3.928922712151469*^9, 3.928922725271443*^9}, {3.929120806382923*^9, 
  3.929120806453327*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"745baf0d-cbb8-4549-a20a-ef9780d6547d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matrix Definitions", "Subsection",
 CellChangeTimes->{{3.929024553903578*^9, 3.929024569301647*^9}, {
  3.929024632732279*^9, 
  3.9290246377186737`*^9}},ExpressionUUID->"4173d69e-77aa-7b4d-87c6-\
8f52e2d69bf7"],

Cell[TextData[{
 "Each matrix representing an operation has a different form. For example, \
the NOT matrix is {{0, 1}, {1, 0}}.\nSome matrices are constant and worked \
out by hand beforehand.\nOther matrix operations may need arguments, and so \
has to be computed. This is done by computing the desired output for each \
input, then representing the inputs and outputs as state vectors, then \
constructing the M matrix from each output ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["V", "i"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "43f5ad98-6867-ff4a-88d9-5c2ec801988b"],
 "."
}], "Text",
 CellChangeTimes->{{3.9290246581029205`*^9, 
  3.929024838670952*^9}},ExpressionUUID->"ca6c2daf-0e3c-e44c-8b65-\
f51f205dc383"],

Cell[CellGroupData[{

Cell["Constant Matrices", "Subsubsection",
 CellChangeTimes->{{3.92902484389233*^9, 
  3.9290248545235634`*^9}},ExpressionUUID->"432eeefa-7e0f-4d44-9812-\
fdd59a116d6d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"I2", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "0"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Identity", " ", "Matrix"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"matrixNot", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "1"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "0"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"matrixCopy", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "0", ",", " ", "0", ",", " ", "0"}], "}"}], ",",
       " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "1", ",", " ", "0", ",", " ", "0"}], "}"}], ",",
       " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0", ",", " ", "0", ",", " ", "1"}], "}"}], ",",
       " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0", ",", " ", "1", ",", " ", "0"}], "}"}]}], 
     "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Depricated", " ", "for", " ", "Arbitrary", " ", "Matrix", " ", 
    "Decomposition", " ", "Use"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matrixNand", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "1", ",", " ", "0"}], "}"}]}], 
    "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"matrixNor", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "1", ",", " ", "1"}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "0", ",", " ", "0"}], "}"}]}], 
    "}"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.929024871036621*^9, 3.929024910981871*^9}, {
  3.92902570079295*^9, 3.929025701154343*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"3df4077d-619e-8a49-ac65-a1329f9cdefe"],

Cell["Here is a visualization of each of those matrices:", "Text",
 CellChangeTimes->{{3.929025704525118*^9, 
  3.929025715907835*^9}},ExpressionUUID->"223dc3a4-b8a9-3648-810c-\
29ff3b71979a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "/@", 
  RowBox[{"{", 
   RowBox[{
   "I2", ",", " ", "matrixNot", ",", " ", "matrixCopy", ",", " ", 
    "matrixNand", ",", " ", "matrixNor"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9290256588990154`*^9, 3.9290256988499546`*^9}, {
  3.929115256819351*^9, 3.9291152573072414`*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"b0420c86-00f2-0042-a30b-8b87ce3ff955"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[RasterBox[{{1, 0}, {0, 1}}, {{0, 0}, {2, 2}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[RasterBox[{{0, 1}, {1, 0}}, {{0, 0}, {2, 2}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[
    RasterBox[{{1, 1, 0, 1}, {1, 1, 1, 0}, {1, 0, 1, 1}, {0, 1, 1, 1}}, {{0, 
     0}, {4, 4}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[
    RasterBox[{{1, 1, 0, 1}, {1, 1, 1, 0}, {0, 0, 1, 1}, {1, 1, 1, 1}}, {{0, 
     0}, {4, 4}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[
    RasterBox[{{1, 1, 1, 1}, {1, 1, 0, 0}, {0, 1, 1, 1}, {1, 0, 1, 1}}, {{0, 
     0}, {4, 4}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.929025719278667*^9, 3.929027414330776*^9, 
  3.929095440469047*^9, 3.9291049063028755`*^9, 3.929110750233328*^9, 
  3.929115257734682*^9, 3.9291203564422836`*^9, 3.929120949813345*^9, 
  3.929121147608727*^9, 3.929128232639998*^9, 3.9291321545377254`*^9, 
  3.929132800973587*^9, 3.929132861642779*^9, 3.9291743696076126`*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"52a26a26-618d-774b-be66-0146c75de17e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Computed Matrices", "Subsubsection",
 CellChangeTimes->{{3.929024926679039*^9, 
  3.929024964454048*^9}},ExpressionUUID->"d7ec9d17-6f07-5e4e-acf7-\
c80c02888c95"],

Cell["Swap switches two bits at positions s1 and s2.", "Text",
 CellChangeTimes->{{3.9290249928881207`*^9, 3.9290250041763287`*^9}, {
  3.929025762523844*^9, 
  3.929025766113388*^9}},ExpressionUUID->"75ebebd8-dc4b-ce45-a002-\
239b3c47223b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Vi1", "[", 
   RowBox[{"i_", ",", " ", "n_", ",", " ", "s1_", ",", " ", "s2_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"bv", ",", " ", "sbv"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"bv", "=", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"i", ",", " ", "2", ",", " ", "n"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sbv", "=", 
      RowBox[{"fullState", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"bv", "[", 
          RowBox[{"[", 
           RowBox[{"Switch", "[", 
            RowBox[{
            "j", ",", " ", "s1", ",", " ", "s2", ",", " ", "s2", ",", " ", 
             "s1", ",", " ", "_", ",", " ", "j"}], "]"}], "]"}], "]"}], ",", 
         " ", 
         RowBox[{"{", 
          RowBox[{"j", ",", "n"}], "}"}]}], "]"}], "]"}]}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matrixSwap", "[", 
   RowBox[{"n_", ",", " ", "s1_", ",", " ", "s2_"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Vi1", "[", 
     RowBox[{"i", ",", " ", "n", ",", " ", "s1", ",", " ", "s2"}], "]"}], ",",
     " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "0", ",", " ", 
      RowBox[{
       RowBox[{"2", "^", "n"}], "-", "1"}]}], "}"}]}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.9288510822545776`*^9, 3.928851086441313*^9}, {
   3.9289392643650246`*^9, 3.928939266734371*^9}, {3.928939351786428*^9, 
   3.928939408698763*^9}, {3.928939444572836*^9, 3.928939446645275*^9}, {
   3.928939865529436*^9, 3.928939882064575*^9}, 3.928939975060416*^9, {
   3.928940184706484*^9, 3.928940245093708*^9}, 3.929025007218689*^9},
 CellLabel->"In[82]:=",ExpressionUUID->"15949cfe-1040-ac4b-903e-874a9c42dbc5"],

Cell["\<\
Return reduces the number of bits, thereby creating a smaller subset of the \
original bits to use as an output.\
\>", "Text",
 CellChangeTimes->{{3.929025010070915*^9, 
  3.9290250356606903`*^9}},ExpressionUUID->"491cf179-00a2-ef4e-8c6f-\
a711ba372b0f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Vi2", "[", 
   RowBox[{"i_", ",", " ", "n_", ",", " ", "s1_", ",", " ", "s2_"}], "]"}], ":=", 
  RowBox[{"tensor", "@@", 
   RowBox[{"i2v", "/@", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"i", ",", " ", "2", ",", " ", "n"}], "]"}], ")"}], "[", 
     RowBox[{"[", 
      RowBox[{"Span", "[", 
       RowBox[{"s1", ",", " ", "s2"}], "]"}], "]"}], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matrixReturn", "[", 
   RowBox[{"n_", ",", " ", "s1_", ",", " ", "s2_"}], "]"}], ":=", 
  RowBox[{"Transpose", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Vi2", "[", 
      RowBox[{"#", ",", " ", "n", ",", " ", "s1", ",", " ", "s2"}], "]"}], 
     "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", " ", 
      RowBox[{
       RowBox[{"2", "^", "n"}], "-", "1"}]}], "]"}]}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.9288510972229614`*^9, 3.928851105951237*^9}, {
  3.928923379105612*^9, 3.928923391297179*^9}, {3.9290250392846737`*^9, 
  3.929025040398243*^9}, {3.929120814372988*^9, 3.929120815716988*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"0482a508-42fb-ae4d-aeb7-4ae5621bc399"],

Cell[TextData[{
 "For example, here is how a state vector of length ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["2", "5"], "=", "32"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9929710d-3c12-ef49-b441-420670d36c3c"],
 " is reduced to a single bit state vector:"
}], "Text",
 CellChangeTimes->{{3.9291785460000935`*^9, 
  3.9291785953935814`*^9}},ExpressionUUID->"8b8156cf-1288-c047-a907-\
b337ba10116d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"matrixReturn", "[", 
   RowBox[{"5", ",", " ", "1", ",", " ", "1"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.929092934051592*^9, 3.929092968981497*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"4dc028a2-1203-5d49-9314-3c7e4602c86d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.929092940961043*^9, 3.92909296937813*^9}, 
   3.9290954406167297`*^9, {3.929104902401472*^9, 3.929104906413969*^9}, {
   3.929110738825152*^9, 3.929110750397892*^9}, 3.929120356634545*^9, 
   3.929120950053604*^9, 3.929121147806088*^9, 3.929128202200594*^9, 
   3.929128232800392*^9, 3.929132154652832*^9, {3.9291327955110416`*^9, 
   3.929132821198555*^9}, 3.9291328617927246`*^9, 3.9291741355197735`*^9, 
   3.929174369723055*^9},
 CellLabel->
  "Out[86]//MatrixForm=",ExpressionUUID->"3fa3de64-d4f5-9a4f-a1e5-\
80c9c2932eb9"]
}, Open  ]],

Cell[TextData[{
 "Expand increases the number of bits, initializing the circuit to a \
particular state, either of the form\nmatrixZeroExpand[a, b] \[Rule] ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[VerticalLine]ab0000", "..."}], "\[RightAngleBracket]"}], 
   TraditionalForm]],ExpressionUUID->"3203929d-845a-7147-a7bd-c04bb9ef3183"],
 "\nor\nmatrixRepeatExpand[a, b] \[Rule] ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[VerticalLine]ababab", "..."}], "\[RightAngleBracket]"}], 
   TraditionalForm]],ExpressionUUID->"ad628dab-8bdb-cc4a-b8a5-87cc68825ad7"],
 "."
}], "Text",
 CellChangeTimes->{{3.929025044523081*^9, 3.9290251402245617`*^9}, {
  3.92902517147414*^9, 3.92902517147414*^9}, {3.9290252451673*^9, 
  3.9290253163668747`*^9}, {3.9290253611565666`*^9, 3.9290253611565666`*^9}, {
  3.929025397451517*^9, 3.9290254972575817`*^9}, {3.929025769547678*^9, 
  3.92902577520936*^9}, {3.929178605032051*^9, 
  3.9291786116344376`*^9}},ExpressionUUID->"278b03c9-35d6-cb4f-9504-\
2f78f5f39e9c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"matrixZeroExpand", "[", 
    RowBox[{"n_", ",", " ", "s1_", ",", " ", "s2_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\[Omega]1", ",", " ", "\[Omega]2", ",", " ", "\[CapitalOmega]1", ",", 
        " ", "\[CapitalOmega]2"}], "}"}], ",", "\n", " ", 
      RowBox[{
       RowBox[{"\[Omega]1", "=", 
        RowBox[{"s1", "-", "1"}]}], ";", " ", 
       RowBox[{"\[CapitalOmega]1", "=", 
        RowBox[{"2", "^", "\[Omega]1"}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "\[Omega]1", " ", "is", " ", "the", " ", "number", " ", "of", " ", 
          "bits", " ", "of", " ", "the", " ", "input"}], ",", " ", 
         RowBox[{
         "\[CapitalOmega]1", " ", "is", " ", "the", " ", "size", " ", "of", 
          " ", "the", " ", "state", " ", "vector", " ", "of", " ", "the", " ", 
          RowBox[{"input", "."}]}]}], " ", "*)"}], "\n", " ", 
       RowBox[{"\[Omega]2", "=", "s2"}], ";", " ", 
       RowBox[{"\[CapitalOmega]2", "=", 
        RowBox[{"2", "^", "\[Omega]2"}]}], ";", "   ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "\[Omega]2", " ", "is", " ", "the", " ", "number", " ", "of", " ", 
          "bits", " ", "of", " ", "the", " ", "output"}], ",", " ", 
         RowBox[{
         "\[CapitalOmega]2", " ", "is", " ", "the", " ", "size", " ", "of", 
          " ", "the", " ", "state", " ", "vector", " ", "of", " ", "the", " ", 
          RowBox[{"output", "."}]}]}], " ", "*)"}], "\n", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "V\[Omega]1", ",", " ", "V\[Omega]2", ",", " ", 
             "V\[CapitalOmega]2"}], "}"}], ",", "\n", "  ", 
           RowBox[{
            RowBox[{"V\[Omega]1", "=", 
             RowBox[{"IntegerDigits", "[", 
              RowBox[{"i", ",", " ", "2", ",", " ", "\[Omega]1"}], "]"}]}], 
            ";", "\n", "  ", 
            RowBox[{"V\[Omega]2", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"V\[Omega]1", ",", " ", 
               RowBox[{"ConstantArray", "[", 
                RowBox[{"0", ",", " ", 
                 RowBox[{"\[Omega]2", "-", "\[Omega]1"}]}], "]"}]}], "]"}]}], 
            ";", "\n", "  ", 
            RowBox[{"V\[CapitalOmega]2", "=", 
             RowBox[{"fullState", "[", "V\[Omega]2", "]"}]}], ";", "\n", "  ",
             "V\[CapitalOmega]2"}]}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "0", ",", " ", 
           RowBox[{"\[CapitalOmega]1", "-", "1"}]}], "}"}]}], "]"}]}]}], 
     "]"}], "//", "Transpose"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matrixRepeatExpand", "[", 
   RowBox[{"n_", ",", " ", "s1_", ",", " ", "s2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Omega]1", ",", " ", "\[Omega]2", ",", " ", "\[CapitalOmega]1", ",", 
       " ", "\[CapitalOmega]2"}], "}"}], ",", "\n", " ", 
     RowBox[{
      RowBox[{"\[Omega]1", "=", 
       RowBox[{"s1", "-", "1"}]}], ";", " ", 
      RowBox[{"\[CapitalOmega]1", "=", 
       RowBox[{"2", "^", "\[Omega]1"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "\[Omega]1", " ", "is", " ", "the", " ", "number", " ", "of", " ", 
         "bits", " ", "of", " ", "the", " ", "input"}], ",", " ", 
        RowBox[{
        "\[CapitalOmega]1", " ", "is", " ", "the", " ", "size", " ", "of", 
         " ", "the", " ", "state", " ", "vector", " ", "of", " ", "the", " ", 
         RowBox[{"input", "."}]}]}], " ", "*)"}], "\n", " ", 
      RowBox[{"\[Omega]2", "=", "s2"}], ";", " ", 
      RowBox[{"\[CapitalOmega]2", "=", 
       RowBox[{"2", "^", "\[Omega]2"}]}], ";", "   ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "\[Omega]2", " ", "is", " ", "the", " ", "number", " ", "of", " ", 
         "bits", " ", "of", " ", "the", " ", "output"}], ",", " ", 
        RowBox[{
        "\[CapitalOmega]2", " ", "is", " ", "the", " ", "size", " ", "of", 
         " ", "the", " ", "state", " ", "vector", " ", "of", " ", "the", " ", 
         RowBox[{"output", "."}]}]}], " ", "*)"}], "\n", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "V\[Omega]1", ",", " ", "V\[Omega]2", ",", " ", 
            "V\[CapitalOmega]2"}], "}"}], ",", "\n", "  ", 
          RowBox[{
           RowBox[{"V\[Omega]1", "=", 
            RowBox[{"IntegerDigits", "[", 
             RowBox[{"i", ",", " ", "2", ",", " ", "\[Omega]1"}], "]"}]}], 
           ";", "\n", "  ", 
           RowBox[{"V\[Omega]2", "=", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{"V\[Omega]1", ",", " ", 
                RowBox[{"\[LeftCeiling]", 
                 RowBox[{"\[Omega]2", "/", "\[Omega]1"}], 
                 "\[RightCeiling]"}]}], "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{";;", "\[Omega]2"}], "]"}], "]"}]}], ";", "\n", "  ", 
           RowBox[{"V\[CapitalOmega]2", "=", 
            RowBox[{"fullState", "[", "V\[Omega]2", "]"}]}], ";", "\n", "  ", 
           "V\[CapitalOmega]2"}]}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "0", ",", " ", 
          RowBox[{"\[CapitalOmega]1", "-", "1"}]}], "}"}]}], "]"}]}]}], "]"}],
    "//", "Transpose"}]}]}], "Code",
 CellChangeTimes->{{3.928920467111658*^9, 3.928920516879627*^9}, {
   3.928922803390812*^9, 3.928922814678433*^9}, {3.928923360898836*^9, 
   3.928923376105461*^9}, 3.9289379048919086`*^9, {3.929025539526895*^9, 
   3.929025539748228*^9}, {3.929025785445862*^9, 3.929025858094169*^9}, {
   3.929178638046154*^9, 3.9291788120837593`*^9}},
 CellLabel->
  "In[441]:=",ExpressionUUID->"33241036-48db-8e4f-95c5-80dab5283c85"],

Cell["\<\
For example, here are the expansion matrices increasing a systems wire count \
from 2 to 5\
\>", "Text",
 CellChangeTimes->{{3.9290255455002613`*^9, 
  3.929025576168051*^9}},ExpressionUUID->"53c45030-4e3e-5048-9456-\
bb1cf1360a05"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"matrixZeroExpand", "[", 
     RowBox[{"5", ",", " ", "3", ",", " ", "5"}], "]"}], ",", " ", 
    RowBox[{"matrixRepeatExpand", "[", 
     RowBox[{"5", ",", " ", "3", ",", " ", "5"}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.928939491455211*^9, 3.928939512150793*^9}, {
  3.92900541932926*^9, 3.929005419847461*^9}, {3.929025582397114*^9, 
  3.929025624273853*^9}, {3.929025668887322*^9, 3.929025676302643*^9}, {
  3.929124745734537*^9, 3.9291247517660923`*^9}, {3.9291248045811653`*^9, 
  3.9291248242377014`*^9}, {3.929128864917349*^9, 3.929128910059288*^9}},
 CellLabel->
  "In[443]:=",ExpressionUUID->"77c92c64-31ba-3147-8414-ef3048737a7d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    RasterBox[{{1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 
     1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 0}, {1, 1, 1, 1}, {1, 1, 1, 
     1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 
     1}, {1, 1, 0, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 
     1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 0, 1, 1}, {1, 1, 1, 
     1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 
     1}, {1, 1, 1, 1}, {0, 1, 1, 1}}, {{0, 0}, {4, 32}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[
    RasterBox[{{1, 1, 1, 0}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 
     1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 
     1}, {1, 1, 0, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 
     1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 
     1}, {1, 1, 1, 1}, {1, 0, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 
     1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 
     1}, {1, 1, 1, 1}, {0, 1, 1, 1}}, {{0, 0}, {4, 32}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.929124796330122*^9, 3.92912482479768*^9}, 
   3.9291282330105515`*^9, {3.92912888003776*^9, 3.929128910391428*^9}, 
   3.929132154808836*^9, 3.9291328012788777`*^9, 3.929132861988611*^9, 
   3.92917436984766*^9, 3.929178732697546*^9, {3.929178786995905*^9, 
   3.929178816742182*^9}},
 CellLabel->
  "Out[443]=",ExpressionUUID->"8eca6e40-e823-c34d-807b-4f049d9041b4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Gates to Matrices", "Subsection",
 CellChangeTimes->{{3.9290277836274037`*^9, 
  3.9290277999428635`*^9}},ExpressionUUID->"a403d750-848e-d24b-baa6-\
dd73b3bae17a"],

Cell[TextData[{
 "In order to apply a 2-bit gate to a >2-bit system, the matrix cannot be \
multiplied directly with the state vector of the entire system. Rather, the \
gate matrix needs to be composed with Identity matrices representing the lack \
of operations on other bits. The computed matrices, because they are in a \
shape other than ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["2", "2"], 
    SuperscriptBox["x2", "2"]}], TraditionalForm]],ExpressionUUID->
  "347ed2de-b3a9-ea46-b70e-fef9e8a3418f"],
 ", are made in the correct dimension, so they are able to apply to the whole \
state. Here is how each gate is converted to a matrix:"
}], "Text",
 CellChangeTimes->{{3.929027807373593*^9, 3.9290278917281075`*^9}, {
  3.929028113285066*^9, 3.929028298765175*^9}, {3.929178847873829*^9, 
  3.9291788679913845`*^9}},ExpressionUUID->"dcfb8020-8575-9941-aa21-\
66c7c6355a01"],

Cell[BoxData[
 RowBox[{
  RowBox[{"matrixFormOfColumn", "[", 
   RowBox[{"G_", ",", " ", "n_"}], "]"}], " ", ":=", "\n", "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"M", " ", "=", " ", 
    RowBox[{"G", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], " ", "*)"}], "\n", "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"s1", " ", "=", " ", 
    RowBox[{"G", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", " ", "1"}], "]"}], "]"}]}], " ", "*)"}], "\n", "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"s2", " ", "=", " ", 
    RowBox[{"G", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", " ", "2"}], "]"}], "]"}]}], " ", "*)"}], "\n", "  ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"MatchQ", "[", 
     RowBox[{
      RowBox[{"G", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", " ", "_List"}], "]"}], ",", " ", 
    RowBox[{"(*", " ", 
     RowBox[{"For", " ", "fixed", " ", "matrices"}], " ", "*)"}], "\n", "   ",
     "\n", "    ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", "1", "}"}], "}"}], " ", "needed", " ", "so", " ", "that", 
      " ", "the", " ", "arg", " ", "to", " ", "Kronecker", " ", "is", " ", 
      "at", " ", "least", " ", "length", " ", "2"}], " ", "*)"}], "\n", 
    "    ", 
    RowBox[{"KroneckerProduct", " ", "@@", " ", 
     RowBox[{"Join", " ", "@@", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", "1", "}"}], "}"}], ",", " ", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"I2", ",", " ", 
          RowBox[{
           RowBox[{"G", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", " ", "1"}], "]"}], "]"}], " ", "-", " ", 
           "1"}]}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"G", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "}"}], ",", " ", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"I2", ",", " ", 
          RowBox[{"n", " ", "-", " ", 
           RowBox[{"G", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", " ", "2"}], "]"}], "]"}]}]}], "]"}]}], 
       "}"}]}]}], ",", "\n", "    ", "\n", "   ", 
    RowBox[{
     RowBox[{"G", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"n", ",", " ", 
      RowBox[{"G", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
      RowBox[{"G", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", " ", "2"}], "]"}], "]"}]}], "]"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Computed", " ", 
    RowBox[{"matrix", ":", " ", 
     RowBox[{"uses", " ", 
      RowBox[{"Mtype", "[", 
       RowBox[{"n", ",", " ", "s1", ",", " ", "s2"}], "]"}]}]}]}], " ", 
   "*)"}]}]], "Code",
 CellChangeTimes->{{3.929028332341572*^9, 3.9290285331565113`*^9}, {
  3.929028579951809*^9, 3.929028665832123*^9}, {3.929028696840933*^9, 
  3.929028725034687*^9}, {3.929028869451292*^9, 3.9290288720090275`*^9}, {
  3.9290290748794403`*^9, 3.929029188455614*^9}, {3.9290294912840557`*^9, 
  3.929029562101671*^9}, {3.929029622537161*^9, 3.929029642871001*^9}, {
  3.929029679426895*^9, 3.929030138394741*^9}, {3.929086656039776*^9, 
  3.929086659632025*^9}, {3.929086696737249*^9, 3.929086813213365*^9}, {
  3.929087527157301*^9, 3.929087620154478*^9}, {3.929092544811335*^9, 
  3.929092548947962*^9}, {3.929124875943131*^9, 3.929124876492876*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"b738eb31-ba60-c248-b7b5-49b17b4398e6"],

Cell["\<\
For example, here is how the NAND gate is represented when applied to the \
last two bits of a 4-bit system. The repeating NAND pattern can be seen on \
the least significant bits, and the diagonal identity pattern can be seen on \
the more significant bits.\
\>", "Text",
 CellChangeTimes->{{3.929092552790503*^9, 3.929092558555554*^9}, {
  3.929178892720743*^9, 
  3.9291789683653774`*^9}},ExpressionUUID->"e8bd2fad-dede-4440-8367-\
ab348434524e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"M", "=", 
  RowBox[{
   RowBox[{"matrixFormOfColumn", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", " ", "4"}], "}"}], ",", " ", "matrixNand"}], "}"}], 
     ",", " ", "4"}], "]"}], "//", "ArrayPlot"}]}]], "Code",
 CellChangeTimes->{{3.929092569093845*^9, 3.929092594133535*^9}, {
  3.929096115735117*^9, 3.929096116755923*^9}, {3.9291248444819374`*^9, 
  3.929124854687119*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"b5fb6c3d-2753-fa4c-95d1-0a3ff39b6ab1"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1}, {1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
   0, 1, 1}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, {1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 
   1, 1, 1}, {1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1}, {1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, {1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 
   1, 1, 1}, {1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1}, {1, 1, 1, 1, 0,
    0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
   1, 1, 1}, {1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, {1, 1, 1, 0, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, {0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
   1, 1, 1}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}, {{0, 0}, {16, 
   16}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{
  3.9290301387086525`*^9, 3.929086591995487*^9, 3.929086660003662*^9, {
   3.929086705536577*^9, 3.929086723610588*^9}, {3.9290867904781704`*^9, 
   3.92908681365324*^9}, 3.929087518230047*^9, 3.9290876991567974`*^9, 
   3.929092193105341*^9, {3.92909254572188*^9, 3.9290925946961975`*^9}, 
   3.9290954408814316`*^9, 3.929096117058634*^9, {3.929104902758688*^9, 
   3.929104906708493*^9}, {3.92911073904294*^9, 3.929110750700577*^9}, 
   3.929120357012745*^9, 3.929120950473137*^9, 3.929121148141896*^9, {
   3.929124847250046*^9, 3.929124854926871*^9}, 3.929128202510456*^9, 
   3.9291282331636734`*^9, 3.929132154939022*^9, {3.929132795750622*^9, 
   3.929132821468834*^9}, 3.929132862109089*^9, 3.929174135764593*^9, 
   3.929174369990204*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"5b92f42d-bf00-bd4b-9db4-7d3c5f1ea36c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Circuits", "Subsection",
 CellChangeTimes->{{3.92917903551145*^9, 
  3.929179036543932*^9}},ExpressionUUID->"ff56db50-4a9c-4a4a-9bb5-\
c299dead2ada"],

Cell[CellGroupData[{

Cell["Circuit Application", "Subsubsection",
 CellChangeTimes->{{3.929179886724537*^9, 
  3.9291798896317844`*^9}},ExpressionUUID->"669956aa-93eb-da41-bcbb-\
9dfcb2e8c503"],

Cell["\<\
A circuit is the composition of a set of gates applied to a set of wires. \
Because each gate is represented by a matrix, application of a gate is \
equivalent to multiplication of a state vector by a matrix. Because matrix \
multiplication is associative, all of the matrices of a circuit can be \
multiplied together into a single total circuit matrix. As most circuits \
require many more internal wires than input or output wires, a circuit matrix \
can be precomputed (which will take a relatively large amount of time) and \
then applied to one or more input state vectors (which will take a relatively \
small amount of time).
Here is the code that does this, first computing each matrix for each gate, \
then composing them by multiplication, then applying them to an input state:\
\>", "Text",
 CellChangeTimes->{{3.9291790400724697`*^9, 3.929179210953598*^9}, {
  3.9291793080207043`*^9, 3.9291794376790123`*^9}, {3.9291794732097015`*^9, 
  3.929179500033186*^9}},ExpressionUUID->"6087b252-1b7f-4c44-82ba-\
aeabf68a5e13"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"circuitMatrices", "[", "circuit_", "]"}], ":=", " ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", " ", "=", " ", 
       RowBox[{"Max", "@", 
        RowBox[{"Flatten", "@", 
         RowBox[{"circuit", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}]}]}], "}"}], ",", 
     " ", 
     RowBox[{
      RowBox[{
       RowBox[{"matrixFormOfColumn", "[", 
        RowBox[{"#", ",", " ", "n"}], "]"}], "&"}], " ", "/@", " ", 
      "circuit"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"circuitMatrix", "[", "circuit_", "]"}], ":=", " ", 
  RowBox[{"Dot", " ", "@@", " ", 
   RowBox[{"Reverse", " ", "@", " ", 
    RowBox[{"circuitMatrices", "[", "circuit", "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"applyCircuit", "[", 
   RowBox[{"circuit_", ",", " ", "state_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"circuitMatrix", "[", "circuit", "]"}], ".", "state"}]}]}], "Code",
 CellChangeTimes->{{3.929094342698382*^9, 3.92909445587562*^9}, {
  3.9290961340914288`*^9, 3.9290962491595287`*^9}, {3.929096346907312*^9, 
  3.929096353073381*^9}, {3.929121051943434*^9, 3.9291210527531238`*^9}, {
  3.929125000280575*^9, 3.9291250319002266`*^9}, {3.9291252239118195`*^9, 
  3.929125226821429*^9}, {3.9291795034774647`*^9, 
  3.9291795252044334`*^9}},ExpressionUUID->"b0dca5ed-b246-3042-aaf1-\
62d70430b037"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Circuit Visualization", "Subsubsection",
 CellChangeTimes->{{3.929179669668684*^9, 
  3.929179675055908*^9}},ExpressionUUID->"fd71c754-9b88-6945-8b52-\
31b5664ff32a"],

Cell["\<\
Using the Wolfram Quantum Framework Paclet, my circuits can be converted into \
the paclet\[CloseCurlyQuote]s representation of a circuit, which can then be \
displayed. The paclet is also much more optimized, so I may use it\
\[CloseCurlyQuote]s code to more quickly compute matrix applications\
\>", "Text",
 CellChangeTimes->{{3.9291796776309433`*^9, 
  3.9291798335144844`*^9}},ExpressionUUID->"be97e242-09d5-e142-bf63-\
fd6d4cd9a9ea"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PacletInstall", "[", "\"\<Wolfram/QuantumFramework\>\"", "]"}], 
   ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"quantumOperatorFormOfColumn", "[", 
    RowBox[{"i_Integer", ",", " ", "gates_", ",", " ", "n_"}], "]"}], ":=", 
   "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"G", ",", " ", "s1", ",", " ", "s2", ",", " ", "M"}], "}"}], 
     ",", "\n", " ", 
     RowBox[{
      RowBox[{"G", "=", 
       RowBox[{"gates", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", " ", 
      RowBox[{"s1", "=", 
       RowBox[{"G", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", " ", "1"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", " ", 
      RowBox[{"s2", "=", 
       RowBox[{"G", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      " ", 
      RowBox[{"M", "=", 
       RowBox[{"G", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Switch", " ", "for", " ", "irregular", " ", "functions"}], 
       " ", "*)"}], "\[IndentingNewLine]", " ", 
      RowBox[{"Switch", "[", 
       RowBox[{"M", ",", "\[IndentingNewLine]", "  ", "matrixSwap", ",", 
        RowBox[{
         InterpretationBox[
          FrameBox[
           TagBox[
            TooltipBox[
             PaneBox[GridBox[{
                {
                 ItemBox[
                  GraphicsBox[
                   {Thickness[0.0025], 
                    {FaceForm[{RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.863691329956055`}, {205., 
                    212.31669425964355`}, {246.01799774169922`, 
                    235.99870109558105`}, {369.0710144042969, 
                    307.0436840057373}, {369.0710144042969, 
                    117.59068870544434`}, {205., 22.863691329956055`}}, {{
                    30.928985595703125`, 307.0436840057373}, {
                    153.98200225830078`, 235.99870109558105`}, {195., 
                    212.31669425964355`}, {195., 22.863691329956055`}, {
                    30.928985595703125`, 117.59068870544434`}, {
                    30.928985595703125`, 307.0436840057373}}, {{200., 
                    410.42970085144043`}, {364.0710144042969, 
                    315.7036876678467}, {241.01799774169922`, 
                    244.65868949890137`}, {200., 220.97669792175293`}, {
                    158.98200225830078`, 244.65868949890137`}, {
                    35.928985595703125`, 315.7036876678467}, {200., 
                    410.42970085144043`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYA0XxdDiQNYJCATwveoAtG/6uTA/HWX
w8B8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYj2c/hUDJF/awKiz129jsL3c9qN
wo/gXBuDzK/YbRWDbF6F4MVoZPtmvJoejeyehpD9yiA6e88JMD+h/JYS2J6k
J2C+gleGEkQ9QyYyf9NcaWR+w1Rn80xk/bDwgZkPCz+Y/QGPF5Yju++B0sZy
ZPfD+DD/wfgw/8P4sPCBmQcLP5T4AgBuZHHc
                    "]}]}, 
                    {FaceForm[{RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{44.92900085449219, 282.59088134765625`}, {
                    181.00001525878906`, 204.0298843383789}, {
                    181.00001525878906`, 46.90887451171875}, {
                    44.92900085449219, 125.46986389160156`}, {
                    44.92900085449219, 282.59088134765625`}}}]}, 
                    {FaceForm[{RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{355.0710144042969, 282.59088134765625`}, {
                    355.0710144042969, 125.46986389160156`}, {219., 
                    46.90887451171875}, {219., 204.0298843383789}, {
                    355.0710144042969, 282.59088134765625`}}}]}, 
                    {FaceForm[{RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{200., 394.0606994628906}, {336.0710144042969, 
                    315.4997024536133}, {200., 236.93968200683594`}, {
                    63.928985595703125`, 315.4997024536133}, {200., 
                    394.0606994628906}}}]}},
                   BoxID -> 
                   "{\"data\":\"{\\\"jsonData\\\":\\\"{\\\\\\\"type\\\\\\\": \
\\\\\\\"Graphics\\\\\\\",\\\\n\\\\\\\"version\\\\\\\": \\\\\\\"1.0\\\\\\\",\\\
\\n\\\\\\\"height\\\\\\\": 11.433641,\\\\n\\\\\\\"width\\\\\\\": 10.000000,\\\
\\n\\\\\\\"offset\\\\\\\": [-66.000000, \
-5.000000],\\\\n\\\\\\\"UserCoords\\\\\\\": [13.467693, 428.589520, \
386.532307, 2.040850],\\\\n\\\\\\\"AxesOrigin\\\\\\\": [50.000000, \
100.000000],\\\\n\\\\\\\"primitives\\\\\\\": [\\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Clip\\\\\\\", \\\\\\\"transform\\\\\\\": [1.000000, 0.000000, \
0.000000, 1.000000, 0.000000, 0.000000], \\\\\\\"path\\\\\\\": [[66,5], \
[66,17], [76,17], [76,5]]},\\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\
\\\\\\\": {\\\\\\\"color\\\\\\\": [245, 129, 50], \\\\\\\"opacity\\\\\\\": 1, \
\\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [245, 129, 50], \\\\\\\"opacity\\\\\\\": 1}, \\\\\\\"fillrule\\\\\\\" \
: \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": [[71.134,15.8755], \
[71.134,10.7972], [72.2335,10.1624], [75.5319,8.25804], [75.5319,13.3363], \
[71.134,15.8755], [71.134,15.8755], [66.4681,8.25804], [69.7665,10.1624], \
[70.866,10.7972], [70.866,15.8755], [66.4681,13.3363], [66.4681,8.25804], \
[66.4681,8.25804], [71,5.48677], [75.3979,8.02591], [72.0995,9.93027], \
[71,10.5651], [69.9005,9.93027], [66.6021,8.02591], [71,5.48677], \
[71,5.48677], [75.733,7.90984], [71.067,5.21594], [71.0411,5.20445], \
[71.0139,5.1987], [70.9861,5.1987], [70.9589,5.20445], [70.933,5.21594], \
[66.267,7.90984], [66.2441,7.92651], [66.2255,7.94725], [66.2116,7.97126], \
[66.203,7.99775], [66.2,8.02591], [66.2,13.4137], [66.203,13.4419], \
[66.2116,13.4684], [66.2255,13.4924], [66.2441,13.5131], [66.267,13.5298], \
[70.933,16.2237], [70.9457,16.2301], [70.9589,16.2352], [70.9724,16.2388], \
[70.9861,16.2409], [71,16.2416], [71.0139,16.2409], [71.0276,16.2388], \
[71.0411,16.2352], [71.0543,16.2301], [71.067,16.2237], [75.733,13.5298], \
[75.7559,13.5131], [75.7745,13.4924], [75.7884,13.4684], [75.797,13.4419], \
[75.8,13.4137], [75.8,8.02591], [75.797,7.99775], [75.7884,7.97126], \
[75.7745,7.94725], [75.7559,7.92651], [75.733,7.90984], [75.733,7.90984], \
[75.733,7.90984], [71,5.48677], [66.4681,8.25804]]}, \\\\n{\\\\\\\"type\\\\\\\
\": \\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \
\\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [141, 172, 207], \
\\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": {}, \
\\\\\\\"capForm\\\\\\\": \\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": \
{\\\\\\\"type\\\\\\\": \\\\\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\
\\\\\"dashing\\\\\\\": [], \\\\\\\"dashingOffset\\\\\\\": 0}, \
\\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\\\\\": [141, 172, 207], \
\\\\\\\"opacity\\\\\\\": 1}, \\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\
\" , \\\\\\\"points\\\\\\\": [[66.8433,8.91349], [70.4907,11.0193], \
[70.4907,15.231], [66.8433,13.1251], [66.8433,8.91349], [66.8433,8.91349]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Polygon\\\\\\\", \
\\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\\\\\\\": \
{\\\\\\\"color\\\\\\\": [169, 205, 145], \\\\\\\"opacity\\\\\\\": 1, \
\\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [169, 205, 145], \\\\\\\"opacity\\\\\\\": 1}, \
\\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": \
[[75.1567,8.91349], [75.1567,13.1251], [71.5093,15.231], [71.5093,11.0193], \
[75.1567,8.91349], [75.1567,8.91349]]}, \\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\
\\\\\\\": {\\\\\\\"color\\\\\\\": [176, 150, 207], \\\\\\\"opacity\\\\\\\": \
1, \\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \\\\\\\"Square\\\\\
\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\\\"Miter\\\\\\\", \
\\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [176, 150, 207], \\\\\\\"opacity\\\\\\\": 1}, \
\\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": \
[[71,5.92555], [74.6474,8.03137], [71,10.1372], [67.3526,8.03137], \
[71,5.92555], [71,5.92555]]}, \\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Group\\\\\\\
\", \\\\\\\"name\\\\\\\": \
\\\\\\\"Frame\\\\\\\",\\\\n\\\\\\\"metadata\\\\\\\": {\\\\\\\"left\\\\\\\": \
13.4677, \\\\\\\"top\\\\\\\": 428.59, \\\\\\\"right\\\\\\\": 386.532, \
\\\\\\\"bottom\\\\\\\": 2.04085},\\\\n\\\\\\\"primitives\\\\\\\":[]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Group\\\\\\\", \\\\\\\"name\\\\\\\": \\\\\
\\\"Axes\\\\\\\",\\\\n\\\\\\\"metadata\\\\\\\": \\\\\\\"TBD\\\\\\\",\\\\n\\\\\
\\\"primitives\\\\\\\":[]}],\\\\n\\\\\\\"PlotRange\\\\\\\": {\\\\\\\"left\\\\\
\\\": -0.000000, \\\\\\\"top\\\\\\\": -9.433641, \\\\\\\"right\\\\\\\": \
10.000000, \\\\\\\"bottom\\\\\\\": \
2.000000}\\\\n}\\\\n\\\",\\\"requestedImageSize\\\":10}\"}",
                   BaselinePosition->Scaled[0.15],
                   ImageSize->10]], 
                 ItemBox[
                  StyleBox[
                   RowBox[{"QuantumOperator", " "}],
                   ShowAutoStyles->False,
                   ShowStringCharacters->False,
                   FontSize->0.9 Inherited,
                   FontColor->GrayLevel[0.1]]]}
               },
               GridBoxSpacings->{"Columns" -> {{0.25}}}],
              Alignment->{Left, Baseline},
              BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
              BaselinePosition->Baseline,
              FrameMargins->{{3, 0}, {0, 0}}],
             RowBox[{"PacletSymbol", "[", 
               
               RowBox[{
                "\"Wolfram/QuantumFramework\"", ",", 
                 "\"Wolfram`QuantumFramework`QuantumOperator\""}], "]"}],
             
             TooltipStyle->{
              ShowAutoStyles -> True, ShowStringCharacters -> True}],
            Annotation[#, 
             Style[
              Defer[
               PacletSymbol[
               "Wolfram/QuantumFramework", 
                "Wolfram`QuantumFramework`QuantumOperator"]], 
              ShowStringCharacters -> True], "Tooltip"]& ],
           Background->RGBColor[0.968, 0.976, 0.984],
           BaselinePosition->Baseline,
           DefaultBaseStyle->{},
           FrameMargins->{{0, 0}, {1, 1}},
           FrameStyle->RGBColor[0.831, 0.847, 0.85],
           RoundingRadius->4],
          PacletSymbol[
          "Wolfram/QuantumFramework", 
           "Wolfram`QuantumFramework`QuantumOperator"],
          
          TaggingRules -> {
           "Paclet" -> "Wolfram/QuantumFramework", "Symbol" -> 
            "Wolfram`QuantumFramework`QuantumOperator"},
          BoxID -> "PacletSymbolBox",
          SelectWithContents->True,
          Selectable->False], "[", 
         RowBox[{"\"\<SWAP\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"s1", ",", " ", "s2"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "  ", "matrixReturn", ",", 
        RowBox[{
         InterpretationBox[
          FrameBox[
           TagBox[
            TooltipBox[
             PaneBox[GridBox[{
                {
                 ItemBox[
                  GraphicsBox[
                   {Thickness[0.0025], 
                    {FaceForm[{RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.863691329956055`}, {205., 
                    212.31669425964355`}, {246.01799774169922`, 
                    235.99870109558105`}, {369.0710144042969, 
                    307.0436840057373}, {369.0710144042969, 
                    117.59068870544434`}, {205., 22.863691329956055`}}, {{
                    30.928985595703125`, 307.0436840057373}, {
                    153.98200225830078`, 235.99870109558105`}, {195., 
                    212.31669425964355`}, {195., 22.863691329956055`}, {
                    30.928985595703125`, 117.59068870544434`}, {
                    30.928985595703125`, 307.0436840057373}}, {{200., 
                    410.42970085144043`}, {364.0710144042969, 
                    315.7036876678467}, {241.01799774169922`, 
                    244.65868949890137`}, {200., 220.97669792175293`}, {
                    158.98200225830078`, 244.65868949890137`}, {
                    35.928985595703125`, 315.7036876678467}, {200., 
                    410.42970085144043`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYA0XxdDiQNYJCATwveoAtG/6uTA/HWX
w8B8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYj2c/hUDJF/awKiz129jsL3c9qN
wo/gXBuDzK/YbRWDbF6F4MVoZPtmvJoejeyehpD9yiA6e88JMD+h/JYS2J6k
J2C+gleGEkQ9QyYyf9NcaWR+w1Rn80xk/bDwgZkPCz+Y/QGPF5Yju++B0sZy
ZPfD+DD/wfgw/8P4sPCBmQcLP5T4AgBuZHHc
                    "]}]}, 
                    {FaceForm[{RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{44.92900085449219, 282.59088134765625`}, {
                    181.00001525878906`, 204.0298843383789}, {
                    181.00001525878906`, 46.90887451171875}, {
                    44.92900085449219, 125.46986389160156`}, {
                    44.92900085449219, 282.59088134765625`}}}]}, 
                    {FaceForm[{RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{355.0710144042969, 282.59088134765625`}, {
                    355.0710144042969, 125.46986389160156`}, {219., 
                    46.90887451171875}, {219., 204.0298843383789}, {
                    355.0710144042969, 282.59088134765625`}}}]}, 
                    {FaceForm[{RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{200., 394.0606994628906}, {336.0710144042969, 
                    315.4997024536133}, {200., 236.93968200683594`}, {
                    63.928985595703125`, 315.4997024536133}, {200., 
                    394.0606994628906}}}]}},
                   BaselinePosition->Scaled[0.15],
                   ImageSize->10]], 
                 ItemBox[
                  StyleBox[
                   RowBox[{"QuantumMeasurementOperator", " "}],
                   ShowAutoStyles->False,
                   ShowStringCharacters->False,
                   FontSize->0.9 Inherited,
                   FontColor->GrayLevel[0.1]]]}
               },
               GridBoxSpacings->{"Columns" -> {{0.25}}}],
              Alignment->{Left, Baseline},
              BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
              BaselinePosition->Baseline,
              FrameMargins->{{3, 0}, {0, 0}}],
             RowBox[{"PacletSymbol", "[", 
               
               RowBox[{
                "\"Wolfram/QuantumFramework\"", ",", 
                 "\"Wolfram`QuantumFramework`QuantumMeasurementOperator\""}], 
               "]"}],
             
             TooltipStyle->{
              ShowAutoStyles -> True, ShowStringCharacters -> True}],
            Annotation[#, 
             Style[
              Defer[
               PacletSymbol[
               "Wolfram/QuantumFramework", 
                "Wolfram`QuantumFramework`QuantumMeasurementOperator"]], 
              ShowStringCharacters -> True], "Tooltip"]& ],
           Background->RGBColor[0.968, 0.976, 0.984],
           BaselinePosition->Baseline,
           DefaultBaseStyle->{},
           FrameMargins->{{0, 0}, {1, 1}},
           FrameStyle->RGBColor[0.831, 0.847, 0.85],
           RoundingRadius->4],
          PacletSymbol[
          "Wolfram/QuantumFramework", 
           "Wolfram`QuantumFramework`QuantumMeasurementOperator"],
          
          TaggingRules -> {
           "Paclet" -> "Wolfram/QuantumFramework", "Symbol" -> 
            "Wolfram`QuantumFramework`QuantumMeasurementOperator"},
          BoxID -> "PacletSymbolBox",
          SelectWithContents->True,
          Selectable->False], "[", 
         RowBox[{"\"\<Z\>\"", ",", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"s1", "==", "s2"}], ",", " ", 
            RowBox[{"{", "s1", "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"s1", ",", " ", "s2"}], "}"}]}], "]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "  ", "matrixCopy", ",", " ", 
        RowBox[{
         InterpretationBox[
          FrameBox[
           TagBox[
            TooltipBox[
             PaneBox[GridBox[{
                {
                 ItemBox[
                  GraphicsBox[
                   {Thickness[0.0025], 
                    {FaceForm[{RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.863691329956055`}, {205., 
                    212.31669425964355`}, {246.01799774169922`, 
                    235.99870109558105`}, {369.0710144042969, 
                    307.0436840057373}, {369.0710144042969, 
                    117.59068870544434`}, {205., 22.863691329956055`}}, {{
                    30.928985595703125`, 307.0436840057373}, {
                    153.98200225830078`, 235.99870109558105`}, {195., 
                    212.31669425964355`}, {195., 22.863691329956055`}, {
                    30.928985595703125`, 117.59068870544434`}, {
                    30.928985595703125`, 307.0436840057373}}, {{200., 
                    410.42970085144043`}, {364.0710144042969, 
                    315.7036876678467}, {241.01799774169922`, 
                    244.65868949890137`}, {200., 220.97669792175293`}, {
                    158.98200225830078`, 244.65868949890137`}, {
                    35.928985595703125`, 315.7036876678467}, {200., 
                    410.42970085144043`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYA0XxdDiQNYJCATwveoAtG/6uTA/HWX
w8B8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYj2c/hUDJF/awKiz129jsL3c9qN
wo/gXBuDzK/YbRWDbF6F4MVoZPtmvJoejeyehpD9yiA6e88JMD+h/JYS2J6k
J2C+gleGEkQ9QyYyf9NcaWR+w1Rn80xk/bDwgZkPCz+Y/QGPF5Yju++B0sZy
ZPfD+DD/wfgw/8P4sPCBmQcLP5T4AgBuZHHc
                    "]}]}, 
                    {FaceForm[{RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{44.92900085449219, 282.59088134765625`}, {
                    181.00001525878906`, 204.0298843383789}, {
                    181.00001525878906`, 46.90887451171875}, {
                    44.92900085449219, 125.46986389160156`}, {
                    44.92900085449219, 282.59088134765625`}}}]}, 
                    {FaceForm[{RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{355.0710144042969, 282.59088134765625`}, {
                    355.0710144042969, 125.46986389160156`}, {219., 
                    46.90887451171875}, {219., 204.0298843383789}, {
                    355.0710144042969, 282.59088134765625`}}}]}, 
                    {FaceForm[{RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{200., 394.0606994628906}, {336.0710144042969, 
                    315.4997024536133}, {200., 236.93968200683594`}, {
                    63.928985595703125`, 315.4997024536133}, {200., 
                    394.0606994628906}}}]}},
                   BoxID -> 
                   "{\"data\":\"{\\\"jsonData\\\":\\\"{\\\\\\\"type\\\\\\\": \
\\\\\\\"Graphics\\\\\\\",\\\\n\\\\\\\"version\\\\\\\": \\\\\\\"1.0\\\\\\\",\\\
\\n\\\\\\\"height\\\\\\\": 11.433641,\\\\n\\\\\\\"width\\\\\\\": 10.000000,\\\
\\n\\\\\\\"offset\\\\\\\": [-66.000000, \
-5.000000],\\\\n\\\\\\\"UserCoords\\\\\\\": [13.467693, 428.589520, \
386.532307, 2.040850],\\\\n\\\\\\\"AxesOrigin\\\\\\\": [50.000000, \
100.000000],\\\\n\\\\\\\"primitives\\\\\\\": [\\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Clip\\\\\\\", \\\\\\\"transform\\\\\\\": [1.000000, 0.000000, \
0.000000, 1.000000, 0.000000, 0.000000], \\\\\\\"path\\\\\\\": [[66,5], \
[66,17], [76,17], [76,5]]},\\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\
\\\\\\\": {\\\\\\\"color\\\\\\\": [245, 129, 50], \\\\\\\"opacity\\\\\\\": 1, \
\\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [245, 129, 50], \\\\\\\"opacity\\\\\\\": 1}, \\\\\\\"fillrule\\\\\\\" \
: \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": [[71.134,15.8755], \
[71.134,10.7972], [72.2335,10.1624], [75.5319,8.25804], [75.5319,13.3363], \
[71.134,15.8755], [71.134,15.8755], [66.4681,8.25804], [69.7665,10.1624], \
[70.866,10.7972], [70.866,15.8755], [66.4681,13.3363], [66.4681,8.25804], \
[66.4681,8.25804], [71,5.48677], [75.3979,8.02591], [72.0995,9.93027], \
[71,10.5651], [69.9005,9.93027], [66.6021,8.02591], [71,5.48677], \
[71,5.48677], [75.733,7.90984], [71.067,5.21594], [71.0411,5.20445], \
[71.0139,5.1987], [70.9861,5.1987], [70.9589,5.20445], [70.933,5.21594], \
[66.267,7.90984], [66.2441,7.92651], [66.2255,7.94725], [66.2116,7.97126], \
[66.203,7.99775], [66.2,8.02591], [66.2,13.4137], [66.203,13.4419], \
[66.2116,13.4684], [66.2255,13.4924], [66.2441,13.5131], [66.267,13.5298], \
[70.933,16.2237], [70.9457,16.2301], [70.9589,16.2352], [70.9724,16.2388], \
[70.9861,16.2409], [71,16.2416], [71.0139,16.2409], [71.0276,16.2388], \
[71.0411,16.2352], [71.0543,16.2301], [71.067,16.2237], [75.733,13.5298], \
[75.7559,13.5131], [75.7745,13.4924], [75.7884,13.4684], [75.797,13.4419], \
[75.8,13.4137], [75.8,8.02591], [75.797,7.99775], [75.7884,7.97126], \
[75.7745,7.94725], [75.7559,7.92651], [75.733,7.90984], [75.733,7.90984], \
[75.733,7.90984], [71,5.48677], [66.4681,8.25804]]}, \\\\n{\\\\\\\"type\\\\\\\
\": \\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \
\\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [141, 172, 207], \
\\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": {}, \
\\\\\\\"capForm\\\\\\\": \\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": \
{\\\\\\\"type\\\\\\\": \\\\\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\
\\\\\"dashing\\\\\\\": [], \\\\\\\"dashingOffset\\\\\\\": 0}, \
\\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\\\\\": [141, 172, 207], \
\\\\\\\"opacity\\\\\\\": 1}, \\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\
\" , \\\\\\\"points\\\\\\\": [[66.8433,8.91349], [70.4907,11.0193], \
[70.4907,15.231], [66.8433,13.1251], [66.8433,8.91349], [66.8433,8.91349]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Polygon\\\\\\\", \
\\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\\\\\\\": \
{\\\\\\\"color\\\\\\\": [169, 205, 145], \\\\\\\"opacity\\\\\\\": 1, \
\\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [169, 205, 145], \\\\\\\"opacity\\\\\\\": 1}, \
\\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": \
[[75.1567,8.91349], [75.1567,13.1251], [71.5093,15.231], [71.5093,11.0193], \
[75.1567,8.91349], [75.1567,8.91349]]}, \\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\
\\\\\\\": {\\\\\\\"color\\\\\\\": [176, 150, 207], \\\\\\\"opacity\\\\\\\": \
1, \\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \\\\\\\"Square\\\\\
\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\\\"Miter\\\\\\\", \
\\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [176, 150, 207], \\\\\\\"opacity\\\\\\\": 1}, \
\\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": \
[[71,5.92555], [74.6474,8.03137], [71,10.1372], [67.3526,8.03137], \
[71,5.92555], [71,5.92555]]}, \\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Group\\\\\\\
\", \\\\\\\"name\\\\\\\": \
\\\\\\\"Frame\\\\\\\",\\\\n\\\\\\\"metadata\\\\\\\": {\\\\\\\"left\\\\\\\": \
13.4677, \\\\\\\"top\\\\\\\": 428.59, \\\\\\\"right\\\\\\\": 386.532, \
\\\\\\\"bottom\\\\\\\": 2.04085},\\\\n\\\\\\\"primitives\\\\\\\":[]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Group\\\\\\\", \\\\\\\"name\\\\\\\": \\\\\
\\\"Axes\\\\\\\",\\\\n\\\\\\\"metadata\\\\\\\": \\\\\\\"TBD\\\\\\\",\\\\n\\\\\
\\\"primitives\\\\\\\":[]}],\\\\n\\\\\\\"PlotRange\\\\\\\": {\\\\\\\"left\\\\\
\\\": -0.000000, \\\\\\\"top\\\\\\\": -9.433641, \\\\\\\"right\\\\\\\": \
10.000000, \\\\\\\"bottom\\\\\\\": \
2.000000}\\\\n}\\\\n\\\",\\\"requestedImageSize\\\":10}\"}",
                   BaselinePosition->Scaled[0.15],
                   ImageSize->10]], 
                 ItemBox[
                  StyleBox[
                   RowBox[{"QuantumOperator", " "}],
                   ShowAutoStyles->False,
                   ShowStringCharacters->False,
                   FontSize->0.9 Inherited,
                   FontColor->GrayLevel[0.1]]]}
               },
               GridBoxSpacings->{"Columns" -> {{0.25}}}],
              Alignment->{Left, Baseline},
              BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
              BaselinePosition->Baseline,
              FrameMargins->{{3, 0}, {0, 0}}],
             RowBox[{"PacletSymbol", "[", 
               
               RowBox[{
                "\"Wolfram/QuantumFramework\"", ",", 
                 "\"Wolfram`QuantumFramework`QuantumOperator\""}], "]"}],
             
             TooltipStyle->{
              ShowAutoStyles -> True, ShowStringCharacters -> True}],
            Annotation[#, 
             Style[
              Defer[
               PacletSymbol[
               "Wolfram/QuantumFramework", 
                "Wolfram`QuantumFramework`QuantumOperator"]], 
              ShowStringCharacters -> True], "Tooltip"]& ],
           Background->RGBColor[0.968, 0.976, 0.984],
           BaselinePosition->Baseline,
           DefaultBaseStyle->{},
           FrameMargins->{{0, 0}, {1, 1}},
           FrameStyle->RGBColor[0.831, 0.847, 0.85],
           RoundingRadius->4],
          PacletSymbol[
          "Wolfram/QuantumFramework", 
           "Wolfram`QuantumFramework`QuantumOperator"],
          
          TaggingRules -> {
           "Paclet" -> "Wolfram/QuantumFramework", "Symbol" -> 
            "Wolfram`QuantumFramework`QuantumOperator"},
          BoxID -> "PacletSymbolBox",
          SelectWithContents->True,
          Selectable->False], "[", 
         RowBox[{"\"\<CNOT\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"s1", ",", " ", "s2"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "  ", "matrixZeroExpand", ",", " ", 
        RowBox[{
         InterpretationBox[
          FrameBox[
           TagBox[
            TooltipBox[
             PaneBox[GridBox[{
                {
                 ItemBox[
                  GraphicsBox[
                   {Thickness[0.0025], 
                    {FaceForm[{RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.863691329956055`}, {205., 
                    212.31669425964355`}, {246.01799774169922`, 
                    235.99870109558105`}, {369.0710144042969, 
                    307.0436840057373}, {369.0710144042969, 
                    117.59068870544434`}, {205., 22.863691329956055`}}, {{
                    30.928985595703125`, 307.0436840057373}, {
                    153.98200225830078`, 235.99870109558105`}, {195., 
                    212.31669425964355`}, {195., 22.863691329956055`}, {
                    30.928985595703125`, 117.59068870544434`}, {
                    30.928985595703125`, 307.0436840057373}}, {{200., 
                    410.42970085144043`}, {364.0710144042969, 
                    315.7036876678467}, {241.01799774169922`, 
                    244.65868949890137`}, {200., 220.97669792175293`}, {
                    158.98200225830078`, 244.65868949890137`}, {
                    35.928985595703125`, 315.7036876678467}, {200., 
                    410.42970085144043`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYA0XxdDiQNYJCATwveoAtG/6uTA/HWX
w8B8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYj2c/hUDJF/awKiz129jsL3c9qN
wo/gXBuDzK/YbRWDbF6F4MVoZPtmvJoejeyehpD9yiA6e88JMD+h/JYS2J6k
J2C+gleGEkQ9QyYyf9NcaWR+w1Rn80xk/bDwgZkPCz+Y/QGPF5Yju++B0sZy
ZPfD+DD/wfgw/8P4sPCBmQcLP5T4AgBuZHHc
                    "]}]}, 
                    {FaceForm[{RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{44.92900085449219, 282.59088134765625`}, {
                    181.00001525878906`, 204.0298843383789}, {
                    181.00001525878906`, 46.90887451171875}, {
                    44.92900085449219, 125.46986389160156`}, {
                    44.92900085449219, 282.59088134765625`}}}]}, 
                    {FaceForm[{RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{355.0710144042969, 282.59088134765625`}, {
                    355.0710144042969, 125.46986389160156`}, {219., 
                    46.90887451171875}, {219., 204.0298843383789}, {
                    355.0710144042969, 282.59088134765625`}}}]}, 
                    {FaceForm[{RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{200., 394.0606994628906}, {336.0710144042969, 
                    315.4997024536133}, {200., 236.93968200683594`}, {
                    63.928985595703125`, 315.4997024536133}, {200., 
                    394.0606994628906}}}]}},
                   BoxID -> 
                   "{\"data\":\"{\\\"jsonData\\\":\\\"{\\\\\\\"type\\\\\\\": \
\\\\\\\"Graphics\\\\\\\",\\\\n\\\\\\\"version\\\\\\\": \\\\\\\"1.0\\\\\\\",\\\
\\n\\\\\\\"height\\\\\\\": 11.433641,\\\\n\\\\\\\"width\\\\\\\": 10.000000,\\\
\\n\\\\\\\"offset\\\\\\\": [-66.000000, \
-5.000000],\\\\n\\\\\\\"UserCoords\\\\\\\": [13.467693, 428.589520, \
386.532307, 2.040850],\\\\n\\\\\\\"AxesOrigin\\\\\\\": [50.000000, \
100.000000],\\\\n\\\\\\\"primitives\\\\\\\": [\\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Clip\\\\\\\", \\\\\\\"transform\\\\\\\": [1.000000, 0.000000, \
0.000000, 1.000000, 0.000000, 0.000000], \\\\\\\"path\\\\\\\": [[66,5], \
[66,17], [76,17], [76,5]]},\\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\
\\\\\\\": {\\\\\\\"color\\\\\\\": [245, 129, 50], \\\\\\\"opacity\\\\\\\": 1, \
\\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [245, 129, 50], \\\\\\\"opacity\\\\\\\": 1}, \\\\\\\"fillrule\\\\\\\" \
: \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": [[71.134,15.8755], \
[71.134,10.7972], [72.2335,10.1624], [75.5319,8.25804], [75.5319,13.3363], \
[71.134,15.8755], [71.134,15.8755], [66.4681,8.25804], [69.7665,10.1624], \
[70.866,10.7972], [70.866,15.8755], [66.4681,13.3363], [66.4681,8.25804], \
[66.4681,8.25804], [71,5.48677], [75.3979,8.02591], [72.0995,9.93027], \
[71,10.5651], [69.9005,9.93027], [66.6021,8.02591], [71,5.48677], \
[71,5.48677], [75.733,7.90984], [71.067,5.21594], [71.0411,5.20445], \
[71.0139,5.1987], [70.9861,5.1987], [70.9589,5.20445], [70.933,5.21594], \
[66.267,7.90984], [66.2441,7.92651], [66.2255,7.94725], [66.2116,7.97126], \
[66.203,7.99775], [66.2,8.02591], [66.2,13.4137], [66.203,13.4419], \
[66.2116,13.4684], [66.2255,13.4924], [66.2441,13.5131], [66.267,13.5298], \
[70.933,16.2237], [70.9457,16.2301], [70.9589,16.2352], [70.9724,16.2388], \
[70.9861,16.2409], [71,16.2416], [71.0139,16.2409], [71.0276,16.2388], \
[71.0411,16.2352], [71.0543,16.2301], [71.067,16.2237], [75.733,13.5298], \
[75.7559,13.5131], [75.7745,13.4924], [75.7884,13.4684], [75.797,13.4419], \
[75.8,13.4137], [75.8,8.02591], [75.797,7.99775], [75.7884,7.97126], \
[75.7745,7.94725], [75.7559,7.92651], [75.733,7.90984], [75.733,7.90984], \
[75.733,7.90984], [71,5.48677], [66.4681,8.25804]]}, \\\\n{\\\\\\\"type\\\\\\\
\": \\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \
\\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [141, 172, 207], \
\\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": {}, \
\\\\\\\"capForm\\\\\\\": \\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": \
{\\\\\\\"type\\\\\\\": \\\\\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\
\\\\\"dashing\\\\\\\": [], \\\\\\\"dashingOffset\\\\\\\": 0}, \
\\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\\\\\": [141, 172, 207], \
\\\\\\\"opacity\\\\\\\": 1}, \\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\
\" , \\\\\\\"points\\\\\\\": [[66.8433,8.91349], [70.4907,11.0193], \
[70.4907,15.231], [66.8433,13.1251], [66.8433,8.91349], [66.8433,8.91349]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Polygon\\\\\\\", \
\\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\\\\\\\": \
{\\\\\\\"color\\\\\\\": [169, 205, 145], \\\\\\\"opacity\\\\\\\": 1, \
\\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [169, 205, 145], \\\\\\\"opacity\\\\\\\": 1}, \
\\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": \
[[75.1567,8.91349], [75.1567,13.1251], [71.5093,15.231], [71.5093,11.0193], \
[75.1567,8.91349], [75.1567,8.91349]]}, \\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\
\\\\\\\": {\\\\\\\"color\\\\\\\": [176, 150, 207], \\\\\\\"opacity\\\\\\\": \
1, \\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \\\\\\\"Square\\\\\
\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\\\"Miter\\\\\\\", \
\\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [176, 150, 207], \\\\\\\"opacity\\\\\\\": 1}, \
\\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": \
[[71,5.92555], [74.6474,8.03137], [71,10.1372], [67.3526,8.03137], \
[71,5.92555], [71,5.92555]]}, \\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Group\\\\\\\
\", \\\\\\\"name\\\\\\\": \
\\\\\\\"Frame\\\\\\\",\\\\n\\\\\\\"metadata\\\\\\\": {\\\\\\\"left\\\\\\\": \
13.4677, \\\\\\\"top\\\\\\\": 428.59, \\\\\\\"right\\\\\\\": 386.532, \
\\\\\\\"bottom\\\\\\\": 2.04085},\\\\n\\\\\\\"primitives\\\\\\\":[]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Group\\\\\\\", \\\\\\\"name\\\\\\\": \\\\\
\\\"Axes\\\\\\\",\\\\n\\\\\\\"metadata\\\\\\\": \\\\\\\"TBD\\\\\\\",\\\\n\\\\\
\\\"primitives\\\\\\\":[]}],\\\\n\\\\\\\"PlotRange\\\\\\\": {\\\\\\\"left\\\\\
\\\": -0.000000, \\\\\\\"top\\\\\\\": -9.433641, \\\\\\\"right\\\\\\\": \
10.000000, \\\\\\\"bottom\\\\\\\": \
2.000000}\\\\n}\\\\n\\\",\\\"requestedImageSize\\\":10}\"}",
                   BaselinePosition->Scaled[0.15],
                   ImageSize->10]], 
                 ItemBox[
                  StyleBox[
                   RowBox[{"QuantumOperator", " "}],
                   ShowAutoStyles->False,
                   ShowStringCharacters->False,
                   FontSize->0.9 Inherited,
                   FontColor->GrayLevel[0.1]]]}
               },
               GridBoxSpacings->{"Columns" -> {{0.25}}}],
              Alignment->{Left, Baseline},
              BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
              BaselinePosition->Baseline,
              FrameMargins->{{3, 0}, {0, 0}}],
             RowBox[{"PacletSymbol", "[", 
               
               RowBox[{
                "\"Wolfram/QuantumFramework\"", ",", 
                 "\"Wolfram`QuantumFramework`QuantumOperator\""}], "]"}],
             
             TooltipStyle->{
              ShowAutoStyles -> True, ShowStringCharacters -> True}],
            Annotation[#, 
             Style[
              Defer[
               PacletSymbol[
               "Wolfram/QuantumFramework", 
                "Wolfram`QuantumFramework`QuantumOperator"]], 
              ShowStringCharacters -> True], "Tooltip"]& ],
           Background->RGBColor[0.968, 0.976, 0.984],
           BaselinePosition->Baseline,
           DefaultBaseStyle->{},
           FrameMargins->{{0, 0}, {1, 1}},
           FrameStyle->RGBColor[0.831, 0.847, 0.85],
           RoundingRadius->4],
          PacletSymbol[
          "Wolfram/QuantumFramework", 
           "Wolfram`QuantumFramework`QuantumOperator"],
          
          TaggingRules -> {
           "Paclet" -> "Wolfram/QuantumFramework", "Symbol" -> 
            "Wolfram`QuantumFramework`QuantumOperator"},
          BoxID -> "PacletSymbolBox",
          SelectWithContents->True,
          Selectable->False], "[", 
         RowBox[{
          RowBox[{"matrixZeroExpand", "[", 
           RowBox[{"n", ",", " ", "s1", ",", " ", "s2"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"s1", ",", " ", "s2"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "  ", "matrixRepeatExpand", ",", " ", 
        RowBox[{
         InterpretationBox[
          FrameBox[
           TagBox[
            TooltipBox[
             PaneBox[GridBox[{
                {
                 ItemBox[
                  GraphicsBox[
                   {Thickness[0.0025], 
                    {FaceForm[{RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.863691329956055`}, {205., 
                    212.31669425964355`}, {246.01799774169922`, 
                    235.99870109558105`}, {369.0710144042969, 
                    307.0436840057373}, {369.0710144042969, 
                    117.59068870544434`}, {205., 22.863691329956055`}}, {{
                    30.928985595703125`, 307.0436840057373}, {
                    153.98200225830078`, 235.99870109558105`}, {195., 
                    212.31669425964355`}, {195., 22.863691329956055`}, {
                    30.928985595703125`, 117.59068870544434`}, {
                    30.928985595703125`, 307.0436840057373}}, {{200., 
                    410.42970085144043`}, {364.0710144042969, 
                    315.7036876678467}, {241.01799774169922`, 
                    244.65868949890137`}, {200., 220.97669792175293`}, {
                    158.98200225830078`, 244.65868949890137`}, {
                    35.928985595703125`, 315.7036876678467}, {200., 
                    410.42970085144043`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYA0XxdDiQNYJCATwveoAtG/6uTA/HWX
w8B8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYj2c/hUDJF/awKiz129jsL3c9qN
wo/gXBuDzK/YbRWDbF6F4MVoZPtmvJoejeyehpD9yiA6e88JMD+h/JYS2J6k
J2C+gleGEkQ9QyYyf9NcaWR+w1Rn80xk/bDwgZkPCz+Y/QGPF5Yju++B0sZy
ZPfD+DD/wfgw/8P4sPCBmQcLP5T4AgBuZHHc
                    "]}]}, 
                    {FaceForm[{RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{44.92900085449219, 282.59088134765625`}, {
                    181.00001525878906`, 204.0298843383789}, {
                    181.00001525878906`, 46.90887451171875}, {
                    44.92900085449219, 125.46986389160156`}, {
                    44.92900085449219, 282.59088134765625`}}}]}, 
                    {FaceForm[{RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{355.0710144042969, 282.59088134765625`}, {
                    355.0710144042969, 125.46986389160156`}, {219., 
                    46.90887451171875}, {219., 204.0298843383789}, {
                    355.0710144042969, 282.59088134765625`}}}]}, 
                    {FaceForm[{RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{200., 394.0606994628906}, {336.0710144042969, 
                    315.4997024536133}, {200., 236.93968200683594`}, {
                    63.928985595703125`, 315.4997024536133}, {200., 
                    394.0606994628906}}}]}},
                   BoxID -> 
                   "{\"data\":\"{\\\"jsonData\\\":\\\"{\\\\\\\"type\\\\\\\": \
\\\\\\\"Graphics\\\\\\\",\\\\n\\\\\\\"version\\\\\\\": \\\\\\\"1.0\\\\\\\",\\\
\\n\\\\\\\"height\\\\\\\": 11.433641,\\\\n\\\\\\\"width\\\\\\\": 10.000000,\\\
\\n\\\\\\\"offset\\\\\\\": [-66.000000, \
-5.000000],\\\\n\\\\\\\"UserCoords\\\\\\\": [13.467693, 428.589520, \
386.532307, 2.040850],\\\\n\\\\\\\"AxesOrigin\\\\\\\": [50.000000, \
100.000000],\\\\n\\\\\\\"primitives\\\\\\\": [\\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Clip\\\\\\\", \\\\\\\"transform\\\\\\\": [1.000000, 0.000000, \
0.000000, 1.000000, 0.000000, 0.000000], \\\\\\\"path\\\\\\\": [[66,5], \
[66,17], [76,17], [76,5]]},\\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\
\\\\\\\": {\\\\\\\"color\\\\\\\": [245, 129, 50], \\\\\\\"opacity\\\\\\\": 1, \
\\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [245, 129, 50], \\\\\\\"opacity\\\\\\\": 1}, \\\\\\\"fillrule\\\\\\\" \
: \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": [[71.134,15.8755], \
[71.134,10.7972], [72.2335,10.1624], [75.5319,8.25804], [75.5319,13.3363], \
[71.134,15.8755], [71.134,15.8755], [66.4681,8.25804], [69.7665,10.1624], \
[70.866,10.7972], [70.866,15.8755], [66.4681,13.3363], [66.4681,8.25804], \
[66.4681,8.25804], [71,5.48677], [75.3979,8.02591], [72.0995,9.93027], \
[71,10.5651], [69.9005,9.93027], [66.6021,8.02591], [71,5.48677], \
[71,5.48677], [75.733,7.90984], [71.067,5.21594], [71.0411,5.20445], \
[71.0139,5.1987], [70.9861,5.1987], [70.9589,5.20445], [70.933,5.21594], \
[66.267,7.90984], [66.2441,7.92651], [66.2255,7.94725], [66.2116,7.97126], \
[66.203,7.99775], [66.2,8.02591], [66.2,13.4137], [66.203,13.4419], \
[66.2116,13.4684], [66.2255,13.4924], [66.2441,13.5131], [66.267,13.5298], \
[70.933,16.2237], [70.9457,16.2301], [70.9589,16.2352], [70.9724,16.2388], \
[70.9861,16.2409], [71,16.2416], [71.0139,16.2409], [71.0276,16.2388], \
[71.0411,16.2352], [71.0543,16.2301], [71.067,16.2237], [75.733,13.5298], \
[75.7559,13.5131], [75.7745,13.4924], [75.7884,13.4684], [75.797,13.4419], \
[75.8,13.4137], [75.8,8.02591], [75.797,7.99775], [75.7884,7.97126], \
[75.7745,7.94725], [75.7559,7.92651], [75.733,7.90984], [75.733,7.90984], \
[75.733,7.90984], [71,5.48677], [66.4681,8.25804]]}, \\\\n{\\\\\\\"type\\\\\\\
\": \\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \
\\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [141, 172, 207], \
\\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": {}, \
\\\\\\\"capForm\\\\\\\": \\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": \
{\\\\\\\"type\\\\\\\": \\\\\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\
\\\\\"dashing\\\\\\\": [], \\\\\\\"dashingOffset\\\\\\\": 0}, \
\\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\\\\\": [141, 172, 207], \
\\\\\\\"opacity\\\\\\\": 1}, \\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\
\" , \\\\\\\"points\\\\\\\": [[66.8433,8.91349], [70.4907,11.0193], \
[70.4907,15.231], [66.8433,13.1251], [66.8433,8.91349], [66.8433,8.91349]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Polygon\\\\\\\", \
\\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\\\\\\\": \
{\\\\\\\"color\\\\\\\": [169, 205, 145], \\\\\\\"opacity\\\\\\\": 1, \
\\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [169, 205, 145], \\\\\\\"opacity\\\\\\\": 1}, \
\\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": \
[[75.1567,8.91349], [75.1567,13.1251], [71.5093,15.231], [71.5093,11.0193], \
[75.1567,8.91349], [75.1567,8.91349]]}, \\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\
\\\\\\\": {\\\\\\\"color\\\\\\\": [176, 150, 207], \\\\\\\"opacity\\\\\\\": \
1, \\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \\\\\\\"Square\\\\\
\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\\\"Miter\\\\\\\", \
\\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [176, 150, 207], \\\\\\\"opacity\\\\\\\": 1}, \
\\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": \
[[71,5.92555], [74.6474,8.03137], [71,10.1372], [67.3526,8.03137], \
[71,5.92555], [71,5.92555]]}, \\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Group\\\\\\\
\", \\\\\\\"name\\\\\\\": \
\\\\\\\"Frame\\\\\\\",\\\\n\\\\\\\"metadata\\\\\\\": {\\\\\\\"left\\\\\\\": \
13.4677, \\\\\\\"top\\\\\\\": 428.59, \\\\\\\"right\\\\\\\": 386.532, \
\\\\\\\"bottom\\\\\\\": 2.04085},\\\\n\\\\\\\"primitives\\\\\\\":[]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Group\\\\\\\", \\\\\\\"name\\\\\\\": \\\\\
\\\"Axes\\\\\\\",\\\\n\\\\\\\"metadata\\\\\\\": \\\\\\\"TBD\\\\\\\",\\\\n\\\\\
\\\"primitives\\\\\\\":[]}],\\\\n\\\\\\\"PlotRange\\\\\\\": {\\\\\\\"left\\\\\
\\\": -0.000000, \\\\\\\"top\\\\\\\": -9.433641, \\\\\\\"right\\\\\\\": \
10.000000, \\\\\\\"bottom\\\\\\\": \
2.000000}\\\\n}\\\\n\\\",\\\"requestedImageSize\\\":10}\"}",
                   BaselinePosition->Scaled[0.15],
                   ImageSize->10]], 
                 ItemBox[
                  StyleBox[
                   RowBox[{"QuantumOperator", " "}],
                   ShowAutoStyles->False,
                   ShowStringCharacters->False,
                   FontSize->0.9 Inherited,
                   FontColor->GrayLevel[0.1]]]}
               },
               GridBoxSpacings->{"Columns" -> {{0.25}}}],
              Alignment->{Left, Baseline},
              BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
              BaselinePosition->Baseline,
              FrameMargins->{{3, 0}, {0, 0}}],
             RowBox[{"PacletSymbol", "[", 
               
               RowBox[{
                "\"Wolfram/QuantumFramework\"", ",", 
                 "\"Wolfram`QuantumFramework`QuantumOperator\""}], "]"}],
             
             TooltipStyle->{
              ShowAutoStyles -> True, ShowStringCharacters -> True}],
            Annotation[#, 
             Style[
              Defer[
               PacletSymbol[
               "Wolfram/QuantumFramework", 
                "Wolfram`QuantumFramework`QuantumOperator"]], 
              ShowStringCharacters -> True], "Tooltip"]& ],
           Background->RGBColor[0.968, 0.976, 0.984],
           BaselinePosition->Baseline,
           DefaultBaseStyle->{},
           FrameMargins->{{0, 0}, {1, 1}},
           FrameStyle->RGBColor[0.831, 0.847, 0.85],
           RoundingRadius->4],
          PacletSymbol[
          "Wolfram/QuantumFramework", 
           "Wolfram`QuantumFramework`QuantumOperator"],
          
          TaggingRules -> {
           "Paclet" -> "Wolfram/QuantumFramework", "Symbol" -> 
            "Wolfram`QuantumFramework`QuantumOperator"},
          BoxID -> "PacletSymbolBox",
          SelectWithContents->True,
          Selectable->False], "[", 
         RowBox[{
          RowBox[{"matrixRepeatExpand", "[", 
           RowBox[{"n", ",", " ", "s1", ",", " ", "s2"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"s1", ",", " ", "s2"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "  ", "_", ",", 
        RowBox[{
         InterpretationBox[
          FrameBox[
           TagBox[
            TooltipBox[
             PaneBox[GridBox[{
                {
                 ItemBox[
                  GraphicsBox[
                   {Thickness[0.0025], 
                    {FaceForm[{RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.863691329956055`}, {205., 
                    212.31669425964355`}, {246.01799774169922`, 
                    235.99870109558105`}, {369.0710144042969, 
                    307.0436840057373}, {369.0710144042969, 
                    117.59068870544434`}, {205., 22.863691329956055`}}, {{
                    30.928985595703125`, 307.0436840057373}, {
                    153.98200225830078`, 235.99870109558105`}, {195., 
                    212.31669425964355`}, {195., 22.863691329956055`}, {
                    30.928985595703125`, 117.59068870544434`}, {
                    30.928985595703125`, 307.0436840057373}}, {{200., 
                    410.42970085144043`}, {364.0710144042969, 
                    315.7036876678467}, {241.01799774169922`, 
                    244.65868949890137`}, {200., 220.97669792175293`}, {
                    158.98200225830078`, 244.65868949890137`}, {
                    35.928985595703125`, 315.7036876678467}, {200., 
                    410.42970085144043`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYA0XxdDiQNYJCATwveoAtG/6uTA/HWX
w8B8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYj2c/hUDJF/awKiz129jsL3c9qN
wo/gXBuDzK/YbRWDbF6F4MVoZPtmvJoejeyehpD9yiA6e88JMD+h/JYS2J6k
J2C+gleGEkQ9QyYyf9NcaWR+w1Rn80xk/bDwgZkPCz+Y/QGPF5Yju++B0sZy
ZPfD+DD/wfgw/8P4sPCBmQcLP5T4AgBuZHHc
                    "]}]}, 
                    {FaceForm[{RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{44.92900085449219, 282.59088134765625`}, {
                    181.00001525878906`, 204.0298843383789}, {
                    181.00001525878906`, 46.90887451171875}, {
                    44.92900085449219, 125.46986389160156`}, {
                    44.92900085449219, 282.59088134765625`}}}]}, 
                    {FaceForm[{RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{355.0710144042969, 282.59088134765625`}, {
                    355.0710144042969, 125.46986389160156`}, {219., 
                    46.90887451171875}, {219., 204.0298843383789}, {
                    355.0710144042969, 282.59088134765625`}}}]}, 
                    {FaceForm[{RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{200., 394.0606994628906}, {336.0710144042969, 
                    315.4997024536133}, {200., 236.93968200683594`}, {
                    63.928985595703125`, 315.4997024536133}, {200., 
                    394.0606994628906}}}]}},
                   BoxID -> 
                   "{\"data\":\"{\\\"jsonData\\\":\\\"{\\\\\\\"type\\\\\\\": \
\\\\\\\"Graphics\\\\\\\",\\\\n\\\\\\\"version\\\\\\\": \\\\\\\"1.0\\\\\\\",\\\
\\n\\\\\\\"height\\\\\\\": 11.433641,\\\\n\\\\\\\"width\\\\\\\": 10.000000,\\\
\\n\\\\\\\"offset\\\\\\\": [-66.000000, \
-5.000000],\\\\n\\\\\\\"UserCoords\\\\\\\": [13.467693, 428.589520, \
386.532307, 2.040850],\\\\n\\\\\\\"AxesOrigin\\\\\\\": [50.000000, \
100.000000],\\\\n\\\\\\\"primitives\\\\\\\": [\\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Clip\\\\\\\", \\\\\\\"transform\\\\\\\": [1.000000, 0.000000, \
0.000000, 1.000000, 0.000000, 0.000000], \\\\\\\"path\\\\\\\": [[66,5], \
[66,17], [76,17], [76,5]]},\\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\
\\\\\\\": {\\\\\\\"color\\\\\\\": [245, 129, 50], \\\\\\\"opacity\\\\\\\": 1, \
\\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [245, 129, 50], \\\\\\\"opacity\\\\\\\": 1}, \\\\\\\"fillrule\\\\\\\" \
: \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": [[71.134,15.8755], \
[71.134,10.7972], [72.2335,10.1624], [75.5319,8.25804], [75.5319,13.3363], \
[71.134,15.8755], [71.134,15.8755], [66.4681,8.25804], [69.7665,10.1624], \
[70.866,10.7972], [70.866,15.8755], [66.4681,13.3363], [66.4681,8.25804], \
[66.4681,8.25804], [71,5.48677], [75.3979,8.02591], [72.0995,9.93027], \
[71,10.5651], [69.9005,9.93027], [66.6021,8.02591], [71,5.48677], \
[71,5.48677], [75.733,7.90984], [71.067,5.21594], [71.0411,5.20445], \
[71.0139,5.1987], [70.9861,5.1987], [70.9589,5.20445], [70.933,5.21594], \
[66.267,7.90984], [66.2441,7.92651], [66.2255,7.94725], [66.2116,7.97126], \
[66.203,7.99775], [66.2,8.02591], [66.2,13.4137], [66.203,13.4419], \
[66.2116,13.4684], [66.2255,13.4924], [66.2441,13.5131], [66.267,13.5298], \
[70.933,16.2237], [70.9457,16.2301], [70.9589,16.2352], [70.9724,16.2388], \
[70.9861,16.2409], [71,16.2416], [71.0139,16.2409], [71.0276,16.2388], \
[71.0411,16.2352], [71.0543,16.2301], [71.067,16.2237], [75.733,13.5298], \
[75.7559,13.5131], [75.7745,13.4924], [75.7884,13.4684], [75.797,13.4419], \
[75.8,13.4137], [75.8,8.02591], [75.797,7.99775], [75.7884,7.97126], \
[75.7745,7.94725], [75.7559,7.92651], [75.733,7.90984], [75.733,7.90984], \
[75.733,7.90984], [71,5.48677], [66.4681,8.25804]]}, \\\\n{\\\\\\\"type\\\\\\\
\": \\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \
\\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [141, 172, 207], \
\\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": {}, \
\\\\\\\"capForm\\\\\\\": \\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": \
{\\\\\\\"type\\\\\\\": \\\\\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\
\\\\\"dashing\\\\\\\": [], \\\\\\\"dashingOffset\\\\\\\": 0}, \
\\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\\\\\": [141, 172, 207], \
\\\\\\\"opacity\\\\\\\": 1}, \\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\
\" , \\\\\\\"points\\\\\\\": [[66.8433,8.91349], [70.4907,11.0193], \
[70.4907,15.231], [66.8433,13.1251], [66.8433,8.91349], [66.8433,8.91349]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Polygon\\\\\\\", \
\\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\\\\\\\": \
{\\\\\\\"color\\\\\\\": [169, 205, 145], \\\\\\\"opacity\\\\\\\": 1, \
\\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [169, 205, 145], \\\\\\\"opacity\\\\\\\": 1}, \
\\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": \
[[75.1567,8.91349], [75.1567,13.1251], [71.5093,15.231], [71.5093,11.0193], \
[75.1567,8.91349], [75.1567,8.91349]]}, \\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\
\\\\\\\": {\\\\\\\"color\\\\\\\": [176, 150, 207], \\\\\\\"opacity\\\\\\\": \
1, \\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \\\\\\\"Square\\\\\
\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\\\"Miter\\\\\\\", \
\\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [176, 150, 207], \\\\\\\"opacity\\\\\\\": 1}, \
\\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": \
[[71,5.92555], [74.6474,8.03137], [71,10.1372], [67.3526,8.03137], \
[71,5.92555], [71,5.92555]]}, \\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Group\\\\\\\
\", \\\\\\\"name\\\\\\\": \
\\\\\\\"Frame\\\\\\\",\\\\n\\\\\\\"metadata\\\\\\\": {\\\\\\\"left\\\\\\\": \
13.4677, \\\\\\\"top\\\\\\\": 428.59, \\\\\\\"right\\\\\\\": 386.532, \
\\\\\\\"bottom\\\\\\\": 2.04085},\\\\n\\\\\\\"primitives\\\\\\\":[]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Group\\\\\\\", \\\\\\\"name\\\\\\\": \\\\\
\\\"Axes\\\\\\\",\\\\n\\\\\\\"metadata\\\\\\\": \\\\\\\"TBD\\\\\\\",\\\\n\\\\\
\\\"primitives\\\\\\\":[]}],\\\\n\\\\\\\"PlotRange\\\\\\\": {\\\\\\\"left\\\\\
\\\": -0.000000, \\\\\\\"top\\\\\\\": -9.433641, \\\\\\\"right\\\\\\\": \
10.000000, \\\\\\\"bottom\\\\\\\": \
2.000000}\\\\n}\\\\n\\\",\\\"requestedImageSize\\\":10}\"}",
                   BaselinePosition->Scaled[0.15],
                   ImageSize->10]], 
                 ItemBox[
                  StyleBox[
                   RowBox[{"QuantumOperator", " "}],
                   ShowAutoStyles->False,
                   ShowStringCharacters->False,
                   FontSize->0.9 Inherited,
                   FontColor->GrayLevel[0.1]]]}
               },
               GridBoxSpacings->{"Columns" -> {{0.25}}}],
              Alignment->{Left, Baseline},
              BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
              BaselinePosition->Baseline,
              FrameMargins->{{3, 0}, {0, 0}}],
             RowBox[{"PacletSymbol", "[", 
               
               RowBox[{
                "\"Wolfram/QuantumFramework\"", ",", 
                 "\"Wolfram`QuantumFramework`QuantumOperator\""}], "]"}],
             
             TooltipStyle->{
              ShowAutoStyles -> True, ShowStringCharacters -> True}],
            Annotation[#, 
             Style[
              Defer[
               PacletSymbol[
               "Wolfram/QuantumFramework", 
                "Wolfram`QuantumFramework`QuantumOperator"]], 
              ShowStringCharacters -> True], "Tooltip"]& ],
           Background->RGBColor[0.968, 0.976, 0.984],
           BaselinePosition->Baseline,
           DefaultBaseStyle->{},
           FrameMargins->{{0, 0}, {1, 1}},
           FrameStyle->RGBColor[0.831, 0.847, 0.85],
           RoundingRadius->4],
          PacletSymbol[
          "Wolfram/QuantumFramework", 
           "Wolfram`QuantumFramework`QuantumOperator"],
          
          TaggingRules -> {
           "Paclet" -> "Wolfram/QuantumFramework", "Symbol" -> 
            "Wolfram`QuantumFramework`QuantumOperator"},
          BoxID -> "PacletSymbolBox",
          SelectWithContents->True,
          Selectable->False], "[", 
         RowBox[{"M", ",", " ", 
          RowBox[{"{", 
           RowBox[{"s1", ",", " ", "s2"}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", "  ", "]"}]}]}], "\[IndentingNewLine]", " ", 
    "]"}]}], "\[IndentingNewLine]", " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"quantumCircuit", "[", "gates_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"n", "=", 
        RowBox[{"Max", "@@", 
         RowBox[{"Flatten", "@", 
          RowBox[{"gates", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}]}], ",", 
       "quantumGates", ",", " ", "firstIndices"}], "}"}], ",", 
     "\[IndentingNewLine]", "  ", 
     RowBox[{
      RowBox[{"quantumGates", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"quantumOperatorFormOfColumn", "[", 
          RowBox[{"#", ",", " ", "gates", ",", " ", "n"}], "]"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "gates", "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", "  ", 
      RowBox[{"firstIndices", "=", 
       RowBox[{"gates", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "1", ",", " ", "1"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "  ", 
      RowBox[{
       InterpretationBox[
        FrameBox[
         TagBox[
          TooltipBox[
           PaneBox[GridBox[{
              {
               GraphicsBox[
                {Thickness[0.0025], 
                 {FaceForm[{RGBColor[
                  0.9607843137254902, 0.5058823529411764, 
                   0.19607843137254902`], Opacity[1.]}], 
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.863691329956055`}, {205., 
                    212.31669425964355`}, {246.01799774169922`, 
                    235.99870109558105`}, {369.0710144042969, 
                    307.0436840057373}, {369.0710144042969, 
                    117.59068870544434`}, {205., 22.863691329956055`}}, {{
                    30.928985595703125`, 307.0436840057373}, {
                    153.98200225830078`, 235.99870109558105`}, {195., 
                    212.31669425964355`}, {195., 22.863691329956055`}, {
                    30.928985595703125`, 117.59068870544434`}, {
                    30.928985595703125`, 307.0436840057373}}, {{200., 
                    410.42970085144043`}, {364.0710144042969, 
                    315.7036876678467}, {241.01799774169922`, 
                    244.65868949890137`}, {200., 220.97669792175293`}, {
                    158.98200225830078`, 244.65868949890137`}, {
                    35.928985595703125`, 315.7036876678467}, {200., 
                    410.42970085144043`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYA0XxdDiQNYJCATwveoAtG/6uTA/HWX
w8B8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYj2c/hUDJF/awKiz129jsL3c9qN
wo/gXBuDzK/YbRWDbF6F4MVoZPtmvJoejeyehpD9yiA6e88JMD+h/JYS2J6k
J2C+gleGEkQ9QyYyf9NcaWR+w1Rn80xk/bDwgZkPCz+Y/QGPF5Yju++B0sZy
ZPfD+DD/wfgw/8P4sPCBmQcLP5T4AgBuZHHc
                    "]}]}, 
                 {FaceForm[{RGBColor[
                  0.5529411764705883, 0.6745098039215687, 0.8117647058823529],
                   Opacity[1.]}], 
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}}}, {{{44.92900085449219, 282.59088134765625`}, {
                   181.00001525878906`, 204.0298843383789}, {
                   181.00001525878906`, 46.90887451171875}, {
                   44.92900085449219, 125.46986389160156`}, {
                   44.92900085449219, 282.59088134765625`}}}]}, 
                 {FaceForm[{RGBColor[
                  0.6627450980392157, 0.803921568627451, 0.5686274509803921], 
                  Opacity[1.]}], 
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}}}, {{{355.0710144042969, 282.59088134765625`}, {
                   355.0710144042969, 125.46986389160156`}, {219., 
                   46.90887451171875}, {219., 204.0298843383789}, {
                   355.0710144042969, 282.59088134765625`}}}]}, 
                 {FaceForm[{RGBColor[
                  0.6901960784313725, 0.5882352941176471, 0.8117647058823529],
                   Opacity[1.]}], 
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}}}, {{{200., 394.0606994628906}, {336.0710144042969, 
                   315.4997024536133}, {200., 236.93968200683594`}, {
                   63.928985595703125`, 315.4997024536133}, {200., 
                   394.0606994628906}}}]}},
                BaselinePosition->Scaled[0.15],
                ImageSize->10], 
               StyleBox[
                RowBox[{"QuantumCircuitOperator", " "}],
                ShowAutoStyles->False,
                ShowStringCharacters->False,
                FontSize->0.9 Inherited,
                FontColor->GrayLevel[0.1]]}
             },
             GridBoxSpacings->{"Columns" -> {{0.25}}}],
            Alignment->{Left, Baseline},
            BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
            BaselinePosition->Baseline,
            FrameMargins->{{3, 0}, {0, 0}}],
           RowBox[{"PacletSymbol", "[", 
             
             RowBox[{"\"Wolfram/QuantumFramework\"", ",", 
               "\"Wolfram`QuantumFramework`QuantumCircuitOperator\""}], "]"}],
           TooltipStyle->{
            ShowAutoStyles -> True, ShowStringCharacters -> True}],
          Annotation[#, 
           Style[
            Defer[
             PacletSymbol[
             "Wolfram/QuantumFramework", 
              "Wolfram`QuantumFramework`QuantumCircuitOperator"]], 
            ShowStringCharacters -> True], "Tooltip"]& ],
         Background->RGBColor[0.968, 0.976, 0.984],
         BaselinePosition->Baseline,
         DefaultBaseStyle->{},
         FrameMargins->{{0, 0}, {1, 1}},
         FrameStyle->RGBColor[0.831, 0.847, 0.85],
         RoundingRadius->4],
        PacletSymbol[
        "Wolfram/QuantumFramework", 
         "Wolfram`QuantumFramework`QuantumCircuitOperator"],
        BoxID -> "PacletSymbolBox",
        SelectWithContents->True,
        Selectable->False], "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"quantumGates", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "->", 
          RowBox[{"firstIndices", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "gates", "]"}], "]"}]}], "}"}]}], "]"}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"circuitPlot", "[", 
   RowBox[{"gates_", ",", " ", 
    RowBox[{"imSize_", ":", "Medium"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"quantumGates", ",", " ", "firstIndices", ",", " ", "qc"}], 
     "}"}], ",", "\[IndentingNewLine]", "  ", 
    RowBox[{"Image", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"quantumCircuit", "[", "gates", "]"}], "[", "\"\<Diagram\>\"", 
       "]"}], ",", " ", 
      RowBox[{"ImageSize", "->", "imSize"}]}], "]"}]}], "\[IndentingNewLine]",
    "]"}]}]}], "Code",
 CellChangeTimes->{{3.929179834343893*^9, 
  3.9291798602407875`*^9}},ExpressionUUID->"ac070dbf-4512-154e-bd24-\
3d3cc13c82d3"]
}, Closed]],

Cell[CellGroupData[{

Cell["Example Circuits", "Subsubsection",
 CellChangeTimes->{{3.929179559546631*^9, 
  3.92917956258926*^9}},ExpressionUUID->"b922571a-7f0a-2a41-9667-\
1a6d6708b0d9"],

Cell["\<\
Now that we can create, apply, and visualize a circuit to an input, here are \
some circuits that perform the XOR gate using only the NAND gate:\
\>", "Text",
 CellChangeTimes->{{3.9291795930736732`*^9, 3.929179660571268*^9}, {
   3.9291798997635937`*^9, 3.929179903910326*^9}, 
   3.9291830474237576`*^9},ExpressionUUID->"a9d21cda-9aab-844f-beaf-\
5e210e0a7b1a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"XorFromNandGatesCircuit", " ", "=", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Makes", " ", "use", " ", "of", " ", "SWAP"}], ",", " ", 
       "NAND", ",", " ", 
       RowBox[{"and", " ", "COPY"}]}], " ", "*)"}], "\n", "   ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", " ", "5"}], "}"}], ",", " ", "matrixZeroExpand"}], 
       "}"}], ",", "\n", "   ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", " ", "3"}], "}"}], ",", " ", "matrixCopy"}], "}"}],
       ",", "\n", "   ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", " ", "3"}], "}"}], ",", " ", "matrixNand"}], "}"}],
       ",", "\n", "   ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "2"}], "}"}], ",", " ", "matrixSwap"}], "}"}],
       ",", "\n", "   ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", " ", "4"}], "}"}], ",", " ", "matrixSwap"}], "}"}],
       ",", "\n", "   ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", " ", "3"}], "}"}], ",", " ", "matrixCopy"}], "}"}],
       ",", "\n", "   ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", " ", "3"}], "}"}], ",", " ", "matrixNand"}], "}"}],
       ",", "\n", "   ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "2"}], "}"}], ",", " ", "matrixNand"}], "}"}],
       ",", "\n", "   ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", " ", "4"}], "}"}], ",", " ", "matrixNand"}], "}"}],
       ",", "\n", "   ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", " ", "3"}], "}"}], ",", " ", "matrixSwap"}], "}"}],
       ",", "\n", "   ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", " ", "4"}], "}"}], ",", " ", "matrixNand"}], "}"}],
       ",", "\n", "   ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", " ", "5"}], "}"}], ",", " ", "matrixCopy"}], "}"}],
       ",", "\n", "   ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", " ", "5"}], "}"}], ",", " ", "matrixNand"}], "}"}],
       ",", "\n", "   ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"5", ",", " ", "5"}], "}"}], ",", " ", "matrixReturn"}], 
       "}"}]}], "\n", "   ", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XorFromNandGatesCircuitNoCopy", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"Longer", ",", " ", 
      RowBox[{
      "but", " ", "only", " ", "makes", " ", "use", " ", "of", " ", "SWAP", 
       " ", "and", " ", "NAND"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", " ", "12"}], "}"}], ",", " ", 
       "matrixRepeatExpand"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", " ", "5"}], "}"}], ",", " ", "matrixSwap"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"10", ",", " ", "11"}], "}"}], ",", " ", "matrixSwap"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "2"}], "}"}], ",", " ", "matrixNand"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", " ", "4"}], "}"}], ",", " ", "matrixNand"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", " ", "6"}], "}"}], ",", " ", "matrixNand"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", " ", "8"}], "}"}], ",", " ", "matrixNand"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"9", ",", " ", "10"}], "}"}], ",", " ", "matrixNand"}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"11", ",", " ", "12"}], "}"}], ",", " ", "matrixNand"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", " ", "5"}], "}"}], ",", " ", "matrixSwap"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"10", ",", " ", "11"}], "}"}], ",", " ", "matrixSwap"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", " ", "6"}], "}"}], ",", " ", "matrixNand"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"11", ",", " ", "12"}], "}"}], ",", " ", "matrixNand"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", " ", "5"}], "}"}], ",", " ", "matrixSwap"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", " ", "11"}], "}"}], ",", " ", "matrixSwap"}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", " ", "6"}], "}"}], ",", " ", "matrixNand"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"11", ",", " ", "12"}], "}"}], ",", " ", "matrixNand"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", " ", "11"}], "}"}], ",", " ", "matrixSwap"}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"11", ",", " ", "12"}], "}"}], ",", " ", "matrixNand"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"12", ",", " ", "12"}], "}"}], ",", " ", "matrixReturn"}], 
      "}"}]}], "\[IndentingNewLine]", "   ", "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.929094008008057*^9, 3.9290940285992203`*^9}, {
  3.9291111907842407`*^9, 3.929111242498829*^9}, {3.929111276233366*^9, 
  3.9291113406032715`*^9}, {3.9291113736180916`*^9, 3.929111545938614*^9}, {
  3.929125130368683*^9, 3.929125130693477*^9}, {3.929178223522501*^9, 
  3.9291782236803226`*^9}, {3.9291783291329384`*^9, 3.9291783292344494`*^9}, {
  3.929178451662201*^9, 3.9291784735643234`*^9}, {3.929179911965637*^9, 
  3.929179917214325*^9}, {3.9291830164706726`*^9, 
  3.929183040224512*^9}},ExpressionUUID->"12bdbfbc-d293-f74c-a5ce-\
94113cfbae61"],

Cell[BoxData[
 RowBox[{
  RowBox[{"logicFunctionFromCircuit", "[", "circuit_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"applyCircuit", "[", 
      RowBox[{"circuit", ",", " ", 
       RowBox[{"fullState", "[", 
        RowBox[{"{", 
         RowBox[{"#1", ",", " ", "#2"}], "}"}], "]"}]}], "]"}], " ", "//", 
     " ", "v2i"}], ")"}], "&"}]}]], "Code",
 CellChangeTimes->{{3.929094457940501*^9, 3.929094499395984*^9}, {
  3.929094570673998*^9, 3.929094572174961*^9}, {3.92909462099822*^9, 
  3.929094644775698*^9}, {3.929094706960785*^9, 3.929094707694404*^9}, {
  3.929094841119007*^9, 3.929094969823698*^9}, {3.9290950046286583`*^9, 
  3.929095008881405*^9}, {3.929095077060341*^9, 3.9290952546535873`*^9}, {
  3.9290956063221607`*^9, 3.929095612906451*^9}, {3.9290963760811443`*^9, 
  3.929096377831427*^9}, {3.929111799281004*^9, 3.9291118469525037`*^9}, {
  3.929114778844881*^9, 3.92911482666926*^9}, {3.929115286568314*^9, 
  3.9291153185408287`*^9}, {3.929116106281193*^9, 3.9291161417016177`*^9}, {
  3.929120937512778*^9, 3.929120941102864*^9}, {3.9291830841094875`*^9, 
  3.929183095739853*^9}},ExpressionUUID->"d7245546-9b37-b247-97a5-\
bbee64602793"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"numericalTruthTable", "[", 
  RowBox[{
   RowBox[{"logicFunctionFromCircuit", "[", "XorFromNandGatesCircuit", "]"}], 
   ",", " ", "\"\<XorWithCopy\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"numericalTruthTable", "[", 
  RowBox[{
   RowBox[{"logicFunctionFromCircuit", "[", "XorFromNandGatesCircuit", "]"}], 
   ",", " ", "\"\<XorWithoutCopy\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.929095529364315*^9, 3.929095537363207*^9}, {
   3.9291147518174305`*^9, 3.929114757388001*^9}, {3.929115324529737*^9, 
   3.929115333163082*^9}, {3.929116145185047*^9, 3.929116145550806*^9}, 
   3.9291161836574306`*^9, {3.929120382863697*^9, 3.929120387600241*^9}, {
   3.929124262244892*^9, 3.9291242902580814`*^9}, {3.9291830721501465`*^9, 
   3.929183077411373*^9}, {3.929183346503151*^9, 3.9291833526416264`*^9}, {
   3.929183576672552*^9, 3.929183599900093*^9}},
 CellLabel->
  "In[479]:=",ExpressionUUID->"63495a76-4190-5941-ba11-4a57ff3dd050"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"XorWithCopy\"\>", "\<\"0\"\>", "\<\"1\"\>"},
    {"\<\"0\"\>", "1", "0"},
    {"\<\"1\"\>", "0", "1"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Right}}, "Rows" -> {{Baseline}}},
   GridBoxBackground->{
    "Columns" -> {{None}}, "Rows" -> {{None}}, 
     "ItemsIndexed" -> {{2, 2} -> RGBColor[0, 1, 0, 0.3], {2, 3} -> 
       RGBColor[1, 0, 0, 0.3], {3, 2} -> RGBColor[1, 0, 0, 0.3], {3, 3} -> 
       RGBColor[0, 1, 0, 0.3]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {2 -> True}, "RowsIndexed" -> {2 -> True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.929132364038328*^9, 3.92913280193874*^9, 3.929132862582423*^9, 
   3.929174370432642*^9, 3.92917823854064*^9, {3.9291830779912663`*^9, 
   3.9291831046563396`*^9}, {3.9291833445117226`*^9, 3.929183352948227*^9}, 
   3.9291833880266857`*^9, {3.929183571569338*^9, 3.929183604595705*^9}, 
   3.9291836672498264`*^9},
 CellLabel->
  "Out[479]=",ExpressionUUID->"cd403bf3-128a-6e48-bbda-8e93353b92dd"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"XorWithoutCopy\"\>", "\<\"0\"\>", "\<\"1\"\>"},
    {"\<\"0\"\>", "1", "0"},
    {"\<\"1\"\>", "0", "1"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Right}}, "Rows" -> {{Baseline}}},
   GridBoxBackground->{
    "Columns" -> {{None}}, "Rows" -> {{None}}, 
     "ItemsIndexed" -> {{2, 2} -> RGBColor[0, 1, 0, 0.3], {2, 3} -> 
       RGBColor[1, 0, 0, 0.3], {3, 2} -> RGBColor[1, 0, 0, 0.3], {3, 3} -> 
       RGBColor[0, 1, 0, 0.3]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {2 -> True}, "RowsIndexed" -> {2 -> True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.929132364038328*^9, 3.92913280193874*^9, 3.929132862582423*^9, 
   3.929174370432642*^9, 3.92917823854064*^9, {3.9291830779912663`*^9, 
   3.9291831046563396`*^9}, {3.9291833445117226`*^9, 3.929183352948227*^9}, 
   3.9291833880266857`*^9, {3.929183571569338*^9, 3.929183604595705*^9}, 
   3.9291836673444996`*^9},
 CellLabel->
  "Out[480]=",ExpressionUUID->"d0bee36b-d71c-e84a-9b9c-49a2c0482658"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", " ", "/@", " ", 
  RowBox[{"circuitMatrices", "[", "XorFromNandGatesCircuit", "]"}]}]], "Input",
 CellChangeTimes->{{3.929095924515901*^9, 3.9290959719608345`*^9}, {
  3.929096260619017*^9, 3.9290963112334156`*^9}, {3.9290963866914806`*^9, 
  3.9290964444055824`*^9}, {3.929120316693053*^9, 3.929120317029465*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"ca5c9ab6-73e3-2142-a06a-1a6d317f06cf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    RasterBox[{{1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 
     1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 0}, {1, 1, 1, 1}, {1, 1, 1, 
     1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 
     1}, {1, 1, 0, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 
     1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 0, 1, 1}, {1, 1, 1, 
     1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 
     1}, {1, 1, 1, 1}, {0, 1, 1, 1}}, {{0, 0}, {4, 32}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmJiYGBQgGJG3ACfHK2lB9oNA+n3kejngXbDII0SmkszAgCAwgXJ

     "], {{0, 0}, {32, 32}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmJiYGBQgGJG3ACfHK2lB9INDPh10lR6IMFofNNfesABAHzCBck=

     "], {{0, 0}, {32, 32}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmJiYGBQgGJG/ICA/LCTHoROoov0YHLLaLzTT5oRAIDCBck=
     "], {{0, 0}, {32, 32}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmJiYGBQgGJG/ICAPF5pSvQOtO2j/qa3zQNr+0j1NyMAgMIFyQ==

     "], {{0, 0}, {32, 32}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmJiYGBQgGJG3ACfHK2lB9oNA+n3kejngXbDII0SmkszAgCAwgXJ

     "], {{0, 0}, {32, 32}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmJiYGBQgGJG3ACfHK2lB9INDPh10lR6IMFofNNfesABAHzCBck=

     "], {{0, 0}, {32, 32}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmJiYGBQgGJG7ACX+HCXHkxuoac0A3bhYS894gEAeMIFyQ==
     "], {{0, 0}, {32, 32}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmJiYGBQgGJGfAC/LCFpykxgwK+XgDRlYNTf5EhTZsKov8mRphgA
AH7CBck=
     "], {{0, 0}, {32, 32}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmJiYGBQgGJG/ICAPM2kB8reweCGgfT7SPTzQLthQP0OAIDCBck=

     "], {{0, 0}, {32, 32}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmJiYGBQgGJGfAC/LCFpykxgwK+XgDRlYNTf5EhTZsKov8mRphgA
AH7CBck=
     "], {{0, 0}, {32, 32}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmJiYGBQgGJGvICANCEFFJk+aveo3aN209ZuRkYAgMIFyQ==
     "], {{0, 0}, {32, 32}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmJiYGBQgGJGvICANAEFhEwftXvU7lG7B9JuRkYAf8IFyQ==
     "], {{0, 0}, {32, 32}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[
    RasterBox[{{1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
      0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0}, {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 
     0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1}}, {{0, 0}, {
     32, 2}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.929095924918182*^9, 3.9290959730460567`*^9}, {
   3.929096257226841*^9, 3.929096311671654*^9}, {3.929096362770523*^9, 
   3.929096387376341*^9}, 3.9290964567622566`*^9, 3.929096601863056*^9, {
   3.929104904324852*^9, 3.929104907691662*^9}, {3.929110740479481*^9, 
   3.9291107516709595`*^9}, 3.9291152736618633`*^9, 3.929120310973711*^9, 
   3.92912035841643*^9, 3.9291204312832375`*^9, 3.929120951735287*^9, 
   3.929121148786251*^9, 3.929124323636656*^9, 3.929125246274014*^9, 
   3.929128234590128*^9, 3.929132155837815*^9, 3.929132802228472*^9, 
   3.929132862873167*^9, 3.9291743707323723`*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"aa287668-d62b-4d46-93c5-3a37c514119e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"PacletInstall", "[", "\"\<Wolfram/QuantumFramework\>\"", "]"}], 
  ";"}]], "Input",
 CellLabel->
  "In[109]:=",ExpressionUUID->"1175835a-6786-f743-be16-d829d40a6354"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"quantumOperatorFormOfColumn", "[", 
   RowBox[{"i_Integer", ",", " ", "gates_", ",", " ", "n_"}], "]"}], ":=", 
  "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"G", ",", " ", "s1", ",", " ", "s2", ",", " ", "M"}], "}"}], ",",
     "\n", " ", 
    RowBox[{
     RowBox[{"G", "=", 
      RowBox[{"gates", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", " ", 
     RowBox[{"s1", "=", 
      RowBox[{"G", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", " ", "1"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"s2", "=", 
      RowBox[{"G", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     " ", 
     RowBox[{"M", "=", 
      RowBox[{"G", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Switch", " ", "for", " ", "irregular", " ", "functions"}], " ",
       "*)"}], "\[IndentingNewLine]", " ", 
     RowBox[{"Switch", "[", 
      RowBox[{"M", ",", "\[IndentingNewLine]", "  ", "matrixSwap", ",", 
       RowBox[{
        InterpretationBox[
         FrameBox[
          TagBox[
           TooltipBox[
            PaneBox[GridBox[{
               {
                ItemBox[
                 GraphicsBox[
                  {Thickness[0.0025], 
                   {FaceForm[{RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.863691329956055`}, {205., 
                    212.31669425964355`}, {246.01799774169922`, 
                    235.99870109558105`}, {369.0710144042969, 
                    307.0436840057373}, {369.0710144042969, 
                    117.59068870544434`}, {205., 22.863691329956055`}}, {{
                    30.928985595703125`, 307.0436840057373}, {
                    153.98200225830078`, 235.99870109558105`}, {195., 
                    212.31669425964355`}, {195., 22.863691329956055`}, {
                    30.928985595703125`, 117.59068870544434`}, {
                    30.928985595703125`, 307.0436840057373}}, {{200., 
                    410.42970085144043`}, {364.0710144042969, 
                    315.7036876678467}, {241.01799774169922`, 
                    244.65868949890137`}, {200., 220.97669792175293`}, {
                    158.98200225830078`, 244.65868949890137`}, {
                    35.928985595703125`, 315.7036876678467}, {200., 
                    410.42970085144043`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYA0XxdDiQNYJCATwveoAtG/6uTA/HWX
w8B8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYj2c/hUDJF/awKiz129jsL3c9qN
wo/gXBuDzK/YbRWDbF6F4MVoZPtmvJoejeyehpD9yiA6e88JMD+h/JYS2J6k
J2C+gleGEkQ9QyYyf9NcaWR+w1Rn80xk/bDwgZkPCz+Y/QGPF5Yju++B0sZy
ZPfD+DD/wfgw/8P4sPCBmQcLP5T4AgBuZHHc
                    "]}]}, 
                   {FaceForm[{RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{44.92900085449219, 282.59088134765625`}, {
                    181.00001525878906`, 204.0298843383789}, {
                    181.00001525878906`, 46.90887451171875}, {
                    44.92900085449219, 125.46986389160156`}, {
                    44.92900085449219, 282.59088134765625`}}}]}, 
                   {FaceForm[{RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{355.0710144042969, 282.59088134765625`}, {
                    355.0710144042969, 125.46986389160156`}, {219., 
                    46.90887451171875}, {219., 204.0298843383789}, {
                    355.0710144042969, 282.59088134765625`}}}]}, 
                   {FaceForm[{RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{200., 394.0606994628906}, {336.0710144042969, 
                    315.4997024536133}, {200., 236.93968200683594`}, {
                    63.928985595703125`, 315.4997024536133}, {200., 
                    394.0606994628906}}}]}},
                  BoxID -> 
                  "{\"data\":\"{\\\"jsonData\\\":\\\"{\\\\\\\"type\\\\\\\": \
\\\\\\\"Graphics\\\\\\\",\\\\n\\\\\\\"version\\\\\\\": \\\\\\\"1.0\\\\\\\",\\\
\\n\\\\\\\"height\\\\\\\": 11.433641,\\\\n\\\\\\\"width\\\\\\\": 10.000000,\\\
\\n\\\\\\\"offset\\\\\\\": [-66.000000, \
-5.000000],\\\\n\\\\\\\"UserCoords\\\\\\\": [13.467693, 428.589520, \
386.532307, 2.040850],\\\\n\\\\\\\"AxesOrigin\\\\\\\": [50.000000, \
100.000000],\\\\n\\\\\\\"primitives\\\\\\\": [\\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Clip\\\\\\\", \\\\\\\"transform\\\\\\\": [1.000000, 0.000000, \
0.000000, 1.000000, 0.000000, 0.000000], \\\\\\\"path\\\\\\\": [[66,5], \
[66,17], [76,17], [76,5]]},\\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\
\\\\\\\": {\\\\\\\"color\\\\\\\": [245, 129, 50], \\\\\\\"opacity\\\\\\\": 1, \
\\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [245, 129, 50], \\\\\\\"opacity\\\\\\\": 1}, \\\\\\\"fillrule\\\\\\\" \
: \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": [[71.134,15.8755], \
[71.134,10.7972], [72.2335,10.1624], [75.5319,8.25804], [75.5319,13.3363], \
[71.134,15.8755], [71.134,15.8755], [66.4681,8.25804], [69.7665,10.1624], \
[70.866,10.7972], [70.866,15.8755], [66.4681,13.3363], [66.4681,8.25804], \
[66.4681,8.25804], [71,5.48677], [75.3979,8.02591], [72.0995,9.93027], \
[71,10.5651], [69.9005,9.93027], [66.6021,8.02591], [71,5.48677], \
[71,5.48677], [75.733,7.90984], [71.067,5.21594], [71.0411,5.20445], \
[71.0139,5.1987], [70.9861,5.1987], [70.9589,5.20445], [70.933,5.21594], \
[66.267,7.90984], [66.2441,7.92651], [66.2255,7.94725], [66.2116,7.97126], \
[66.203,7.99775], [66.2,8.02591], [66.2,13.4137], [66.203,13.4419], \
[66.2116,13.4684], [66.2255,13.4924], [66.2441,13.5131], [66.267,13.5298], \
[70.933,16.2237], [70.9457,16.2301], [70.9589,16.2352], [70.9724,16.2388], \
[70.9861,16.2409], [71,16.2416], [71.0139,16.2409], [71.0276,16.2388], \
[71.0411,16.2352], [71.0543,16.2301], [71.067,16.2237], [75.733,13.5298], \
[75.7559,13.5131], [75.7745,13.4924], [75.7884,13.4684], [75.797,13.4419], \
[75.8,13.4137], [75.8,8.02591], [75.797,7.99775], [75.7884,7.97126], \
[75.7745,7.94725], [75.7559,7.92651], [75.733,7.90984], [75.733,7.90984], \
[75.733,7.90984], [71,5.48677], [66.4681,8.25804]]}, \\\\n{\\\\\\\"type\\\\\\\
\": \\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \
\\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [141, 172, 207], \
\\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": {}, \
\\\\\\\"capForm\\\\\\\": \\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": \
{\\\\\\\"type\\\\\\\": \\\\\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\
\\\\\"dashing\\\\\\\": [], \\\\\\\"dashingOffset\\\\\\\": 0}, \
\\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\\\\\": [141, 172, 207], \
\\\\\\\"opacity\\\\\\\": 1}, \\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\
\" , \\\\\\\"points\\\\\\\": [[66.8433,8.91349], [70.4907,11.0193], \
[70.4907,15.231], [66.8433,13.1251], [66.8433,8.91349], [66.8433,8.91349]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Polygon\\\\\\\", \
\\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\\\\\\\": \
{\\\\\\\"color\\\\\\\": [169, 205, 145], \\\\\\\"opacity\\\\\\\": 1, \
\\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [169, 205, 145], \\\\\\\"opacity\\\\\\\": 1}, \
\\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": \
[[75.1567,8.91349], [75.1567,13.1251], [71.5093,15.231], [71.5093,11.0193], \
[75.1567,8.91349], [75.1567,8.91349]]}, \\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\
\\\\\\\": {\\\\\\\"color\\\\\\\": [176, 150, 207], \\\\\\\"opacity\\\\\\\": \
1, \\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \\\\\\\"Square\\\\\
\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\\\"Miter\\\\\\\", \
\\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [176, 150, 207], \\\\\\\"opacity\\\\\\\": 1}, \
\\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": \
[[71,5.92555], [74.6474,8.03137], [71,10.1372], [67.3526,8.03137], \
[71,5.92555], [71,5.92555]]}, \\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Group\\\\\\\
\", \\\\\\\"name\\\\\\\": \
\\\\\\\"Frame\\\\\\\",\\\\n\\\\\\\"metadata\\\\\\\": {\\\\\\\"left\\\\\\\": \
13.4677, \\\\\\\"top\\\\\\\": 428.59, \\\\\\\"right\\\\\\\": 386.532, \
\\\\\\\"bottom\\\\\\\": 2.04085},\\\\n\\\\\\\"primitives\\\\\\\":[]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Group\\\\\\\", \\\\\\\"name\\\\\\\": \\\\\
\\\"Axes\\\\\\\",\\\\n\\\\\\\"metadata\\\\\\\": \\\\\\\"TBD\\\\\\\",\\\\n\\\\\
\\\"primitives\\\\\\\":[]}],\\\\n\\\\\\\"PlotRange\\\\\\\": {\\\\\\\"left\\\\\
\\\": -0.000000, \\\\\\\"top\\\\\\\": -9.433641, \\\\\\\"right\\\\\\\": \
10.000000, \\\\\\\"bottom\\\\\\\": \
2.000000}\\\\n}\\\\n\\\",\\\"requestedImageSize\\\":10}\"}",
                  BaselinePosition->Scaled[0.15],
                  ImageSize->10]], 
                ItemBox[
                 StyleBox[
                  RowBox[{"QuantumOperator", " "}],
                  ShowAutoStyles->False,
                  ShowStringCharacters->False,
                  FontSize->0.9 Inherited,
                  FontColor->GrayLevel[0.1]]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->{Left, Baseline},
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}],
            RowBox[{"PacletSymbol", "[", 
              
              RowBox[{"\"Wolfram/QuantumFramework\"", ",", 
                "\"Wolfram`QuantumFramework`QuantumOperator\""}], "]"}],
            
            TooltipStyle->{
             ShowAutoStyles -> True, ShowStringCharacters -> True}],
           Annotation[#, 
            Style[
             Defer[
              PacletSymbol[
              "Wolfram/QuantumFramework", 
               "Wolfram`QuantumFramework`QuantumOperator"]], 
             ShowStringCharacters -> True], "Tooltip"]& ],
          Background->RGBColor[0.968, 0.976, 0.984],
          BaselinePosition->Baseline,
          DefaultBaseStyle->{},
          FrameMargins->{{0, 0}, {1, 1}},
          FrameStyle->RGBColor[0.831, 0.847, 0.85],
          RoundingRadius->4],
         PacletSymbol[
         "Wolfram/QuantumFramework", 
          "Wolfram`QuantumFramework`QuantumOperator"],
         TaggingRules -> {
          "Paclet" -> "Wolfram/QuantumFramework", "Symbol" -> 
           "Wolfram`QuantumFramework`QuantumOperator"},
         BoxID -> "PacletSymbolBox",
         SelectWithContents->True,
         Selectable->False], "[", 
        RowBox[{"\"\<SWAP\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"s1", ",", " ", "s2"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "  ", "matrixReturn", ",", 
       RowBox[{
        InterpretationBox[
         FrameBox[
          TagBox[
           TooltipBox[
            PaneBox[GridBox[{
               {
                ItemBox[
                 GraphicsBox[
                  {Thickness[0.0025], 
                   {FaceForm[{RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.863691329956055`}, {205., 
                    212.31669425964355`}, {246.01799774169922`, 
                    235.99870109558105`}, {369.0710144042969, 
                    307.0436840057373}, {369.0710144042969, 
                    117.59068870544434`}, {205., 22.863691329956055`}}, {{
                    30.928985595703125`, 307.0436840057373}, {
                    153.98200225830078`, 235.99870109558105`}, {195., 
                    212.31669425964355`}, {195., 22.863691329956055`}, {
                    30.928985595703125`, 117.59068870544434`}, {
                    30.928985595703125`, 307.0436840057373}}, {{200., 
                    410.42970085144043`}, {364.0710144042969, 
                    315.7036876678467}, {241.01799774169922`, 
                    244.65868949890137`}, {200., 220.97669792175293`}, {
                    158.98200225830078`, 244.65868949890137`}, {
                    35.928985595703125`, 315.7036876678467}, {200., 
                    410.42970085144043`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYA0XxdDiQNYJCATwveoAtG/6uTA/HWX
w8B8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYj2c/hUDJF/awKiz129jsL3c9qN
wo/gXBuDzK/YbRWDbF6F4MVoZPtmvJoejeyehpD9yiA6e88JMD+h/JYS2J6k
J2C+gleGEkQ9QyYyf9NcaWR+w1Rn80xk/bDwgZkPCz+Y/QGPF5Yju++B0sZy
ZPfD+DD/wfgw/8P4sPCBmQcLP5T4AgBuZHHc
                    "]}]}, 
                   {FaceForm[{RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{44.92900085449219, 282.59088134765625`}, {
                    181.00001525878906`, 204.0298843383789}, {
                    181.00001525878906`, 46.90887451171875}, {
                    44.92900085449219, 125.46986389160156`}, {
                    44.92900085449219, 282.59088134765625`}}}]}, 
                   {FaceForm[{RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{355.0710144042969, 282.59088134765625`}, {
                    355.0710144042969, 125.46986389160156`}, {219., 
                    46.90887451171875}, {219., 204.0298843383789}, {
                    355.0710144042969, 282.59088134765625`}}}]}, 
                   {FaceForm[{RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{200., 394.0606994628906}, {336.0710144042969, 
                    315.4997024536133}, {200., 236.93968200683594`}, {
                    63.928985595703125`, 315.4997024536133}, {200., 
                    394.0606994628906}}}]}},
                  BaselinePosition->Scaled[0.15],
                  ImageSize->10]], 
                ItemBox[
                 StyleBox[
                  RowBox[{"QuantumMeasurementOperator", " "}],
                  ShowAutoStyles->False,
                  ShowStringCharacters->False,
                  FontSize->0.9 Inherited,
                  FontColor->GrayLevel[0.1]]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->{Left, Baseline},
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}],
            RowBox[{"PacletSymbol", "[", 
              
              RowBox[{"\"Wolfram/QuantumFramework\"", ",", 
                "\"Wolfram`QuantumFramework`QuantumMeasurementOperator\""}], 
              "]"}],
            
            TooltipStyle->{
             ShowAutoStyles -> True, ShowStringCharacters -> True}],
           Annotation[#, 
            Style[
             Defer[
              PacletSymbol[
              "Wolfram/QuantumFramework", 
               "Wolfram`QuantumFramework`QuantumMeasurementOperator"]], 
             ShowStringCharacters -> True], "Tooltip"]& ],
          Background->RGBColor[0.968, 0.976, 0.984],
          BaselinePosition->Baseline,
          DefaultBaseStyle->{},
          FrameMargins->{{0, 0}, {1, 1}},
          FrameStyle->RGBColor[0.831, 0.847, 0.85],
          RoundingRadius->4],
         PacletSymbol[
         "Wolfram/QuantumFramework", 
          "Wolfram`QuantumFramework`QuantumMeasurementOperator"],
         TaggingRules -> {
          "Paclet" -> "Wolfram/QuantumFramework", "Symbol" -> 
           "Wolfram`QuantumFramework`QuantumMeasurementOperator"},
         BoxID -> "PacletSymbolBox",
         SelectWithContents->True,
         Selectable->False], "[", 
        RowBox[{"\"\<Z\>\"", ",", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"s1", "==", "s2"}], ",", " ", 
           RowBox[{"{", "s1", "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"s1", ",", " ", "s2"}], "}"}]}], "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "  ", "matrixCopy", ",", " ", 
       RowBox[{
        InterpretationBox[
         FrameBox[
          TagBox[
           TooltipBox[
            PaneBox[GridBox[{
               {
                ItemBox[
                 GraphicsBox[
                  {Thickness[0.0025], 
                   {FaceForm[{RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.863691329956055`}, {205., 
                    212.31669425964355`}, {246.01799774169922`, 
                    235.99870109558105`}, {369.0710144042969, 
                    307.0436840057373}, {369.0710144042969, 
                    117.59068870544434`}, {205., 22.863691329956055`}}, {{
                    30.928985595703125`, 307.0436840057373}, {
                    153.98200225830078`, 235.99870109558105`}, {195., 
                    212.31669425964355`}, {195., 22.863691329956055`}, {
                    30.928985595703125`, 117.59068870544434`}, {
                    30.928985595703125`, 307.0436840057373}}, {{200., 
                    410.42970085144043`}, {364.0710144042969, 
                    315.7036876678467}, {241.01799774169922`, 
                    244.65868949890137`}, {200., 220.97669792175293`}, {
                    158.98200225830078`, 244.65868949890137`}, {
                    35.928985595703125`, 315.7036876678467}, {200., 
                    410.42970085144043`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYA0XxdDiQNYJCATwveoAtG/6uTA/HWX
w8B8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYj2c/hUDJF/awKiz129jsL3c9qN
wo/gXBuDzK/YbRWDbF6F4MVoZPtmvJoejeyehpD9yiA6e88JMD+h/JYS2J6k
J2C+gleGEkQ9QyYyf9NcaWR+w1Rn80xk/bDwgZkPCz+Y/QGPF5Yju++B0sZy
ZPfD+DD/wfgw/8P4sPCBmQcLP5T4AgBuZHHc
                    "]}]}, 
                   {FaceForm[{RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{44.92900085449219, 282.59088134765625`}, {
                    181.00001525878906`, 204.0298843383789}, {
                    181.00001525878906`, 46.90887451171875}, {
                    44.92900085449219, 125.46986389160156`}, {
                    44.92900085449219, 282.59088134765625`}}}]}, 
                   {FaceForm[{RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{355.0710144042969, 282.59088134765625`}, {
                    355.0710144042969, 125.46986389160156`}, {219., 
                    46.90887451171875}, {219., 204.0298843383789}, {
                    355.0710144042969, 282.59088134765625`}}}]}, 
                   {FaceForm[{RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{200., 394.0606994628906}, {336.0710144042969, 
                    315.4997024536133}, {200., 236.93968200683594`}, {
                    63.928985595703125`, 315.4997024536133}, {200., 
                    394.0606994628906}}}]}},
                  BoxID -> 
                  "{\"data\":\"{\\\"jsonData\\\":\\\"{\\\\\\\"type\\\\\\\": \
\\\\\\\"Graphics\\\\\\\",\\\\n\\\\\\\"version\\\\\\\": \\\\\\\"1.0\\\\\\\",\\\
\\n\\\\\\\"height\\\\\\\": 11.433641,\\\\n\\\\\\\"width\\\\\\\": 10.000000,\\\
\\n\\\\\\\"offset\\\\\\\": [-66.000000, \
-5.000000],\\\\n\\\\\\\"UserCoords\\\\\\\": [13.467693, 428.589520, \
386.532307, 2.040850],\\\\n\\\\\\\"AxesOrigin\\\\\\\": [50.000000, \
100.000000],\\\\n\\\\\\\"primitives\\\\\\\": [\\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Clip\\\\\\\", \\\\\\\"transform\\\\\\\": [1.000000, 0.000000, \
0.000000, 1.000000, 0.000000, 0.000000], \\\\\\\"path\\\\\\\": [[66,5], \
[66,17], [76,17], [76,5]]},\\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\
\\\\\\\": {\\\\\\\"color\\\\\\\": [245, 129, 50], \\\\\\\"opacity\\\\\\\": 1, \
\\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [245, 129, 50], \\\\\\\"opacity\\\\\\\": 1}, \\\\\\\"fillrule\\\\\\\" \
: \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": [[71.134,15.8755], \
[71.134,10.7972], [72.2335,10.1624], [75.5319,8.25804], [75.5319,13.3363], \
[71.134,15.8755], [71.134,15.8755], [66.4681,8.25804], [69.7665,10.1624], \
[70.866,10.7972], [70.866,15.8755], [66.4681,13.3363], [66.4681,8.25804], \
[66.4681,8.25804], [71,5.48677], [75.3979,8.02591], [72.0995,9.93027], \
[71,10.5651], [69.9005,9.93027], [66.6021,8.02591], [71,5.48677], \
[71,5.48677], [75.733,7.90984], [71.067,5.21594], [71.0411,5.20445], \
[71.0139,5.1987], [70.9861,5.1987], [70.9589,5.20445], [70.933,5.21594], \
[66.267,7.90984], [66.2441,7.92651], [66.2255,7.94725], [66.2116,7.97126], \
[66.203,7.99775], [66.2,8.02591], [66.2,13.4137], [66.203,13.4419], \
[66.2116,13.4684], [66.2255,13.4924], [66.2441,13.5131], [66.267,13.5298], \
[70.933,16.2237], [70.9457,16.2301], [70.9589,16.2352], [70.9724,16.2388], \
[70.9861,16.2409], [71,16.2416], [71.0139,16.2409], [71.0276,16.2388], \
[71.0411,16.2352], [71.0543,16.2301], [71.067,16.2237], [75.733,13.5298], \
[75.7559,13.5131], [75.7745,13.4924], [75.7884,13.4684], [75.797,13.4419], \
[75.8,13.4137], [75.8,8.02591], [75.797,7.99775], [75.7884,7.97126], \
[75.7745,7.94725], [75.7559,7.92651], [75.733,7.90984], [75.733,7.90984], \
[75.733,7.90984], [71,5.48677], [66.4681,8.25804]]}, \\\\n{\\\\\\\"type\\\\\\\
\": \\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \
\\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [141, 172, 207], \
\\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": {}, \
\\\\\\\"capForm\\\\\\\": \\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": \
{\\\\\\\"type\\\\\\\": \\\\\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\
\\\\\"dashing\\\\\\\": [], \\\\\\\"dashingOffset\\\\\\\": 0}, \
\\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\\\\\": [141, 172, 207], \
\\\\\\\"opacity\\\\\\\": 1}, \\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\
\" , \\\\\\\"points\\\\\\\": [[66.8433,8.91349], [70.4907,11.0193], \
[70.4907,15.231], [66.8433,13.1251], [66.8433,8.91349], [66.8433,8.91349]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Polygon\\\\\\\", \
\\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\\\\\\\": \
{\\\\\\\"color\\\\\\\": [169, 205, 145], \\\\\\\"opacity\\\\\\\": 1, \
\\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [169, 205, 145], \\\\\\\"opacity\\\\\\\": 1}, \
\\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": \
[[75.1567,8.91349], [75.1567,13.1251], [71.5093,15.231], [71.5093,11.0193], \
[75.1567,8.91349], [75.1567,8.91349]]}, \\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\
\\\\\\\": {\\\\\\\"color\\\\\\\": [176, 150, 207], \\\\\\\"opacity\\\\\\\": \
1, \\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \\\\\\\"Square\\\\\
\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\\\"Miter\\\\\\\", \
\\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [176, 150, 207], \\\\\\\"opacity\\\\\\\": 1}, \
\\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": \
[[71,5.92555], [74.6474,8.03137], [71,10.1372], [67.3526,8.03137], \
[71,5.92555], [71,5.92555]]}, \\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Group\\\\\\\
\", \\\\\\\"name\\\\\\\": \
\\\\\\\"Frame\\\\\\\",\\\\n\\\\\\\"metadata\\\\\\\": {\\\\\\\"left\\\\\\\": \
13.4677, \\\\\\\"top\\\\\\\": 428.59, \\\\\\\"right\\\\\\\": 386.532, \
\\\\\\\"bottom\\\\\\\": 2.04085},\\\\n\\\\\\\"primitives\\\\\\\":[]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Group\\\\\\\", \\\\\\\"name\\\\\\\": \\\\\
\\\"Axes\\\\\\\",\\\\n\\\\\\\"metadata\\\\\\\": \\\\\\\"TBD\\\\\\\",\\\\n\\\\\
\\\"primitives\\\\\\\":[]}],\\\\n\\\\\\\"PlotRange\\\\\\\": {\\\\\\\"left\\\\\
\\\": -0.000000, \\\\\\\"top\\\\\\\": -9.433641, \\\\\\\"right\\\\\\\": \
10.000000, \\\\\\\"bottom\\\\\\\": \
2.000000}\\\\n}\\\\n\\\",\\\"requestedImageSize\\\":10}\"}",
                  BaselinePosition->Scaled[0.15],
                  ImageSize->10]], 
                ItemBox[
                 StyleBox[
                  RowBox[{"QuantumOperator", " "}],
                  ShowAutoStyles->False,
                  ShowStringCharacters->False,
                  FontSize->0.9 Inherited,
                  FontColor->GrayLevel[0.1]]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->{Left, Baseline},
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}],
            RowBox[{"PacletSymbol", "[", 
              
              RowBox[{"\"Wolfram/QuantumFramework\"", ",", 
                "\"Wolfram`QuantumFramework`QuantumOperator\""}], "]"}],
            
            TooltipStyle->{
             ShowAutoStyles -> True, ShowStringCharacters -> True}],
           Annotation[#, 
            Style[
             Defer[
              PacletSymbol[
              "Wolfram/QuantumFramework", 
               "Wolfram`QuantumFramework`QuantumOperator"]], 
             ShowStringCharacters -> True], "Tooltip"]& ],
          Background->RGBColor[0.968, 0.976, 0.984],
          BaselinePosition->Baseline,
          DefaultBaseStyle->{},
          FrameMargins->{{0, 0}, {1, 1}},
          FrameStyle->RGBColor[0.831, 0.847, 0.85],
          RoundingRadius->4],
         PacletSymbol[
         "Wolfram/QuantumFramework", 
          "Wolfram`QuantumFramework`QuantumOperator"],
         TaggingRules -> {
          "Paclet" -> "Wolfram/QuantumFramework", "Symbol" -> 
           "Wolfram`QuantumFramework`QuantumOperator"},
         BoxID -> "PacletSymbolBox",
         SelectWithContents->True,
         Selectable->False], "[", 
        RowBox[{"\"\<CNOT\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"s1", ",", " ", "s2"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "  ", "matrixZeroExpand", ",", " ", 
       RowBox[{
        InterpretationBox[
         FrameBox[
          TagBox[
           TooltipBox[
            PaneBox[GridBox[{
               {
                ItemBox[
                 GraphicsBox[
                  {Thickness[0.0025], 
                   {FaceForm[{RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.863691329956055`}, {205., 
                    212.31669425964355`}, {246.01799774169922`, 
                    235.99870109558105`}, {369.0710144042969, 
                    307.0436840057373}, {369.0710144042969, 
                    117.59068870544434`}, {205., 22.863691329956055`}}, {{
                    30.928985595703125`, 307.0436840057373}, {
                    153.98200225830078`, 235.99870109558105`}, {195., 
                    212.31669425964355`}, {195., 22.863691329956055`}, {
                    30.928985595703125`, 117.59068870544434`}, {
                    30.928985595703125`, 307.0436840057373}}, {{200., 
                    410.42970085144043`}, {364.0710144042969, 
                    315.7036876678467}, {241.01799774169922`, 
                    244.65868949890137`}, {200., 220.97669792175293`}, {
                    158.98200225830078`, 244.65868949890137`}, {
                    35.928985595703125`, 315.7036876678467}, {200., 
                    410.42970085144043`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYA0XxdDiQNYJCATwveoAtG/6uTA/HWX
w8B8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYj2c/hUDJF/awKiz129jsL3c9qN
wo/gXBuDzK/YbRWDbF6F4MVoZPtmvJoejeyehpD9yiA6e88JMD+h/JYS2J6k
J2C+gleGEkQ9QyYyf9NcaWR+w1Rn80xk/bDwgZkPCz+Y/QGPF5Yju++B0sZy
ZPfD+DD/wfgw/8P4sPCBmQcLP5T4AgBuZHHc
                    "]}]}, 
                   {FaceForm[{RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{44.92900085449219, 282.59088134765625`}, {
                    181.00001525878906`, 204.0298843383789}, {
                    181.00001525878906`, 46.90887451171875}, {
                    44.92900085449219, 125.46986389160156`}, {
                    44.92900085449219, 282.59088134765625`}}}]}, 
                   {FaceForm[{RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{355.0710144042969, 282.59088134765625`}, {
                    355.0710144042969, 125.46986389160156`}, {219., 
                    46.90887451171875}, {219., 204.0298843383789}, {
                    355.0710144042969, 282.59088134765625`}}}]}, 
                   {FaceForm[{RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{200., 394.0606994628906}, {336.0710144042969, 
                    315.4997024536133}, {200., 236.93968200683594`}, {
                    63.928985595703125`, 315.4997024536133}, {200., 
                    394.0606994628906}}}]}},
                  BoxID -> 
                  "{\"data\":\"{\\\"jsonData\\\":\\\"{\\\\\\\"type\\\\\\\": \
\\\\\\\"Graphics\\\\\\\",\\\\n\\\\\\\"version\\\\\\\": \\\\\\\"1.0\\\\\\\",\\\
\\n\\\\\\\"height\\\\\\\": 11.433641,\\\\n\\\\\\\"width\\\\\\\": 10.000000,\\\
\\n\\\\\\\"offset\\\\\\\": [-66.000000, \
-5.000000],\\\\n\\\\\\\"UserCoords\\\\\\\": [13.467693, 428.589520, \
386.532307, 2.040850],\\\\n\\\\\\\"AxesOrigin\\\\\\\": [50.000000, \
100.000000],\\\\n\\\\\\\"primitives\\\\\\\": [\\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Clip\\\\\\\", \\\\\\\"transform\\\\\\\": [1.000000, 0.000000, \
0.000000, 1.000000, 0.000000, 0.000000], \\\\\\\"path\\\\\\\": [[66,5], \
[66,17], [76,17], [76,5]]},\\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\
\\\\\\\": {\\\\\\\"color\\\\\\\": [245, 129, 50], \\\\\\\"opacity\\\\\\\": 1, \
\\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [245, 129, 50], \\\\\\\"opacity\\\\\\\": 1}, \\\\\\\"fillrule\\\\\\\" \
: \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": [[71.134,15.8755], \
[71.134,10.7972], [72.2335,10.1624], [75.5319,8.25804], [75.5319,13.3363], \
[71.134,15.8755], [71.134,15.8755], [66.4681,8.25804], [69.7665,10.1624], \
[70.866,10.7972], [70.866,15.8755], [66.4681,13.3363], [66.4681,8.25804], \
[66.4681,8.25804], [71,5.48677], [75.3979,8.02591], [72.0995,9.93027], \
[71,10.5651], [69.9005,9.93027], [66.6021,8.02591], [71,5.48677], \
[71,5.48677], [75.733,7.90984], [71.067,5.21594], [71.0411,5.20445], \
[71.0139,5.1987], [70.9861,5.1987], [70.9589,5.20445], [70.933,5.21594], \
[66.267,7.90984], [66.2441,7.92651], [66.2255,7.94725], [66.2116,7.97126], \
[66.203,7.99775], [66.2,8.02591], [66.2,13.4137], [66.203,13.4419], \
[66.2116,13.4684], [66.2255,13.4924], [66.2441,13.5131], [66.267,13.5298], \
[70.933,16.2237], [70.9457,16.2301], [70.9589,16.2352], [70.9724,16.2388], \
[70.9861,16.2409], [71,16.2416], [71.0139,16.2409], [71.0276,16.2388], \
[71.0411,16.2352], [71.0543,16.2301], [71.067,16.2237], [75.733,13.5298], \
[75.7559,13.5131], [75.7745,13.4924], [75.7884,13.4684], [75.797,13.4419], \
[75.8,13.4137], [75.8,8.02591], [75.797,7.99775], [75.7884,7.97126], \
[75.7745,7.94725], [75.7559,7.92651], [75.733,7.90984], [75.733,7.90984], \
[75.733,7.90984], [71,5.48677], [66.4681,8.25804]]}, \\\\n{\\\\\\\"type\\\\\\\
\": \\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \
\\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [141, 172, 207], \
\\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": {}, \
\\\\\\\"capForm\\\\\\\": \\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": \
{\\\\\\\"type\\\\\\\": \\\\\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\
\\\\\"dashing\\\\\\\": [], \\\\\\\"dashingOffset\\\\\\\": 0}, \
\\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\\\\\": [141, 172, 207], \
\\\\\\\"opacity\\\\\\\": 1}, \\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\
\" , \\\\\\\"points\\\\\\\": [[66.8433,8.91349], [70.4907,11.0193], \
[70.4907,15.231], [66.8433,13.1251], [66.8433,8.91349], [66.8433,8.91349]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Polygon\\\\\\\", \
\\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\\\\\\\": \
{\\\\\\\"color\\\\\\\": [169, 205, 145], \\\\\\\"opacity\\\\\\\": 1, \
\\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [169, 205, 145], \\\\\\\"opacity\\\\\\\": 1}, \
\\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": \
[[75.1567,8.91349], [75.1567,13.1251], [71.5093,15.231], [71.5093,11.0193], \
[75.1567,8.91349], [75.1567,8.91349]]}, \\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\
\\\\\\\": {\\\\\\\"color\\\\\\\": [176, 150, 207], \\\\\\\"opacity\\\\\\\": \
1, \\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \\\\\\\"Square\\\\\
\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\\\"Miter\\\\\\\", \
\\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [176, 150, 207], \\\\\\\"opacity\\\\\\\": 1}, \
\\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": \
[[71,5.92555], [74.6474,8.03137], [71,10.1372], [67.3526,8.03137], \
[71,5.92555], [71,5.92555]]}, \\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Group\\\\\\\
\", \\\\\\\"name\\\\\\\": \
\\\\\\\"Frame\\\\\\\",\\\\n\\\\\\\"metadata\\\\\\\": {\\\\\\\"left\\\\\\\": \
13.4677, \\\\\\\"top\\\\\\\": 428.59, \\\\\\\"right\\\\\\\": 386.532, \
\\\\\\\"bottom\\\\\\\": 2.04085},\\\\n\\\\\\\"primitives\\\\\\\":[]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Group\\\\\\\", \\\\\\\"name\\\\\\\": \\\\\
\\\"Axes\\\\\\\",\\\\n\\\\\\\"metadata\\\\\\\": \\\\\\\"TBD\\\\\\\",\\\\n\\\\\
\\\"primitives\\\\\\\":[]}],\\\\n\\\\\\\"PlotRange\\\\\\\": {\\\\\\\"left\\\\\
\\\": -0.000000, \\\\\\\"top\\\\\\\": -9.433641, \\\\\\\"right\\\\\\\": \
10.000000, \\\\\\\"bottom\\\\\\\": \
2.000000}\\\\n}\\\\n\\\",\\\"requestedImageSize\\\":10}\"}",
                  BaselinePosition->Scaled[0.15],
                  ImageSize->10]], 
                ItemBox[
                 StyleBox[
                  RowBox[{"QuantumOperator", " "}],
                  ShowAutoStyles->False,
                  ShowStringCharacters->False,
                  FontSize->0.9 Inherited,
                  FontColor->GrayLevel[0.1]]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->{Left, Baseline},
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}],
            RowBox[{"PacletSymbol", "[", 
              
              RowBox[{"\"Wolfram/QuantumFramework\"", ",", 
                "\"Wolfram`QuantumFramework`QuantumOperator\""}], "]"}],
            
            TooltipStyle->{
             ShowAutoStyles -> True, ShowStringCharacters -> True}],
           Annotation[#, 
            Style[
             Defer[
              PacletSymbol[
              "Wolfram/QuantumFramework", 
               "Wolfram`QuantumFramework`QuantumOperator"]], 
             ShowStringCharacters -> True], "Tooltip"]& ],
          Background->RGBColor[0.968, 0.976, 0.984],
          BaselinePosition->Baseline,
          DefaultBaseStyle->{},
          FrameMargins->{{0, 0}, {1, 1}},
          FrameStyle->RGBColor[0.831, 0.847, 0.85],
          RoundingRadius->4],
         PacletSymbol[
         "Wolfram/QuantumFramework", 
          "Wolfram`QuantumFramework`QuantumOperator"],
         TaggingRules -> {
          "Paclet" -> "Wolfram/QuantumFramework", "Symbol" -> 
           "Wolfram`QuantumFramework`QuantumOperator"},
         BoxID -> "PacletSymbolBox",
         SelectWithContents->True,
         Selectable->False], "[", 
        RowBox[{
         RowBox[{"matrixZeroExpand", "[", 
          RowBox[{"n", ",", " ", "s1", ",", " ", "s2"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"s1", ",", " ", "s2"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "  ", "matrixRepeatExpand", ",", " ", 
       RowBox[{
        InterpretationBox[
         FrameBox[
          TagBox[
           TooltipBox[
            PaneBox[GridBox[{
               {
                ItemBox[
                 GraphicsBox[
                  {Thickness[0.0025], 
                   {FaceForm[{RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.863691329956055`}, {205., 
                    212.31669425964355`}, {246.01799774169922`, 
                    235.99870109558105`}, {369.0710144042969, 
                    307.0436840057373}, {369.0710144042969, 
                    117.59068870544434`}, {205., 22.863691329956055`}}, {{
                    30.928985595703125`, 307.0436840057373}, {
                    153.98200225830078`, 235.99870109558105`}, {195., 
                    212.31669425964355`}, {195., 22.863691329956055`}, {
                    30.928985595703125`, 117.59068870544434`}, {
                    30.928985595703125`, 307.0436840057373}}, {{200., 
                    410.42970085144043`}, {364.0710144042969, 
                    315.7036876678467}, {241.01799774169922`, 
                    244.65868949890137`}, {200., 220.97669792175293`}, {
                    158.98200225830078`, 244.65868949890137`}, {
                    35.928985595703125`, 315.7036876678467}, {200., 
                    410.42970085144043`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYA0XxdDiQNYJCATwveoAtG/6uTA/HWX
w8B8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYj2c/hUDJF/awKiz129jsL3c9qN
wo/gXBuDzK/YbRWDbF6F4MVoZPtmvJoejeyehpD9yiA6e88JMD+h/JYS2J6k
J2C+gleGEkQ9QyYyf9NcaWR+w1Rn80xk/bDwgZkPCz+Y/QGPF5Yju++B0sZy
ZPfD+DD/wfgw/8P4sPCBmQcLP5T4AgBuZHHc
                    "]}]}, 
                   {FaceForm[{RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{44.92900085449219, 282.59088134765625`}, {
                    181.00001525878906`, 204.0298843383789}, {
                    181.00001525878906`, 46.90887451171875}, {
                    44.92900085449219, 125.46986389160156`}, {
                    44.92900085449219, 282.59088134765625`}}}]}, 
                   {FaceForm[{RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{355.0710144042969, 282.59088134765625`}, {
                    355.0710144042969, 125.46986389160156`}, {219., 
                    46.90887451171875}, {219., 204.0298843383789}, {
                    355.0710144042969, 282.59088134765625`}}}]}, 
                   {FaceForm[{RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{200., 394.0606994628906}, {336.0710144042969, 
                    315.4997024536133}, {200., 236.93968200683594`}, {
                    63.928985595703125`, 315.4997024536133}, {200., 
                    394.0606994628906}}}]}},
                  BoxID -> 
                  "{\"data\":\"{\\\"jsonData\\\":\\\"{\\\\\\\"type\\\\\\\": \
\\\\\\\"Graphics\\\\\\\",\\\\n\\\\\\\"version\\\\\\\": \\\\\\\"1.0\\\\\\\",\\\
\\n\\\\\\\"height\\\\\\\": 11.433641,\\\\n\\\\\\\"width\\\\\\\": 10.000000,\\\
\\n\\\\\\\"offset\\\\\\\": [-66.000000, \
-5.000000],\\\\n\\\\\\\"UserCoords\\\\\\\": [13.467693, 428.589520, \
386.532307, 2.040850],\\\\n\\\\\\\"AxesOrigin\\\\\\\": [50.000000, \
100.000000],\\\\n\\\\\\\"primitives\\\\\\\": [\\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Clip\\\\\\\", \\\\\\\"transform\\\\\\\": [1.000000, 0.000000, \
0.000000, 1.000000, 0.000000, 0.000000], \\\\\\\"path\\\\\\\": [[66,5], \
[66,17], [76,17], [76,5]]},\\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\
\\\\\\\": {\\\\\\\"color\\\\\\\": [245, 129, 50], \\\\\\\"opacity\\\\\\\": 1, \
\\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [245, 129, 50], \\\\\\\"opacity\\\\\\\": 1}, \\\\\\\"fillrule\\\\\\\" \
: \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": [[71.134,15.8755], \
[71.134,10.7972], [72.2335,10.1624], [75.5319,8.25804], [75.5319,13.3363], \
[71.134,15.8755], [71.134,15.8755], [66.4681,8.25804], [69.7665,10.1624], \
[70.866,10.7972], [70.866,15.8755], [66.4681,13.3363], [66.4681,8.25804], \
[66.4681,8.25804], [71,5.48677], [75.3979,8.02591], [72.0995,9.93027], \
[71,10.5651], [69.9005,9.93027], [66.6021,8.02591], [71,5.48677], \
[71,5.48677], [75.733,7.90984], [71.067,5.21594], [71.0411,5.20445], \
[71.0139,5.1987], [70.9861,5.1987], [70.9589,5.20445], [70.933,5.21594], \
[66.267,7.90984], [66.2441,7.92651], [66.2255,7.94725], [66.2116,7.97126], \
[66.203,7.99775], [66.2,8.02591], [66.2,13.4137], [66.203,13.4419], \
[66.2116,13.4684], [66.2255,13.4924], [66.2441,13.5131], [66.267,13.5298], \
[70.933,16.2237], [70.9457,16.2301], [70.9589,16.2352], [70.9724,16.2388], \
[70.9861,16.2409], [71,16.2416], [71.0139,16.2409], [71.0276,16.2388], \
[71.0411,16.2352], [71.0543,16.2301], [71.067,16.2237], [75.733,13.5298], \
[75.7559,13.5131], [75.7745,13.4924], [75.7884,13.4684], [75.797,13.4419], \
[75.8,13.4137], [75.8,8.02591], [75.797,7.99775], [75.7884,7.97126], \
[75.7745,7.94725], [75.7559,7.92651], [75.733,7.90984], [75.733,7.90984], \
[75.733,7.90984], [71,5.48677], [66.4681,8.25804]]}, \\\\n{\\\\\\\"type\\\\\\\
\": \\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \
\\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [141, 172, 207], \
\\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": {}, \
\\\\\\\"capForm\\\\\\\": \\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": \
{\\\\\\\"type\\\\\\\": \\\\\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\
\\\\\"dashing\\\\\\\": [], \\\\\\\"dashingOffset\\\\\\\": 0}, \
\\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\\\\\": [141, 172, 207], \
\\\\\\\"opacity\\\\\\\": 1}, \\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\
\" , \\\\\\\"points\\\\\\\": [[66.8433,8.91349], [70.4907,11.0193], \
[70.4907,15.231], [66.8433,13.1251], [66.8433,8.91349], [66.8433,8.91349]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Polygon\\\\\\\", \
\\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\\\\\\\": \
{\\\\\\\"color\\\\\\\": [169, 205, 145], \\\\\\\"opacity\\\\\\\": 1, \
\\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [169, 205, 145], \\\\\\\"opacity\\\\\\\": 1}, \
\\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": \
[[75.1567,8.91349], [75.1567,13.1251], [71.5093,15.231], [71.5093,11.0193], \
[75.1567,8.91349], [75.1567,8.91349]]}, \\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\
\\\\\\\": {\\\\\\\"color\\\\\\\": [176, 150, 207], \\\\\\\"opacity\\\\\\\": \
1, \\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \\\\\\\"Square\\\\\
\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\\\"Miter\\\\\\\", \
\\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [176, 150, 207], \\\\\\\"opacity\\\\\\\": 1}, \
\\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": \
[[71,5.92555], [74.6474,8.03137], [71,10.1372], [67.3526,8.03137], \
[71,5.92555], [71,5.92555]]}, \\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Group\\\\\\\
\", \\\\\\\"name\\\\\\\": \
\\\\\\\"Frame\\\\\\\",\\\\n\\\\\\\"metadata\\\\\\\": {\\\\\\\"left\\\\\\\": \
13.4677, \\\\\\\"top\\\\\\\": 428.59, \\\\\\\"right\\\\\\\": 386.532, \
\\\\\\\"bottom\\\\\\\": 2.04085},\\\\n\\\\\\\"primitives\\\\\\\":[]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Group\\\\\\\", \\\\\\\"name\\\\\\\": \\\\\
\\\"Axes\\\\\\\",\\\\n\\\\\\\"metadata\\\\\\\": \\\\\\\"TBD\\\\\\\",\\\\n\\\\\
\\\"primitives\\\\\\\":[]}],\\\\n\\\\\\\"PlotRange\\\\\\\": {\\\\\\\"left\\\\\
\\\": -0.000000, \\\\\\\"top\\\\\\\": -9.433641, \\\\\\\"right\\\\\\\": \
10.000000, \\\\\\\"bottom\\\\\\\": \
2.000000}\\\\n}\\\\n\\\",\\\"requestedImageSize\\\":10}\"}",
                  BaselinePosition->Scaled[0.15],
                  ImageSize->10]], 
                ItemBox[
                 StyleBox[
                  RowBox[{"QuantumOperator", " "}],
                  ShowAutoStyles->False,
                  ShowStringCharacters->False,
                  FontSize->0.9 Inherited,
                  FontColor->GrayLevel[0.1]]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->{Left, Baseline},
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}],
            RowBox[{"PacletSymbol", "[", 
              
              RowBox[{"\"Wolfram/QuantumFramework\"", ",", 
                "\"Wolfram`QuantumFramework`QuantumOperator\""}], "]"}],
            
            TooltipStyle->{
             ShowAutoStyles -> True, ShowStringCharacters -> True}],
           Annotation[#, 
            Style[
             Defer[
              PacletSymbol[
              "Wolfram/QuantumFramework", 
               "Wolfram`QuantumFramework`QuantumOperator"]], 
             ShowStringCharacters -> True], "Tooltip"]& ],
          Background->RGBColor[0.968, 0.976, 0.984],
          BaselinePosition->Baseline,
          DefaultBaseStyle->{},
          FrameMargins->{{0, 0}, {1, 1}},
          FrameStyle->RGBColor[0.831, 0.847, 0.85],
          RoundingRadius->4],
         PacletSymbol[
         "Wolfram/QuantumFramework", 
          "Wolfram`QuantumFramework`QuantumOperator"],
         TaggingRules -> {
          "Paclet" -> "Wolfram/QuantumFramework", "Symbol" -> 
           "Wolfram`QuantumFramework`QuantumOperator"},
         BoxID -> "PacletSymbolBox",
         SelectWithContents->True,
         Selectable->False], "[", 
        RowBox[{
         RowBox[{"matrixRepeatExpand", "[", 
          RowBox[{"n", ",", " ", "s1", ",", " ", "s2"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"s1", ",", " ", "s2"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "  ", "_", ",", 
       RowBox[{
        InterpretationBox[
         FrameBox[
          TagBox[
           TooltipBox[
            PaneBox[GridBox[{
               {
                ItemBox[
                 GraphicsBox[
                  {Thickness[0.0025], 
                   {FaceForm[{RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.863691329956055`}, {205., 
                    212.31669425964355`}, {246.01799774169922`, 
                    235.99870109558105`}, {369.0710144042969, 
                    307.0436840057373}, {369.0710144042969, 
                    117.59068870544434`}, {205., 22.863691329956055`}}, {{
                    30.928985595703125`, 307.0436840057373}, {
                    153.98200225830078`, 235.99870109558105`}, {195., 
                    212.31669425964355`}, {195., 22.863691329956055`}, {
                    30.928985595703125`, 117.59068870544434`}, {
                    30.928985595703125`, 307.0436840057373}}, {{200., 
                    410.42970085144043`}, {364.0710144042969, 
                    315.7036876678467}, {241.01799774169922`, 
                    244.65868949890137`}, {200., 220.97669792175293`}, {
                    158.98200225830078`, 244.65868949890137`}, {
                    35.928985595703125`, 315.7036876678467}, {200., 
                    410.42970085144043`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYA0XxdDiQNYJCATwveoAtG/6uTA/HWX
w8B8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYj2c/hUDJF/awKiz129jsL3c9qN
wo/gXBuDzK/YbRWDbF6F4MVoZPtmvJoejeyehpD9yiA6e88JMD+h/JYS2J6k
J2C+gleGEkQ9QyYyf9NcaWR+w1Rn80xk/bDwgZkPCz+Y/QGPF5Yju++B0sZy
ZPfD+DD/wfgw/8P4sPCBmQcLP5T4AgBuZHHc
                    "]}]}, 
                   {FaceForm[{RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{44.92900085449219, 282.59088134765625`}, {
                    181.00001525878906`, 204.0298843383789}, {
                    181.00001525878906`, 46.90887451171875}, {
                    44.92900085449219, 125.46986389160156`}, {
                    44.92900085449219, 282.59088134765625`}}}]}, 
                   {FaceForm[{RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{355.0710144042969, 282.59088134765625`}, {
                    355.0710144042969, 125.46986389160156`}, {219., 
                    46.90887451171875}, {219., 204.0298843383789}, {
                    355.0710144042969, 282.59088134765625`}}}]}, 
                   {FaceForm[{RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{200., 394.0606994628906}, {336.0710144042969, 
                    315.4997024536133}, {200., 236.93968200683594`}, {
                    63.928985595703125`, 315.4997024536133}, {200., 
                    394.0606994628906}}}]}},
                  BoxID -> 
                  "{\"data\":\"{\\\"jsonData\\\":\\\"{\\\\\\\"type\\\\\\\": \
\\\\\\\"Graphics\\\\\\\",\\\\n\\\\\\\"version\\\\\\\": \\\\\\\"1.0\\\\\\\",\\\
\\n\\\\\\\"height\\\\\\\": 11.433641,\\\\n\\\\\\\"width\\\\\\\": 10.000000,\\\
\\n\\\\\\\"offset\\\\\\\": [-66.000000, \
-5.000000],\\\\n\\\\\\\"UserCoords\\\\\\\": [13.467693, 428.589520, \
386.532307, 2.040850],\\\\n\\\\\\\"AxesOrigin\\\\\\\": [50.000000, \
100.000000],\\\\n\\\\\\\"primitives\\\\\\\": [\\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Clip\\\\\\\", \\\\\\\"transform\\\\\\\": [1.000000, 0.000000, \
0.000000, 1.000000, 0.000000, 0.000000], \\\\\\\"path\\\\\\\": [[66,5], \
[66,17], [76,17], [76,5]]},\\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\
\\\\\\\": {\\\\\\\"color\\\\\\\": [245, 129, 50], \\\\\\\"opacity\\\\\\\": 1, \
\\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [245, 129, 50], \\\\\\\"opacity\\\\\\\": 1}, \\\\\\\"fillrule\\\\\\\" \
: \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": [[71.134,15.8755], \
[71.134,10.7972], [72.2335,10.1624], [75.5319,8.25804], [75.5319,13.3363], \
[71.134,15.8755], [71.134,15.8755], [66.4681,8.25804], [69.7665,10.1624], \
[70.866,10.7972], [70.866,15.8755], [66.4681,13.3363], [66.4681,8.25804], \
[66.4681,8.25804], [71,5.48677], [75.3979,8.02591], [72.0995,9.93027], \
[71,10.5651], [69.9005,9.93027], [66.6021,8.02591], [71,5.48677], \
[71,5.48677], [75.733,7.90984], [71.067,5.21594], [71.0411,5.20445], \
[71.0139,5.1987], [70.9861,5.1987], [70.9589,5.20445], [70.933,5.21594], \
[66.267,7.90984], [66.2441,7.92651], [66.2255,7.94725], [66.2116,7.97126], \
[66.203,7.99775], [66.2,8.02591], [66.2,13.4137], [66.203,13.4419], \
[66.2116,13.4684], [66.2255,13.4924], [66.2441,13.5131], [66.267,13.5298], \
[70.933,16.2237], [70.9457,16.2301], [70.9589,16.2352], [70.9724,16.2388], \
[70.9861,16.2409], [71,16.2416], [71.0139,16.2409], [71.0276,16.2388], \
[71.0411,16.2352], [71.0543,16.2301], [71.067,16.2237], [75.733,13.5298], \
[75.7559,13.5131], [75.7745,13.4924], [75.7884,13.4684], [75.797,13.4419], \
[75.8,13.4137], [75.8,8.02591], [75.797,7.99775], [75.7884,7.97126], \
[75.7745,7.94725], [75.7559,7.92651], [75.733,7.90984], [75.733,7.90984], \
[75.733,7.90984], [71,5.48677], [66.4681,8.25804]]}, \\\\n{\\\\\\\"type\\\\\\\
\": \\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \
\\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [141, 172, 207], \
\\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": {}, \
\\\\\\\"capForm\\\\\\\": \\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": \
{\\\\\\\"type\\\\\\\": \\\\\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\
\\\\\"dashing\\\\\\\": [], \\\\\\\"dashingOffset\\\\\\\": 0}, \
\\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\\\\\": [141, 172, 207], \
\\\\\\\"opacity\\\\\\\": 1}, \\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\
\" , \\\\\\\"points\\\\\\\": [[66.8433,8.91349], [70.4907,11.0193], \
[70.4907,15.231], [66.8433,13.1251], [66.8433,8.91349], [66.8433,8.91349]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Polygon\\\\\\\", \
\\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\\\\\\\": \
{\\\\\\\"color\\\\\\\": [169, 205, 145], \\\\\\\"opacity\\\\\\\": 1, \
\\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [169, 205, 145], \\\\\\\"opacity\\\\\\\": 1}, \
\\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": \
[[75.1567,8.91349], [75.1567,13.1251], [71.5093,15.231], [71.5093,11.0193], \
[75.1567,8.91349], [75.1567,8.91349]]}, \\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\
\\\\\\\": {\\\\\\\"color\\\\\\\": [176, 150, 207], \\\\\\\"opacity\\\\\\\": \
1, \\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \\\\\\\"Square\\\\\
\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\\\"Miter\\\\\\\", \
\\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [176, 150, 207], \\\\\\\"opacity\\\\\\\": 1}, \
\\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": \
[[71,5.92555], [74.6474,8.03137], [71,10.1372], [67.3526,8.03137], \
[71,5.92555], [71,5.92555]]}, \\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Group\\\\\\\
\", \\\\\\\"name\\\\\\\": \
\\\\\\\"Frame\\\\\\\",\\\\n\\\\\\\"metadata\\\\\\\": {\\\\\\\"left\\\\\\\": \
13.4677, \\\\\\\"top\\\\\\\": 428.59, \\\\\\\"right\\\\\\\": 386.532, \
\\\\\\\"bottom\\\\\\\": 2.04085},\\\\n\\\\\\\"primitives\\\\\\\":[]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Group\\\\\\\", \\\\\\\"name\\\\\\\": \\\\\
\\\"Axes\\\\\\\",\\\\n\\\\\\\"metadata\\\\\\\": \\\\\\\"TBD\\\\\\\",\\\\n\\\\\
\\\"primitives\\\\\\\":[]}],\\\\n\\\\\\\"PlotRange\\\\\\\": {\\\\\\\"left\\\\\
\\\": -0.000000, \\\\\\\"top\\\\\\\": -9.433641, \\\\\\\"right\\\\\\\": \
10.000000, \\\\\\\"bottom\\\\\\\": \
2.000000}\\\\n}\\\\n\\\",\\\"requestedImageSize\\\":10}\"}",
                  BaselinePosition->Scaled[0.15],
                  ImageSize->10]], 
                ItemBox[
                 StyleBox[
                  RowBox[{"QuantumOperator", " "}],
                  ShowAutoStyles->False,
                  ShowStringCharacters->False,
                  FontSize->0.9 Inherited,
                  FontColor->GrayLevel[0.1]]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->{Left, Baseline},
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}],
            RowBox[{"PacletSymbol", "[", 
              
              RowBox[{"\"Wolfram/QuantumFramework\"", ",", 
                "\"Wolfram`QuantumFramework`QuantumOperator\""}], "]"}],
            
            TooltipStyle->{
             ShowAutoStyles -> True, ShowStringCharacters -> True}],
           Annotation[#, 
            Style[
             Defer[
              PacletSymbol[
              "Wolfram/QuantumFramework", 
               "Wolfram`QuantumFramework`QuantumOperator"]], 
             ShowStringCharacters -> True], "Tooltip"]& ],
          Background->RGBColor[0.968, 0.976, 0.984],
          BaselinePosition->Baseline,
          DefaultBaseStyle->{},
          FrameMargins->{{0, 0}, {1, 1}},
          FrameStyle->RGBColor[0.831, 0.847, 0.85],
          RoundingRadius->4],
         PacletSymbol[
         "Wolfram/QuantumFramework", 
          "Wolfram`QuantumFramework`QuantumOperator"],
         TaggingRules -> {
          "Paclet" -> "Wolfram/QuantumFramework", "Symbol" -> 
           "Wolfram`QuantumFramework`QuantumOperator"},
         BoxID -> "PacletSymbolBox",
         SelectWithContents->True,
         Selectable->False], "[", 
        RowBox[{"M", ",", " ", 
         RowBox[{"{", 
          RowBox[{"s1", ",", " ", "s2"}], "}"}]}], "]"}]}], 
      "\[IndentingNewLine]", "  ", "]"}]}]}], "\[IndentingNewLine]", " ", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"quantumCircuit", "[", "gates_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{"Max", "@@", 
        RowBox[{"Flatten", "@", 
         RowBox[{"gates", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}]}], ",", "quantumGates",
       ",", " ", "firstIndices"}], "}"}], ",", "\[IndentingNewLine]", "  ", 
    RowBox[{
     RowBox[{"quantumGates", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"quantumOperatorFormOfColumn", "[", 
         RowBox[{"#", ",", " ", "gates", ",", " ", "n"}], "]"}], "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "gates", "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", "  ", 
     RowBox[{"firstIndices", "=", 
      RowBox[{"gates", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "1", ",", " ", "1"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "  ", 
     RowBox[{
      InterpretationBox[
       FrameBox[
        TagBox[
         TooltipBox[
          PaneBox[GridBox[{
             {
              GraphicsBox[
               {Thickness[0.0025], 
                {FaceForm[{RGBColor[
                 0.9607843137254902, 0.5058823529411764, 
                  0.19607843137254902`], Opacity[1.]}], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                   3}}}, {{{205., 22.863691329956055`}, {205., 
                   212.31669425964355`}, {246.01799774169922`, 
                   235.99870109558105`}, {369.0710144042969, 
                   307.0436840057373}, {369.0710144042969, 
                   117.59068870544434`}, {205., 22.863691329956055`}}, {{
                   30.928985595703125`, 307.0436840057373}, {
                   153.98200225830078`, 235.99870109558105`}, {195., 
                   212.31669425964355`}, {195., 22.863691329956055`}, {
                   30.928985595703125`, 117.59068870544434`}, {
                   30.928985595703125`, 307.0436840057373}}, {{200., 
                   410.42970085144043`}, {364.0710144042969, 
                   315.7036876678467}, {241.01799774169922`, 
                   244.65868949890137`}, {200., 220.97669792175293`}, {
                   158.98200225830078`, 244.65868949890137`}, {
                   35.928985595703125`, 315.7036876678467}, {200., 
                   410.42970085144043`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYA0XxdDiQNYJCATwveoAtG/6uTA/HWX
w8B8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYj2c/hUDJF/awKiz129jsL3c9qN
wo/gXBuDzK/YbRWDbF6F4MVoZPtmvJoejeyehpD9yiA6e88JMD+h/JYS2J6k
J2C+gleGEkQ9QyYyf9NcaWR+w1Rn80xk/bDwgZkPCz+Y/QGPF5Yju++B0sZy
ZPfD+DD/wfgw/8P4sPCBmQcLP5T4AgBuZHHc
                   "]}]}, 
                {FaceForm[{RGBColor[
                 0.5529411764705883, 0.6745098039215687, 0.8117647058823529], 
                 Opacity[1.]}], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}}, {{{44.92900085449219, 282.59088134765625`}, {
                  181.00001525878906`, 204.0298843383789}, {
                  181.00001525878906`, 46.90887451171875}, {44.92900085449219,
                   125.46986389160156`}, {44.92900085449219, 
                  282.59088134765625`}}}]}, 
                {FaceForm[{RGBColor[
                 0.6627450980392157, 0.803921568627451, 0.5686274509803921], 
                 Opacity[1.]}], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}}, {{{355.0710144042969, 282.59088134765625`}, {
                  355.0710144042969, 125.46986389160156`}, {219., 
                  46.90887451171875}, {219., 204.0298843383789}, {
                  355.0710144042969, 282.59088134765625`}}}]}, 
                {FaceForm[{RGBColor[
                 0.6901960784313725, 0.5882352941176471, 0.8117647058823529], 
                 Opacity[1.]}], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}}, {{{200., 394.0606994628906}, {336.0710144042969, 
                  315.4997024536133}, {200., 236.93968200683594`}, {
                  63.928985595703125`, 315.4997024536133}, {200., 
                  394.0606994628906}}}]}},
               BaselinePosition->Scaled[0.15],
               ImageSize->10], 
              StyleBox[
               RowBox[{"QuantumCircuitOperator", " "}],
               ShowAutoStyles->False,
               ShowStringCharacters->False,
               FontSize->0.9 Inherited,
               FontColor->GrayLevel[0.1]]}
            },
            GridBoxSpacings->{"Columns" -> {{0.25}}}],
           Alignment->{Left, Baseline},
           BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
           BaselinePosition->Baseline,
           FrameMargins->{{3, 0}, {0, 0}}],
          RowBox[{"PacletSymbol", "[", 
            
            RowBox[{"\"Wolfram/QuantumFramework\"", ",", 
              "\"Wolfram`QuantumFramework`QuantumCircuitOperator\""}], "]"}],
          
          TooltipStyle->{
           ShowAutoStyles -> True, ShowStringCharacters -> True}],
         Annotation[#, 
          Style[
           Defer[
            PacletSymbol[
            "Wolfram/QuantumFramework", 
             "Wolfram`QuantumFramework`QuantumCircuitOperator"]], 
           ShowStringCharacters -> True], "Tooltip"]& ],
        Background->RGBColor[0.968, 0.976, 0.984],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 1}},
        FrameStyle->RGBColor[0.831, 0.847, 0.85],
        RoundingRadius->4],
       PacletSymbol[
       "Wolfram/QuantumFramework", 
        "Wolfram`QuantumFramework`QuantumCircuitOperator"],
       BoxID -> "PacletSymbolBox",
       SelectWithContents->True,
       Selectable->False], "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"quantumGates", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "->", 
         RowBox[{"firstIndices", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", 
          RowBox[{"Range", "[", 
           RowBox[{"Length", "[", "gates", "]"}], "]"}]}], "}"}]}], "]"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"circuitPlot", "[", 
   RowBox[{"gates_", ",", " ", 
    RowBox[{"imSize_", ":", "Medium"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"quantumGates", ",", " ", "firstIndices", ",", " ", "qc"}], 
     "}"}], ",", "\[IndentingNewLine]", "  ", 
    RowBox[{"Image", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"quantumCircuit", "[", "gates", "]"}], "[", "\"\<Diagram\>\"", 
       "]"}], ",", " ", 
      RowBox[{"ImageSize", "->", "imSize"}]}], "]"}]}], "\[IndentingNewLine]",
    "]"}]}]}], "Code",
 CellChangeTimes->{{3.929110863350004*^9, 3.92911090337182*^9}, {
   3.9291109393051033`*^9, 3.929111060849068*^9}, {3.929112703288639*^9, 
   3.929112703697937*^9}, {3.9291204597128677`*^9, 3.92912045994396*^9}, {
   3.929128503851259*^9, 3.929128536721419*^9}, 3.9291323206271915`*^9, {
   3.929178297599598*^9, 3.9291783016856003`*^9}, {3.92917838434041*^9, 
   3.929178391491972*^9}, {3.9291784276234493`*^9, 3.929178438147629*^9}},
 CellLabel->
  "In[414]:=",ExpressionUUID->"784ab28d-40d9-c444-a23c-74039927fad6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"circuitPlot", "[", "XorFromNandGatesCircuitNoCopy", "]"}]], "Input",
 CellChangeTimes->{{3.92911076831802*^9, 3.929110781318177*^9}, {
   3.929110940387223*^9, 3.929110944400677*^9}, {3.929110994162964*^9, 
   3.929110994692343*^9}, {3.9291110647630634`*^9, 3.9291110697628*^9}, {
   3.9291118650127177`*^9, 3.929111865685219*^9}, {3.929114861083058*^9, 
   3.9291148681553745`*^9}, {3.929114912900469*^9, 3.9291149390285263`*^9}, {
   3.929115009909912*^9, 3.929115009968197*^9}, {3.929115129699198*^9, 
   3.929115136177505*^9}, {3.929116556385371*^9, 3.9291165680931416`*^9}, {
   3.929116645671898*^9, 3.929116647757652*^9}, {3.9291166928386726`*^9, 
   3.9291166946262283`*^9}, 3.929120446642821*^9, {3.929121065973152*^9, 
   3.9291210668747616`*^9}, {3.929128210623485*^9, 3.9291282134398823`*^9}, {
   3.929128306973604*^9, 3.9291283148828793`*^9}, {3.929128598010176*^9, 
   3.9291286238841324`*^9}, 3.929128696916296*^9, {3.9291323106333737`*^9, 
   3.929132323658209*^9}, {3.9291325604985256`*^9, 3.9291326075109215`*^9}, {
   3.9291326476899858`*^9, 3.929132647878653*^9}, {3.9291783428511906`*^9, 
   3.929178367303772*^9}, {3.9291783976911106`*^9, 3.929178404945854*^9}},
 CellLabel->
  "In[426]:=",ExpressionUUID->"cb66f29b-c5cf-a34d-890c-00d5d3c4e550"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AX0FFIe+skVf+cTzg6gC+gooDn1li77yyer6dvoKZUZfAcWhr2zRVz7x+gyo
AvoKKA59ZYu+8snq9UWTa7HoK5QSfQUUh76yRV/5xL+Pgyqgr4Di0Fe26Cuf
QvtqaGjo/lrOeaj0HFY356joK/QTfQUUh76yRV/5FNJX6bVW0/2+YCcfQ1+h
aPQVUBz6yhZ95VNIX+l5qeZzU/oaDTKeaHrf/ZbnsOgr9Iq+AopDX9mir3zq
U19N+Tj6CjHRV0Bx6Ctb9JVP3Tw/mH2f/H1f7eA1V7dl3jepH0tfoSzoK6A4
9JUt+sqnbq9vrx16vYUnml8DSz+mH+tGX6Fb9BVQHPrKFn3lE6/PgCqgr4Di
0Fe26Cuf6CtUAX0FFIe+skVf+URfoQroK6A49JUt+son+gpVQF8BxaGvbNFX
PtFXqAL6CigOfWWLvvKJvkIV0FdAcegrW/SVT/QVqoC+AopDX9mir3yir1AF
9BVQHPrKFn3lE32FKqCvgOLQV7boK5/oK1QBfQUUh76yRV/5RF+hCugroDj0
lS36yif6ClVAXwHFoa9s0Vc+0VeoAvoKKA59ZYu+8om+QhXQV0Bxqt5Xsv+7
Zf/3W90efdXa2NjYsTLXd8nXPKndx8rHLZbjwOoCNiv7NemrFur1+tHyNf9Y
vubp7T5WPm6ejLFdu3a9tohtQzj6CihOlftK9v0e3XdtLKvbpK9y5+VdMh6X
sXu6xtK2ko95SsaXZbyuqO2jr1obHR19i3y9h5OR21hJWx1YXxm/VdT2IQx9
BRSnqn0l+33gWJX01War26Wvpp2bedM1Vrat9HxXkdtGX+XTrpqusdqtK8qD
vgKKU8W+kmPAyvS8VdIZK61um75qOz8tj8Ux2yr5+vTVNPIai7byhb4CilO1
vpJjwDlJW92TPj9oefv0VUdzdNgxOXZbKfqqvebGoq38oa+A4lStr7LXW8mf
9+rI+1h5LDp+fHz8zSEjOd64OE7n9dXIyMiJefv3qU996vdD56TVkDW4XMY/
yHb83zpkrv9a/v5HFrd92223BW+jbMNXvKybzNVNoftXr9d7nlcd8rUXynhS
10zW6/+RPz8if35vrHVjhA1Zq49MTExcFns7GIwqjPS4Ens7dGjP9CmrDmju
Kf29wemubZfHodPkYxYEjme8HKfz+kp/xs3bP/nZ94Iu5iRv/IWMX8r4H7IO
11rd7rZt284L/RyZiz1e1k3WYHvo/smanm+4bp+W23tZxi/kz8Mx140RfD9Y
I2/Xx94OBqMKIz2uxN4OHdozfciqA5pfhyHzPGHute3yM/8x+nxVyJDb/E7D
yXE6r6927NjxG6H7HTrkay9rHOzd7zcOnr/6G3nfH1rctqzbcaGfI3eD+7ys
m2zr1aH7d8cdd1it2wfk6/+9rNcPGgfPPT4m492x1o0RNpLOfn/s7WAwqjDS
40rs7dChPdOHtHq1paYZvP5VgZpeg+ESGdpajzciXsfD9VftNTLXWyWvUXZZ
J6/dgPLg+iugOFW7/irVj2vbFX01veZr2dPzlo3I10rTV9NrXh89Ruuxut1r
N6Bc6CugOFXtq0aba9t7uF36Kker3xPMPi8cs7Hoq3yt1iXtK/0zjeUHfQUU
p8J9deA1Gvpwu/RVC/K4fl5zWyXzddh1d43DXwec12+P3FfJ6zBMad5sX6Uf
lzbW+Pj4iUVtH8LQV0BxqtpX/UJftab/jp08ttezbZXM15Tfa9DG0nNdRW2b
oq9a039LUOZmXfP5xOa+UtpYeu19UduGcPQVUBz6yhZ9FTxfff290U7RV2Fa
9RXKj74CikNf2aKvgueLvqKvUBD6CigOfWWLvgqeL/qKvkJB6CugOPSVLfoq
eL7oK/oKBaGvgOLQV7boq+D5oq/oKxSEvgKKQ1/Zoq+C54u+oq9QEPoKKA59
ZYu+Cp4v+oq+QkHoK6A49JUt+ip4vugr+goFoa+A4tBXtuir4PkqRV/Jdtyh
czJnzpwLYq9PB+u2JPZ80Vc+0VdAcegrW/RV8HyVpa8+oXNy0UUXXR97ffLG
ypUr/zQ5fxX93/ijr3yir4Di0Fe26Kvg+SpLX52pc7J69erPx16fvDE8PPy0
bOPL9Xp9Ruz5oq98oq+A4tBXtuir4PkqRV9ps8i2PCbfD7+aP3/+0thr1DyW
L1++Q9dMxtbYc6XoK5/oK6A49JUt+ip4vkrRV2p0dPRkPT8k8/LSihUrds6e
Pfu82Gt1yimnLLzhhhu+mrTV96UDj4o9T4q+8om+AopDX9mir4LnqzR9pXRO
ZJue1fnRc1kbN278oT4vF2OMjIz8OOkq3ZYHZJwQe35S9JVP9BVQHPrKFn0V
PF+l6itVr9ePke+LNbJtX5C3/znprcKHfO0nZXxGxqLYc9KMvvKJvgKKQ1/Z
oq+C56t0fYX26Cuf6CugOPSVLfoqeL7oK4foK5/oK6A49JUt+ip4vugrh+gr
n+groDj0lS36Kni+6CuH6Cuf6CugOPSVLfoqeL7oK4foK5/oK6A49JUt+ip4
vugrh+grn+groDj0lS36Kni+6CuH6Cuf6CugOPSVLfoqeL7oK4foK5/oK6A4
9JUt+ip4vugrh+grn+groDj0lS36Kni+6CuH6Cuf6CugOPSVLfoqeL7oK4fo
K5/oK6A49JUt+ip4vugrh+grn+groDj0lS36Kni+StdX27dvf718X4zIeEjG
CzpXMYZ87Z/K+Jr8+RP1en1G7HnJKmNfyRwdJfN1k4wHZPws4rr9LNmGm3Sb
Ys9LVhn7Su/beh/X+7re5yOu2wvJ9/yIPgbEnhf4R1/Zoq+C56tUfSXHn/Pl
e+I5nZ/R0dEXbrnllsfXrl37YIwxPDz8vbGxsReTx//H5M9zY89Pqmx9JfNz
pozvp+smc/d0xHV7WrchWTfdpjNjz0+qbH2l92m9b+tc6X1dWuuZWOum3+uy
bj9PWus5fSyIPT/wjb6yRV8Fz1dp+koeT0+X7XlFHmP/25IlS+qx10nHrFmz
5q1YsWKnfJ/+UsaP5PhzTOx5UmXqK5mXE/Tcgx6f9b4de82y32e6Tcl5kRNi
z5MqU1/pfVnv03rf1vu43tdjr5mORYsWrdPHAH0s0MeE2PMEv+grW/RV8HyV
oq/0eRw916CP9WefffZlsdeoeWjvJT9Xfzb2XKky9VX6Pbdw4cLrYq9T89Bt
Ss5jfTv2PKky9VV67CnLzzLZoY8B+ligjwlle44XftBXtuir4PkqRV/J98E7
dU5WrVp1d+z1yRv6/IX+TF2Gx/uy9FXy/NKkPr8Te33yxvr167+ZPP8V/fnd
svRV8vPMK3qfjr0+eUMeCz6X/EzzztjzBZ/oK1v0VfB8laWvrk7OgVwTe33y
hj6HkpwLiX49T1n6StbtIp2Tyy+/fDT2+uQN3bbkOH1R7PkqS18l18tN6n06
9vrkDX0sSNbt6tjzBZ/oK1v0VfB8laWvDrTL7Nmzz4u9Pu3WTY6RV8Ser7L0
lczHsM5JGZ/TzRyn0+cIh2PPV1n6Su/DOicXX3zxjbHXJ2+cddZZi8qybvCJ
vrJFXwXPV1n66rNe1o2+OiTtKz0Wxl6fvEFftdyOK8p6zVw66Cv0ir6yRV8F
zxd9Fbhu9NUh9FUY+qrzQV+hV/SVLfoqeL7oq8B1o68Ooa/C0FedD/oKvaKv
bNFXwfNFXwWuG311CH0Vhr7qfNBX6BV9ZYu+Cp4v+ipw3eirQ+irMPRV54O+
Qq/oK1v0VfB80VeB60ZfHUJfhaGvOh/0FXpFX9mir4Lni74KXDf66hD6Kgx9
1fmgr9Ar+soWfRU8X/RV4LrRV4fQV2Hoq84HfYVeVa2vZF/3Jt8zhw1pjZVG
t09ftVCv14+Wr9mQr3lS03xN6St53zwZq4raNkVftZa3bq36Ksa60Vet7dq1
67WyPvXmf5+4VV/px+jH6ucUtX30Faqggn2l/97B5j7ePn3Vgkz5H8nXfFzG
7uyxurmvkmO0ftyXZbyuwO2jr1oYHR19i3y9h5vXrbmvMuu2e2xs7Niito++
yp2X39K10LXLNlZzXyVt9XAyfq+o7aOvUAVV6ivtqqQr+nZ+nL6adm7mNTdW
tq+ybVXkMVrRV/nSY3B23bJ91Wpdi0Jf5dO1aG6sbF81tdXp09+aLfoKVVCx
vtrd/PygvO8ey69BX7Wdn8OOxWlfxWwrRV9Nr7mx0r6K2VaKvppec2OlfRWz
rRR9hSqoUl+lTZX+PT2fZdlY9FVHc/TqMVnGx2Qsi9lWir5qL9tYMl+L5c/X
xGwrRV+119RYl+n3W8y2UvQVqqAqfaXXrzdaXMeenM/a3+pzJiYm3jAyMnJi
yJDbetTLcTqvr3bs2DE7b//Gx8eD5iNvyP1ukYynZTuelbf/KI+3fzk6Onqq
xW3v3LlzThfbs8vLusm2ri5iTloN6d/zZa20qf5RtuNZeft38r63R1y3bV76
Src1dP/ke/EEo3XTc41/p+um33O6hrqWFrfdzTbqfdhLX3WzbgyGjvS4Ens7
dGjP9CGtDsi75ip5zjCvr/R5qwWB4xkvx+m8vkqe92m5f1u3br2giznJG/9R
5v9/ytd7Qd5ea3W727ZtOy/0c2Qu9nhZN1mD7aH7J3N8vuG6fVrGyzJelHW7
Mea6yde/r+Gnr+7rYv/mG66bnuv7hYyXGgeZ3G4325jch730VfC6MRg60uNK
7O3QEeN1kKbrq3q9fow+XxUy5La+03BynJ7m/NVvhO536JCv/QGZ+7+X7XhU
3v6DHP//Rt73hxa3Let2XOjnpMfp2GvTybrJtl4dun933HGH6brJej0h2/Ld
2OvWOMhFX+mG9vv7app5ereMx3TNZDyR/PndsbZH78MNJ30Vc90Yvkd6XIm9
HTq0Z/rRUHruqpHzugzaVtpYVl+rwfVXnczRYdeyNyJfI624/qq95nVq9XuF
EbaJ66/aaL6WvdXvFUbYJq6/wsCryvVXjRbXsWder8HktUWTr0NfTT8/LX9P
MHZj0VfTy1uf2I1FX00v7/cEYzcWfYUqqEpfaVs1Mq99lV7vbnnuStFX087N
tK/BELOx6Kt87dYlZmPRV/navQZDzMair1AFVekrlTZWOvrxOu70VWuZ12+f
9jUYGoe/dgOv395i3YrsKz3udtK82caabn2t0Vet6e/5dvIaDE2Nxeu3ZwZ9
hV5Vqa+KQF+1pv+Onf4bZ50ce7Wx9PWVitiuFH3Vmv6bdDI36zo5L6XHcb1u
uYDNehV9lU/XopPzUrq2usb8+4OHD/oKvaKvbNFXPtFXPtFXPtFXqAL6yhZ9
5RN95RN95RN9hSqgr2zRVz7RVz7RVz7RV6gC+soWfeUTfeUTfeUTfYUqoK9s
0Vc+0Vc+0Vc+0VeoAvrKFn3lE33lE33lE32FKqCvbNFXPtFXPtFXPtFXqAL6
yhZ95RN95RN95ZNlX8nNTbYbQ0NDT4TeLn2FXtFXtugrn+grn+grnyz6qtZB
V9XoK0REX9mir3yir3yir3zqta+0l2oHu+m2fq0bfYVe0Ve26Cuf6Cuf6Cuf
eumrmTNnXlLrc1vpoK/QK/rKFn3lk1VfzZgx45paZ89X3NntutFXh1j1VXrM
bjdk3e4PvW36aqpe+ir9HtM16+fjJH2FXtFXtugrn3rtq067qkZfmeq1rzrt
qhp9ZYq+QhXQV7boK5967atacvzt52M+fTVVr30lN7FPxqQes/u1bvTVVDw/
iCqgr2zRVz710lf6OF8r4Odp+mqqXvoqPQ/Sz7bSQV9NZXV9ez/Xjr5Cr+gr
W/SVTz321Z1yE/uKWjf66pBe+irt4n6vG301Fa/PgCqgr2zRVz7RVz7RVz5Z
vb5owO+T0FcoHH1li77yiecHfeL5QZ/493FQBfSVLfrKJ6vr24tYN/rqEKvr
2/vZxvTVVNZ9VevD9e70FXpFX9mir3zi9Rl84vUZfLLuK/1+6uY5QPoK/URf
2aKvfLJ6fdHkWiz6qiBWry+aPsfbbtBXNqz7Ku1ky/OQ9BV6RV/Zoq986rav
5FP39fu6q+Z1o68Oseqrfg76aqqQvgo5N2x5Dou+Qq/oK1v0lU+99FWty/Ma
3a4bfXVIaF81H6vTdUtfT6nWh+t46KupuL4dVUBf2aKvfOqlr5Jjdt9fB5y+
miq0r2pN/VTLtJaeh9TeqhmvI301FX2FKqCvbNFXPvXaV/rnzLmRvrwWFn01
VUhfaVc1P3+UrlnTx91peT6SvpqKvkIV0Fe26CufLPoqc3w+cA6km2vYO1k3
+uqQLvrqsG5Krove1+7jehn01VT0FaqAvrJFX/kU0led/o5gzbix6KupQvoq
51xV2sLZ5wz3WV6DRV9NRV+hCugrW/SVT/SVT6HXX6U9VWu67qrpfabP79JX
U3XTV7XkGse8weuLomzoK1v0lU+Wzw/2e93oq0O6eX2GtKesn7/NG/TVVKF9
VUvaKu//pz/zWDYWfYVe0Ve26CufrF5ftIh1o68O4fWvfOri9a/anlNs9fsL
vQz6Cr2ir2zRVz7RVz7RVz6F9lUn3dTpx3U66Cv0ir6yRV/5RF/5RF/51MXz
g21fk0zbyvI5X/oKvaKvbNFXPtFXPtFXPoX2VYf/PqTp7yXQV+gVfWWLvvKJ
vvKJvvKpl9dnqDX9HqH17w2mg75Cr+grW/SVT/SVT/SVT7z+FaqAvrJFX/lE
X/lEX/lEX6EK6Ctb9JVP9JVP9JVP9BWqgL6yRV/5RF/5RF/5RF+hCugrW/SV
T/SVT/SVT/QVqoC+skVf+URf+URf+URfoQroK1v0lU/0lU/0lU/0FaqAvrJF
X/lEX/lEX/lEX6EKqthXss/3JN83k0lnrLS6bfrKJ/rKJ/rKJ/oqn3y9VTLm
tfs4efw+ST6uUa/Xjy5iuxCuan0l+7s7aYtzkr/fY7n/9JVP9JVP9JVP9FVr
Y2Njx8rX02PU49M1VtJWBz5OHrv+qKjtQ5gq9ZXs6+ZsW6X0ffr/LL4GfeUT
feUTfeUTfZUv206tGqvd/0d5VKmvZD/36/mrPn8N+soh+son+son+mp6eQ1F
W/lSlb7Sa6zS81TZa6/0+UHLr0Nf+URf+URf+URftdfcUrSVP1Xpq+w17Zn3
bZ7uucGJiYk3jIyMnBgy5PYe9XKcLkNf1ev1GaFz3I8hd4FdXtZNtnV17Pkq
y5C52Oalr3RbY89XWYbeh730VTfrtnPnzjkW8zQ2NvZ22Ya/k234nrz9B3n7
tIxFFrdttY2M/JEeV2Jvhw7tmX4dx2Uf9+Zce6Xv39vqc2R7TpP/tyBwPOPl
OF2Svjq6izk2HzIXe7ys29atW7fHnq+yDHn8us9RX90Xe77KMpL7sJe+Cl63
bdu2nWd4H79R3r4ob/+nvP2PVre7ZcuW82PfDwZ9pMeV2NuhQ3umX8fxRk5H
Jb9PuL/V53D+qv84fxW+bpy/OmzdOH/lcHD+qrOROX/1rLx9lvNXvkbFzl9N
6au89/fwdbj+yiGuv/KpwfVXLnH9VXvZ661kvq6Rtx9rcP2VKxW6/mrKears
Ne9WX4e+8om+8om+8om+ml7ztewyX29Pnm/iGndHqtJXet1Vo+n3BZPvHbNz
V8lt0lcO0Vc+0Vc+0Vf5WjVU2ld5/x/lVJW+UmljpaMfr4VFX/lEX/lEX/lE
X7WW9/rt2b5SvH67D1XqqyLQVz7RVz7RVz7RV/kaLf79wea+Uvz7g+VHX9mi
r3yir3yir3yir4Lna0pfofzoK1v0lU/0lU/0lU/0VfB80VcO0Ve26Cuf6Cuf
6Cuf6Kvg+aKvHKKvbNFXPtFXPtFXPtFXwfNFXzlEX9mir3yir3yir3yir4Ln
i75yiL6yRV/5RF/5RF/5RF8Fzxd95RB9ZYu+8om+8om+8om+Cp4v+soh+soW
feUTfeUTfeUTfRU8X/SVQ/SVLfrKJ/k+2KlzMnv27PNir0+7daOvDkn76uyz
z74s9vrkDfpqqrSvLr744htjr0/eoK/QK/rKFn3lk3wfXJ38PH1N7PXJGytW
rNiZPN6fGXu+ykLW7SKdk8svv3w09vrkDd22xsF/j+ui2PNVFnof1jnR+3Ts
9ckb+liQrNvVseeLvvKJvrJFX/kk3wdv0zlZtWrV3bHXJ2/ccsstj8s2vlyv
12fEnq+ykHU7Qddt7dq1D8Zen7yxfv36byXH6RNiz1dZ6H1Y78t6n469Pnlj
9erVn0/W7W2x54u+8om+smXVV0NDQ7fJzU22G/pxobdNX02lj/fyvfC0jF+W
8bmmpUuXbk3OXd0Re67KRtbsgbJey7No0aJ1yTH6gdjzVDZ6X9a50cej2OvU
PObPn79U1uxX+phQhp9n6Cuf6CtbvfZVp11Vo6/MyWPY6TIvr4yOjr6wZMmS
euzHeB2zZs2ad+211/558lj/I3msPyb2PJWNnheS8YLcn19atmzZtthrlg7d
Ft0m3TbOXU2l92W9T+t9W+/jel+PvWY6Fi9evEEfA/SxQB8TYs+Toq98oq9s
9dJXM2fOvKSWdFM/Hz/oq3zyOHa+fE88p/Ojj7HDw8NPRxzfGxsbezE5b/WY
/Hlu7Pkpq+R6nu+n6ybH7mdirZt+7eT4PJlsE9fL5dD7tN63da70vq73+Zjf
c7JuP0/ONz6njwWx5ydFX/lEX9nqpa+GhoburPW5reir9rZv3/56+b4YkfGQ
jOeT42ThQ772T2V8Tf78iTI8R1F2MkdHyXzdpM/F6dxFXjfdhpt0m2LPS9kl
12J9Qu/rkdft+eR7fkQfA2LPSxZ95RN9ZavHvrpfxhP0FQAgRV/5RF/Zoq8A
AJboK5/oK1s8PwgAsERf+URf2eqlrzLXt++jrwAAir7yib6y1UtfJeeweH0G
AMCr6Cuf6CtbvfZVprPur9FXAFB59JVP9JUtq77i+UEAgKKvfKKvbFn2Vfpc
IX0FANVFX/lEX9myPn8lN7mvm+cA6SsAGAz0lU/0lS3rvtLXbLB+TSz6CgD8
oK98oq9shfRVp9ew17q8jp2+AgD/6Cuf6CtbXN8OALBEX/lEX9mqSl/V6/Vj
5L6zRm7nS3I7/0X+/KNI40kZO2UsMlxGACgN+son+spWFfpKP08+/9nk35z/
5fDw8A9kPB1jjIyMPKfbkWzLA/I4dLzxkgJAVPSVT/SVrUHvq9HR0ZPlc18e
Gxv7/5YtW7Zt9uzZ58Xen1NOOWXh2rVrv5F01mP1en1GH5YWAKKgr3yir2wN
cl9pt2i/6Dmrc88996Ox96N5rFixYmdyHmtNn5YXAApHX/lEX9ka5L6S+8o7
9fNWrVp1d+x9aDVmzZo1T5+rlO38aZ+WFwAKR1/5RF/ZGvC+uk4/b8GCBSti
70PeuP7667+YnMM6oU9LDACFoq98oq9sDXhffUY/b86cORfE3oe8sXTp0q28
9gSAQUJf+URf2RrwvvrsoO4bAJQVfeUTfWWLvvK5bwBQVvSVT/SVLfrK574B
QFnRVz7RV7boK5/7BgBlRV/5RF/Zoq987hsAlBV95RN9ZYu+8rlvAFBW9JVP
9JUt+srnvgFAWdFXPtFXtugrn/sGAGVFX/lUlb6S/bwn+fd/Ww45Hq+0+Dr0
lc99A4Cyoq98qkpftSLH4HOSf0vlHqvbpK987hsAlBV95VOV+yppq93Gt0lf
Odw3ACgr+sqnqvaVdpXs937r26WvfO4bAJQVfeVTFftKr7WyvOYqi77yuW8A
UFb0lU9V7Cs9b9XJ84L1ev2YsbGxY0OG3PZ3vDfIjh07fqPVvsmc3edl32R7
3xe6dgwGg1HGIX11vjyuXRJ7OxhhIz1mxt4OHdoz5jHVRPY3bYtz2n3sxMTE
afozQ+B4xkuD5PVV+rNS85CP3+Nl32SZ13WxdgwGg1G6IY/Ja2RsjL0djLCR
HjNjb4cO7RnzoGoiX2e/jL2dfKxszxtGRkZODBly2482nDTINOevZrfaN2mW
XV72bXR09OLQtWMwGIwyDnlMe7/01RWxt4MRNtJjZuzt0KE9YxpTTfp53VWq
wfVXLvcNAMqK6698qtL1V/36ncEs+srnvgFAWdFXPlWprxodXtfe49egrxzu
GwCUFX3lU1X6KvNa7Zv7+XXoK5/7BgBlRV/5VJW+Kgp95XPfAKCs6Cuf6Ctb
9JXPfQOAsqKvfKKvbNFXPvcNAMqKvvKJvrJFX/ncNwAoK/rKJ/rKFn3lc98A
oKzoK5/oK1v0lc99A4Cyoq98oq9s0Vc+9w0Ayoq+8om+skVf+dw3ACgr+son
+soWfeVz3wCgrOgrn+grW/SVz30DgLKir3yir2zRVz73DQDKir7yib6yRV/5
3DcAKCv6yif6yhZ91X7MmDHjGrm5yXZjaGjoTvoKQNXRVz7RV7boq967qkZf
AcCr6Cuf6Ctb9FX+qCXdNHPmzEvKtm8AUFb0lU/0lS36qvUYGhq6rdbntqKv
AAwi+son+soWfZXbV3fKTewr674BQFnRVz7RV7boK/oKACzRVz7RV7boq9y+
4vlBAOgCfeUTfWWLvsofteT69jLuGwCUFX3lE31li77KH7w+AwCEo698oq9s
0VftR3ItFn0FAB2gr3yir2zRVz73DQDKir7yib6yRV8dPuTT9nVzHoq+AoCD
6Cuf6Ctb9NVhbXXY9ez6u4M1o+cB6SsAVUFf+URf2aKvDg59PQYZT7R4//06
Mn9/gr4CgHz0lU/0lS366tVuurNVNyXvfyLzd/oKAKZBX/lEX9mir17tppbn
r2oHr8fi/BUAdIi+8om+skVfHd5StRbXW+nrYNFXANAZ+son+soWfXX40HNV
tUNtNeXfH6SvAGB69JVP9JUt+srnvgFAWdFXPtFXtugrn/sGAGVFX/lEX9mi
r3zuGwCUFX3lE31li77yuW8AUFb0lU/0lS36yue+AUBZ0Vc+0Ve26Cuf+wYA
ZUVf+URf2aKvfO4bAJQVfeUTfWWLvvK5bwBQVvSVT/SVLfrK574BQFnRVz7R
V7boK5/7BgBlRV/5RF/Zoq987hsAlBV95RN9ZYu+8rlvAFBW9JVP9JUt+srn
vgFAWdFXPlWtr+S4e47ub3ZY3j595XPfgEEj3wfL5PvgpHYfpx+jH1vAJqFL
9JVPVeqrtK1kn+9J3yd/3p0cj8+x+Br0lc99AwbJ+Pj4m+X74HEZu6drrKSt
9DHwcf2cAjcRAegrn6rUV0lL7c++L9Ncmy2+Bn3lc9+AQSPfB/Oma6xsW+nH
RthEdIi+8qlKfSX7uVdH9n30VefoK8CXvMairXyhr3yqUl9pQyXH3pXp+/R8
VvM5rV7QVz73DRhUzY1FW/lDX/lUpb5SyTmsV69tz16L1axerx8zNjZ2bMiQ
2/yO9wbZsWPHb7TaN5mr+7zsm2zv+0LXjsEY1CHf6x+Q79+/l++NR3Xon/V9
sbeL0dmQvjpf1u2S2NvBCBvpMTP2dujQnulXV2V+b3Bv5n0rp3tucGJi4jT9
mSFwPOOlQfL6Kv1ZqXnIx+/xsm+ypOu6WDsGo1RD7sfzDW9vq4xfyHhJbne8
pNvIaDHkMXmNjI2xt4MRNtJjZuzt0KE906e8Ss9bTXkesNHimqyUbM8bRkZG
TgwZjYM/H7pokGnOX81utW/yOLrLy76Njo5eHLp2DEbZhnwvnmBxO/Lzq/7M
9HfyPfycjH36Z31fmbaRkT9kvd4vfXVF7O1ghI30mBl7O3RozxhnVbaj9uvv
D7Z4f25fdfl1uP7K4b4Bgyp7vZUco6/RcyGNDl67AeXB9Vc+VeX6q1Z91er1
sAy+Dn3lcN+AQdR8Lbsep7du3aqPe9O+dgPKhb7yqSp9pQ3V6PPvDia3SV85
3Ddg0LT6PcG0r/TPNJYf9JVPVekrlb4+Q2aYPS+Yoq987hswSMbHx09sbiuV
7SuVbSz9nDhbi3boK5+q1FdFoK987hswSOr1+tHy/XpXo+n1rZr7SunH6Mfq
5xS7legUfeUTfWWLvvK5b0AVtOorlB995RN9ZYu+8rlvQBXQVz7RVz7RV7bo
K5/7BlQBfeUTfeUTfWWLvvK5b0AV0Fc+0Vc+0Ve26Cuf+wZUAX3lE33lE31l
i77yuW9AFdBXPtFXPtFXtugrn/sGVAF95RN95RN9ZYu+8rlvQBXQVz7RVz7R
V7aq0FezZ88+L/Y+0FdAOPrKJ/rKJ/rK1oD31Rr9vPnz5y+NvQ95Y9WqVXfr
Nsox5K19WmLALfrKJ/rKJ/rK1iD3lXyPn6uft2zZsm2x9yFv3HrrrU/JNr7Y
p+UFXKOvfKKvfKKvbA1yX9Xr9aPk/vKjsbGx50855ZSFsfejeSxZsqSe/Lvd
d/RpeQHX6Cuf6Cuf6Ctbg9xXSj9HP3dkZOTHCxYsWBF7X9KxfPnyHbJtL2n/
SQce04elBdyjr3yir3yir2wNel8l+7hUn4OT+86vNm7c+MP169d/c+3atQ/G
GDfffPPf3n777f9d90e25wfyOHS68ZICA4O+8om+8om+slWFvlKjo6Mny218
ScY/Jc/JxRqvyH34aXm7ifNWwPToK5/oK5/oK1tV6aus8fHx4+S2Toox9Jow
i30AqoC+8om+8om+slXFvgLgA33lE33lE31li74CUFb0lU/0lU/0lS36CkBZ
0Vc+0Vc+0Ve26CsAZUVf+URf+URf2aKvAJQVfeUTfeUTfWWLvgJQVvSVT/SV
T/SVLfoKQFnRVz7RVz7RV7boKwBlRV/5RF/5RF/Zoq8AlBV95RN95RN9ZYu+
AlBW9JVP9JVP9JUt+gpAWdFXPtFXPtFXtugr/+r1+gz5vlgkc7RdxiMyno0x
ZBsekDEi422x5wSDgb7yib7yib6yRV/5Njo6erLMzWM6PzrGxsZevP32238S
Y8j35i/S7ZBxh3TfMbHnB77RVz7RVz7RV7boK7/ke+EEGc/L+NUNN9zw1Xe8
4x2XxlynWbNmzbvwwguXb9iw4dGksR7Tc2ux5wl+0Vc+0Vc+0Ve26Cu/9Pk4
nZeLL774xthr1DxWr179ed022cY1secJftFXPtFXPtFXtugrn+Tx63Sdkxtv
vPHrsden1dBzWcPDwz+QbXwx9lzBL/rKJ/rKJ/rKFn3lkzx+XaFzsmjRonWx
1ydvrFq16m7dRjk+vjX2fMEn+son+son+soWfeVT8ruCk3Pnzl0Qe33arZv+
bmPs+YJP9JVP9JVP9JUt+sqn9Psg9tp0sm56ri32fMEn+son+son+soWfeUT
fYUqoK98oq98oq9s0Vc+0VeoAvrKJ/rKJ/rKFn3lE32FKqCvfKKvfKKvbNFX
PtFXqAL6yif6yif6yhZ95RN9hSqgr3yir3yir2zRVz7RV6gC+son+son+soW
feUTfYUqoK98oq98qlpfSVOck/xbuZPJazXeY3n79JVP9BWqgL7yib7yqUp9
JT2xMmmqzcnfz7FuLPrKJ/oKVUBf+URf+VSlvpL93C/7uzv7Pm0rfb/h16Cv
HKKvUAX0lU/0lU9V6av03JW+zb5fz2Ul7zd5zKGvfKKvUAX0lU/0lU9V6au8
jkrOX9FXFUdfoQroK5/oK5+q0ld556/0ucG8/a/X60fIODpkyHw+7OU4XYa+
mpycHAqd434MWbd7vaybjGWx54vhc8h9573SVxfE3g5G+LpJY30o9nYwwkZ6
XIm9Hck4op/H8qSl9mf+vjc5XrW8/mpiYuI0/ZkhcDzj5Thdhr7Sde9ijs2H
zMUeL+smx8ftseeL4XPIMXqNvF0fezsY4esmY2Ps7WCEjfS4Ens7dGjP9Pt4
3mh6bYbk7e5WHyv35+PHx8ffHDLk9h5vODlOl6Gv7rrrrpmhc9yPIfPxFS/r
JvfLm2LPF8PnkPvPR+Rx9rLY28EIXzf5vl8eezsYwet24LgSezt0aM8UeWzP
XJO1sv1Hd6bB9Vcucf0VqoDrr3zi+iufqnL9VePgazPc0/w+GXuNvw595RB9
hSqgr3yir3yqSl/pc4DZ/Wwk115Z/d5g5nbpK4foK1QBfeUTfeVTVfpKNQ5d
z557TbvB16CvHKKvUAX0lU/0lU9V6qsi0Fc+0VeoAvrKJ/rKJ/rKFn3lE32F
KqCvfKKvfKKvbNFXPtFXqAL6yif6yif6yhZ95RN9hSqgr3yir3yir2zRVz7R
V6gC+son+son+soWfeUTfYUqoK98oq98oq9s0Vc+0VeoAvrKJ/rKJ/rKFn3l
E32FKqCvfKKvfKKvbNFXPtFXqAL6yif6yif6yhZ95RN9hSqgr3yir3yir2zR
Vz7RV6gC+son+son+soWfeUTfYUqoK98oq98oq9s0Vc+0VeoAvrKJ/rKJ/rK
Fn3lk1VfzZgx4xq5ucl2Y2ho6E76CkWjr3yir3yir2zRVz712leddlWNvkJE
9JVP9JVP9JUt+sqnXvuqlnTTzJkzL+n3utFX6BZ95RN95RN9ZYu+8qmXvhoa
Grqt1ue2oq9ggb7yib7yib6yRV/51GNf3Sk3sa+odaOv0C36yif6yif6yhZ9
5RN9hSqgr3yir3yir2zRVz7x/CCqgL7yib7yib6yRV/5ZHV9O32FMqOvfKKv
fKKvbNFXPvH6DKgC+son+son+soWfeWT1euLJtdi0VcoJfrKJ/rKJ/rKFn3l
E/8+DqqAvvKJvvKJvrJFX/nUTV8NDQ3dX2t9bup++gplRF/5RF/5RF/Zoq98
Cu0r+ZR9Mib1uquktQ48L5j+LmH2/9FXKAv6yif6yif6yhZ95VNIX2lDyXii
xfvvT89dpee26CuUCX3lE33lE31li77yKbCv7mx1fXpzd9WS81n0FcqCvvKJ
vvKJvrJFX/kUev6q1uL12rWtstdeJX8P/j1B+gr9Ql/5RF/5RF/Zoq98Cr3+
Stup1uLa9n6+hjt9hV7RVz7RVz7RV7boK5+6+f3B7GuK9ut3BukrWKKvfKKv
fKKvbNFXPvH6V6gC+son+son+soWfeUTfYUqoK98oq98oq9s0Vc+0VeoAvrK
J/rKJ/rKFn3lE32FKqCvfKKvfKKvbNFXPtFXqAL6yif6yif6yhZ95RN9hSqg
r3yir3yir2zRVz7RV6gC+son+son+soWfeUTfYUqoK98oq98oq9s0Vc+0Veo
AvrKJ/rKJ/rKFn3lE32FKqCvfKKvfKKvbNFXPtFXqAL6yif6yif6yhZ95RN9
hSqgr3yir3wa1L6S/dot455W/0/2d6/uczL2W35d+iqfPK5fXK/Xj273cbJd
J8nHvqeATXoVfZWvzOuGMPSVT/SVT4PYV9pMST+szPl/e9O/a4dZNhZ91Zoe
d+VrPiXjz6Y7VusxWj5G1+TRsbGxY4vaPvqqtbKvG8LQVz7RVz4NUl8lrTSZ
6atzWvz/w1pKPyavxbpBX+WTx4jV0x2rM8fox2XMK3Lb6Kt8ZV43hKGvfKKv
fBqUvtJu0n5K/rw3r6OanzPMvH+z0XbQV9PIO1bHPkbTV9Mr67ohDH3lE33l
06D0VVa2tVLaVa3OadFXxWs+VpfhGE1ftVfGdUMY+son+sqnQeurvPNUrc5p
JR+/Mq+v5BhyhB5HQobczMNejtN5fbVjx44j8/Zv165dvxY6J62GPF7cJNvw
XZmvL8v4town5e8XWtz2XXfdFfw58vXv9bJuMpaF7t/ExMRArhsjbMhavVf6
6oLY28EIXzf53vtQ7O1ghI30uBJ7O5JxRK99pZ3U6nqqpKF2t/j4lue1lByT
TtOfGQLHM16O03l9lf6s1GroY3MXc9JyyNf5orx9Scb/kG0Ztrrdbdu2nRf6
OfL193hZN1mD7V3M9fmDuG6M4LVbI2/Xx94ORvi6ydgYezsYYSM9rsTeDh3a
MwZ9daCXmt/faHFOK3l/y/NaSWccPz4+/uaQ0Tj4XImL43ReX42MjJyYt3+f
+tSnfj90TnLmSX8ee0Te/lze7pO3X5LtOc3itm+77bbgbZSv/xUv66bnkEL3
T3526Xles+sm42fy53+OvW6M4PX7iDzOXhZ7Oxjh6ybfc8tjbwcjeN0OHFdi
b4cO7Zle+yrppb0t3j/dte0tXyery6/P9VdtZK/bkbm/WdZ9vNHBawD0E9df
tZddt+Q8yB/HXjeE4forn7j+yqdBu/6q0eLa9sz7D+uo9PUcjL8+fTWN5mui
0/OW7V4DoN/oq+k1r5seo/UxP/a6IQx95RN95dMg9dV0vwvYfJ1V3nVavaKv
8rX6fbPs88Ixj9X0Vb5W65b2lf6ZxvKDvvKJvvJpkPoq00wtHz/SxkpH3sf1
gr5qLe93+Zuvu4t1rKavWstbt2xfKRrLB/rKJ/rKp0HqqzKgr1pLjtN/1Wh6
naRWv9eQHKvpq/L01ZR1a+4rFWPdEIa+8om+8om+skVf5Wv1+hut+irvY/uJ
vsrXai1a9VXex6I86Cuf6Cuf6Ctb9FXwfJm8Lkev6KsweX2FcqOvfKKvfKKv
bNFXwfNFX9FXKAh95RN95RN9ZYu+Cp4v+oq+QkHoK5/oK5/oK1v0VfB80Vf0
FQpCX/lEX/lEX9mir4Lni76ir1AQ+son+son+soWfRU8X/QVfYWC0Fc+0Vc+
0Ve26Kvg+aKv6CsUhL7yib7yib6yRV8Fz1dZ+uozOiezZs2aF3t96Cv0C33l
E33lE31li74Knq+y9NUanZP58+cvjb0+eWP58uU7Ggf/fc13xp4v+son+son
+son+soWfRU8X6XoK3n8Ol/nZNmyZdtir0/eWLt27Td0G+v1+jGx54u+8om+
8om+8om+skVfBc9XKfpKm0W+F346Ojr63+bOnbsg9ho1jwULFqyQ7fuVjAdj
z5Wir3yir3yir3yir2zRV8HzVYq+UvK9cJHOy/Dw8PfOPvvsy2KvUzoWLVq0
Trrv57JtL+q/txx7nhR95RN95RN95RN9ZYu+Cp6v0vSVku+HEdmmV+TtLzds
2PDoqlWrPifj7hjj+uuv/6K03tPJNVfPy9v3x56fFH3lE33lE33lE31li74K
nq9S9ZWS74m3yXY9oueLdJ5iDn3OUt5+Qd6eEHtesugrn+grn+grn+grW/RV
8HyVrq+y9Pm4WEMeU4+Pvf956Cuf6Cuf6Cuf6Ctb9FXwfJW6r9AafeUTfeUT
feUTfWWLvgqeL/rKIfrKJ/rKJ/rKJ/rKFn0VPF/0lUP0lU/0lU/0lU/0lS36
Kni+6CuH6Cuf6Cuf6Cuf6Ctb9FXwfNFXDtFXPtFXPtFXPtFXtuir4Pmirxyi
r3yir3yir3yir2zRV8HzRV85RF/5RF/5RF/5RF/Zoq+C54u+coi+8om+8om+
8om+skVfBc8XfeUQfeUTfeUTfeUTfWWLvgqeL/rKIfrKJ/rKJ/rKJ/rKFn0V
PF/0lUP0lU/0lU/0lU/0lS36Kni+StlX+m88y7hOtu/eZE1jjDtkLNV/izD2
fDQra1/Jdr1V1u1qGZ+JtW76tXUbRkdHT449H83K2ldjY2Nz9b4u87Yz4vfb
vcn3/Jmx56NZWfsq+bdSl8i2bY+4bl/SddPH7Njz0Yy+stWgr0Lnq1R9NT4+
fpx+v+r8lGi8LN+na+r1+ozY85MqW1/J3BzTONijsdcqO16RsVW27ajY85Mq
W1/pfVrmaDiZq9jr9erQ4+L27dtfH3t+UmXrK103fUzSx6bYa9U0vqSP4bHn
J0Vf2WrQV6HzVZq+0sdT2Z5/0rlZu3btgwsWLFgxZ86cC2Kt0ymnnLLwoosu
un54ePh7yWP+12LPUapMfZU81j+tc3TzzTf/ra7b3LlzF8RaN/3aCxcuvGbD
hg2PJuv2ZFnauGx9JXPzgM6R3Mefljm7Tu/zsdZNv9cvvPDC5fq9nxyrny1L
Y5Wtr2RbvqBztHHjxh8uWrRo3amnnvrBWOs2e/bs83Tdbrjhhq8m32/7ZZwQ
e44UfWWLvgqer9L0VSM5b3X55ZePxl6j7Jg1a9a8G2+88evJY/4nYs+TKlNf
6TkinZuVK1f+aey1ah6rVq26O1m3TbHnSZWpr/Q5VJ0bPS7GXqe8x0jtiNjz
pMrUV7JuF+ncrF+//lv62BR7rbJDWy9prAdiz5Oir2zRV8HzVYq+0ut20vMf
sden1dCf0UZGRn4s368/jT1Xqix9lZxzfEXP8ZXtsV6HblNy/vGVMpwLKVlf
/VTv03rfjr1OrYY+Fuhjgj42xJ6rMvWVntcbGxt7Pua5xulGeh6rDMc3+soW
fRU8X6Xoq+QazcnFixdviL0+eWPVqlWf023Ua4Fjz1dZ+kq24Vydk6uuuurT
sdcnb+i26TbqtpZgvkrRV8n17JN6n469PnlDHwuSx8klseerLH2VXOeo1098
I/b65A19rjA5h7Um9nzRV7boq+D5KkVfpc8xlfVnsuy66fn52PNVlr5KrrGd
1MfU2OuTN/S6orI83pelr9LnmJYsWVKPvT5546yzzlqUPEc4HHu+ytJX+jt6
OifLly/fEXt98oaeD01/R6EE80VfGaKvguerFH2Vfh/EXptO1k0ea6+IPV9l
6avGwd89m9RjYez1yRtpX5XlOF2GvtL7sM6Jzk3s9ckb9NVUeszQOdHHotjr
M92grwYTfRU8X/RV4LrRV4fQV2Hoq84HfTUVfRWGvrJFXwXPF30VuG701SH0
VRj6qvNBX01FX4Whr2zRV8HzRV8Frht9dQh9FYa+6nzQV1PRV2HoK1v0VfB8
0VeB60ZfHUJfhaGvOh/01VT0VRj6yhZ9FTxf9FXgutFXh9BXYeirzgd9NRV9
FYa+skVfBc8XfRW4bvTVIfRVGPqq80FfTUVfhaGvbNFXwfNFXwWuG311CH0V
hr7qfNBXU9FXYQa1r2S/7pGxe7qPkfvKStn3/ZZfl77KJ1/v3+3ateu1TfM1
pa/k406Sx5PTi9w2+iqffL3z6vX60dn3teqrsbGxY2X73lXkttFX087Nu3RN
su9r1Ve6trrGRW4bfTXt3Jyuj4FN75vSV/pYqo+pRW4bfRVmEPtK9mdvMr+b
8z5G+yv5mGkbrIuvTV+1npd5Mp6S0cg2VnNf6eOKvG93Mo+vK2r76KvWxsfH
z0jW7c+yjdXcV0lbfVnG4/I5Jxa1ffRVa7oGuha6JtnGau4rXVNdW11jXeui
to++ak0f85LHvt3ZxmruK30MbRz0lKzne4raPvoqzCD1VdpMek4q6YeVzR+T
nLN69WP0cyy3gb7KJ48Rq5sbK9tXmbbS48K8IreNvsqXWbdXGyvbV5m2ekrm
cXGR20Zf5dO1SNbt1cbK9lW2rXSNi9w2+ipf8rPo49nGyvZVtq2KXjf6Ksyg
9FVyzmqv/lnPSbXap7S/kj+njTGlwXrcDvpqGs2NlfZVzLZS9NX0mhsr7auY
baXoq+k1N1baVzHbStFX02turLSvYraVoq/CDEpfZWVbK0+2tYy/Nn3VRrax
xsfH3yeP9xfEbCtFX7WXbSxdM/n7+THbStFX7WUbS9cs+X6L1laKvmov21iy
hh/Ux8qYbaXoqzAD2ldtr6tKGmzaa9vlZ7wj9Oe8kCFf92Evx+m8vtqxY8eR
efsnPz/9WuictBry+HCTbMN3ZRu+KX9+XObtSfn7hRa3fddddwV/jnz9e72s
m4xlofs3MTFhum4yX38jbx9J1vCKiOs26qWvdFst5qmboWukayXr94iMbyV/
vinW9uh92EtfdbNu3dyXc+bpQn1slLV6MnlexmzdunlMkG2Y76iv7o11/87M
14HjSuztSMYRPWTVAen1VdNd2646aTB93krPyQaOZ7wcp/P6Kj0X3WokP/uG
zknLIV/ni/L2ZRkvyFrcYnW727ZtOy/0c2Qu9nhZN1mD7V3M9flW8ytfXx8z
XpLxoqzbp2Kum3z9+xp++uq+LvZvvtX8jo2N6Vq9qGuXrKHJ7Xazjcl92Etf
Ba9bN/flvCHfu/rY+IK8fTl5zLS63eDHBJmLdQ0nfZU8ppvMVbcjPa7E3g4d
Fq+DlLmuKvc1XvT/NTpoMPnfb9JtChn6c0bDyXE6r6/kcXjuNPt3auictBpJ
pz0q4ycyfiTjszt27PhDi9vuZhtlrb/uZd308TZ0/0ZHR63W7WzZhodkG/T3
Q56T8VV531mx1k0+Z2fDSV/pthYxJznrdpauldzPdc107R7StYy4btoMLvoq
5rrpY6I+NupjpKydPlY+qo+dFrfdzWOCbMOVXvpKH9Mt5qmXkR5XYm9Hsi1v
6jGv0mvbp33er5MG61aD66/aar6WvdXvFRaN66/aa76WvdXvFRatwfVXbSXP
M716vVWr3yssGtdftdd8LXujxe8VFo3rr8IM2vVXjYjXtidfn76aRt7vCcZu
LPpqenm/Jxi7seir6TW3Vfr+2I1FX00v7/cEYzcWfRVmAPuq7WtaddJgPXx9
+ipHu9dgiNlY9FW+dq/BELOx6Kt8eW2VitlY9FW+dq/BELOx6Kswg9RX6bXt
7V7TqpMG6xZ91Vqnr28Vq7Hoq9Y6fX2rWI1FX7XWrq1SsRqLvmqt09e3itVY
9FWYQeqrMqCvWpPHit+Tr/lX07VV5mNXF32cpq9aS7u4k9e3Stat0OM0fdVa
2sWdvE5S0liFHqfpq9bSLu5k3ZLG+iv6auqgrwYTfZUv5PU3LF6rIwR9lS+k
c3l+cOqI+fxgPz7WAn2Vr8yPk/RVGPrKFn3lE33lE33lE33lE30Vhr6yRV/5
RF/5RF/5RF/5RF+Foa9s0Vc+0Vc+0Vc+0Vc+0Vdh6Ctb9JVP9JVP9JVP9JVP
9FUY+soWfeUTfeUTfeUTfeUTfRWGvrJFX/lEX/lEX/lEX/lEX4Whr2zRVz7R
Vz7RVz5Z9pXc3GS7MTQ09ETo7dJXU1n2ldzcvlr7tdvXzW3TV4OJvvKJvvKJ
vvLJoq9qHXRVjb4yZdFXtc66ir7CFPSVT/SVT/SVT732lfZS7WA33davdaOv
puq1r2S97q8dXLc7+/k9R18NJvrKJ/rKJ/rKp176aubMmZfU+txWOuirqXrt
q1oBbaWDvhpM9JVP9JVP9JVPvfTVjBkzrpGbmNTO6ue60VdT9dJXaRfr+vX7
e46+Gkz0lU9WfZU+9rcb3fwMR19NZdVX6WN/u6HPb4TeNn01FX3lE30Vhr6y
RV/51GtfddpVNfrKVK991WlX1egrUzw/6BPPD4ahr2zRVz712le15Pjbz5+p
6aupeu2rWvK7TP38mZq+msrq+vZ+rht9NZXh9e19bWP6ajDRVz710lf6WFEr
4PkK+mqqXvoqPefY7+cr6KupeH0Gn3h9hjD0lS36yqce++rOWpePA92sG311
SC99lXZxv9eNvprK6vVFA653pK8MWL2+aMDz8vQVXkVf+URf+URf+cS/j+MT
/z5OGPrKFn3lE88P+sTzgz5Z91WtD9f00FdTWfeV3OS+flzvTl8NJvrKJ6vr
24tYN/rqEKvr2/vZxvTVVNZ9pcfobp4DnG7QV1NZ91Xys6n5uX/6ajDRVz7x
+gw+8foMPln3VbqOlp1MX03Vj+cHa304h0xfDSb6yier1xdNrsWirwrSa19l
1u3Ac7ztBn1lI6SvQn52sTyHRV9NFdJXgT+7mJ7Doq8GE33lE/8+jk9WfdXP
QV9NxfXtPnF9exj6yhZ95VM/+iq5JsTs2k36aqpe+yp9vcPa4edATK+Tpq+m
oq98oq/C0Fe26CufQvqq02tp6av+C+kr7absuqXP5Wav2enH7xTSV1PRVz7R
V2HoK1v0lU8hfdV8XUHex9FX/RfSV0k77cuszxOtzlUl6xZ8nVXeoK+moq98
oq/C0Fe26Cufun1+sJb5tx6aj9X0Vf+FPj9Yy5yb0oair+Kgr3yir8LQV7bo
K596vf4q+3uD6bGZvuq/0L7KPieYnIc87PeWeH6wGLy+qE/d/P5g3mNg5nd2
S/n6V9++tH7CnkvrF+25dHjkoUuHP9vN+JObR3+o29Lt58vYuWdJ/eqHLqm/
02QBnaOvfLK6vr35uUP6qr+6ub693WtoWL+eNH01Fa8v6lO3r88w3fngWh9e
w73XvjrQNJcOvyhtNdnL+LO1o3r/6ek2MuMBbT6rtfSIvvKpT78/+AR91V+8
PoNPvL6oT1301YFzU7VpXpus+bpIi9FLXz20ePgO7Rnpq/17Ft868a3Fwx9/
aHF9QYxx4PzZ4vqND11a/6sD27R4+Plvf6R+kuGSukJf+cTrX/lEX/nE64v6
1G1f6agdvFZ1Ske1ep6+19FtX0nHvOfguaL6M9o2sbqq9RjeeGDbFg9/23hZ
3aCvfKKvfKKvfOL6dp966Ssd2r+1pusbk98zMft9Eh3d9pW0y2MPXTr80rcu
rX8sfk+1GK+ex6ovsF/d8qOvfKKvfKKvfKKvfOq1r3S0uv7R+t9X7/r81eLh
l/dcIo0Vu6Nyxu7F9WuTa7FGjJfWBfrKJ/rKJ/rKJ/rKJ4u+KmJ001e7l9Tf
evD5t/rdsTsqf9yyML3WvU9LXGr0lU/0lU/0lU/0lU+D/PpX6bVX31o8vD1+
R+WPKl+DRV/5RF/5RF/5RF/5RF/FH/SVj+M0fXUIfeUTfeUTfeUTfRV/0Fc+
jtP01SH0lU/0lU/0lU/0VfxBX/k4TtNXh9BXPtFXPtFXPtFX8Qd95eM4TV8d
Ql/5RF/5RF/5RF/1Z1xz5gUr6av26Cuf6Cuf6Cuf6Cuf6Cv78Ykz5l8rX37y
5GPnfJG+mh595RN95RN95RN95RN9ZT/+l6NnPSZfflI7y0tfydzulnFP8/vl
/rEy+Z5Jx17Lr0tf+URf+URf+URf+URf9efclTaWl+cHZW73J/2wMvt+me/N
ybxvbvrY/YZfm75yiL7yib7yib7yib6yHW846pinawHnrmL2lZ6zSr4f0r46
J/v/k/cfdr4qPZ/V3GLdoq98oq98oq98oq98oq86G8PvvuSj/+r43/3z9O8r
zzj/mn8z5+Q/zn7Morf8m3U1PXf166//Tshtx+grbSftq+TPe1udk9qcyL6P
voKir3yir3yir3yir/LHH7zxtz+36wNrPqB/vuO8KxfPOvLo76X/75zf/oOt
//vsE/9T+vd/9/v/euMxM4/6x6Ha0K/WveNDHy97X2VlW6ud9JxX87muHr42
feUQfeUTfeUTfeUTfZU/fvc33/h/akelf5d++q+fX/jJD+mf9VxW9vzVrCN/
7fvyJSdPeN0b9oR+nZh9pZ2UzO2Ua9ubZa7HavuxnaKvfKKvfKKvfKKvfKKv
Do2b3v7+Zf/6f517V/r3y05975rZR7/uifTves369W973yfS9vrQyW+/Rf98
yVveddPM1854Pj13pc8l6rkvD32VNlO75/u0qdq11cTExGnyMQsCxzNejtOy
7+u62L+BHHJ/2eNl3bZu3bo99nyVZch9+L6Gk75KtjX6nJVhJPdhF33Fuh0a
yTHDRV8lj+kd79t/+uTt60L6Ss9NaUNdMPdf3Z5tqiV/cPaNzU2VbS1psMdr
ybmr9Day57066asHLxt+JnTttGcM+upAN033MY2D12dNNl+L1eK23qTbFDLk
57InG06O07J/V4bu36AOmYuve1k3uY/dEnu+yjJkLnY2nPSVbmvs+SrL0Puw
l75i3Q4NPWZ46St9TA/Zt11Xj1wZ+vygnnt6/VFH/+dPnrlghf793/7OqZtP
mvXGv0zPU+n/1z+f/7t/OPbZ91394Vvf9eErX/ua1/wiPXc19zePv/8tx574
hdDnB3dftvHJLtbuTb32VdJOua9p1ch57QYrDZ4fdInnB31q8PygSzw/6FPV
nx98YNGG9x3/67/5SHqOSof++Q1HHfNdvaZdr2/Xt3mfr+e6asm5q7fN+d8+
rW/1NtPzYScfO+cvtMXK+vxgY5pr25PvFbNr2XO+Bn3lEH3lE33lE33lU9X7
SseVp8375G8edcw/nPbG3747bSN9fi99/m+6kf2dQb12K20x/dzjjn7dU/o7
huk18WXrq8y17VOe90ufE+xnWyVfh75yiL7yib7yib7yib46OP7k/I8v0uur
9FzW2HsuvbyT5/XSc1e/O+uND2Tff/ab3rJdX8shvVarrNe3Z65tP6yh0u7K
G5bPFdJXPtFXPtFXPtFXPtFXhw+93kp/b7CTj9VzV68ZGvrl1vf++3+ffb+e
x5r4tx9dEnL9Vex/fzAW+son+son+son+son+qq7kZ670uvZe70t+srHcZq+
OoS+8om+8om+8om+Ch9f/8jahb8+88gftTp3RV+Foa98oq98oq98oq98oq/C
h15fVTM6d0Vf0Vce0Vc+0Vc+0Vc+0Vfh566OmjHzn63OXdFX9JVH9JVP9JVP
9JVP9NX049zfOXWL3NTkdOP040/6LH3VHfrKJ/rKJ/rKJ/rKJ/oqbOhzgjNe
85p/0XNXx/7a6/5evszkhndctJS+6g595RN95RN95RN95RN9FT70NUTT81q9
nruir+grj+grn+grn+grn+ir8KHnq+TmJ/U6LIvbo698HKfpq0PoK5/oK5/o
K5/oq/CRPi+Y/TcL6avu0Fc+0Vc+0Vc+0Vc+0VdhI31e8KRZb/xLq9useF/d
oWt7yimnLIx9H8sb11577Z/rNm7duvWtseerLOR7cY3OybnnnvvR2OuTN5Yt
W7Yt6atzY89XWch8LNU5WbRo0brY65M3dNuS4/TS2PNVFnof1jnR+3Ts9ckb
+liQHKfXxJ6vstBjhs6JHkNir0/e0GNv8v12R8i+ffuS+nHaLt9cXP+qVQvV
kt8ZtGur+kW6jQ8tHr63PytcbunPZWV+vN+wYcOjso0vx56rMpH5WKDrtnTp
0q2x1ydv3HjjjV/Xbdy+ffvrY89XWcj32+k6J6tWrfpc7PXJG6tXr/580sWn
x56vstD7sM6J3qdjr0/eSH+e0ceG2PNVJnrs0GNI7PXJG+nPM5s2bVoSum8P
XTr8U2mX71m0kJ6zkpuc1HNYVn31zcW31g+cv7q0fl0flrb0ZE1P0vvfxo0b
fzh79uzzYt/Xmkf6XIX8TPa12HNVJvp4L3Py/O233/6TOXPmXBB7nZrH/Pnz
l8r2/VLW7pHYc1Um9Xp9hszJs2NjYy+eccYZH469Ts1Dn2OSx4SXZO1+pNsa
e77KRO/Lep/W+3bsdWoec+fOXSCPBf9dHxP4eeZwMicPlvW5XT3m6rFXtvFf
ZJwQum/SV59Nzg9t7KWD9ForublJvfbKqq0eWnzLQtm2f5RtfOWvL6mf3Iel
dSF9rkkbX79PY9/n0iHfD9eMjo7+XB8zurnvDbr03OMtt9zyeJmO1Xr8GRkZ
eU67Xdavst9XedJrQoaHh39QpuuwdFv0sZ5rHVvT+7Lep/W+XabG0ueXbr31
1qe41rG15BzCi3osKVNj6bE2eW5Gzx9c3c2+6XOEeg5rz+Lhn0vTbOi2hfR3
BWsGr3WVfV5QtutvDrTfpfVh2xX1JfmZ+gu6zvoz0A033PBVPdes1wTGGCtX
rvzTm2+++W/lPvcrGS9wvjufzM9OXTc9H6LPXSxfvnxHrHVbsWLFzvXr138z
Wbd/6eZ8d1XImm2Q8YqeK9J1u+qqqz4da930a69du/Ybui26TVy/ky/5meZl
vY/LnD2o9/lY66bf6/pYLd/7zyfPC26PPT9lJeul1/6/qPOkxxY9xsRaNz22
6rrpsTZpq8/0sm8PLamfL03zwsGWGf7OnsX1u/Wa907Hhb93hj7HMKlvQz6v
1ZDO+w+yHffLduxPzqt96dvv5jy4knW+SMZ/Tb5XYw99DPsa563aS67F+n4J
1mwyOT4/qD8zxp6XspN5epuMJ0uwZul4hGuu2kvOY+nvXb9SgjXTc43/hfON
7eljUvJc4cux1ywZ+phtcu7g25fWT5CW+ZqMlw9e79TZuHfhqgPXs//WMW/o
+HM6GQ9dWv+RnsOy2LdBMz4+fpx+v8Ya+hjPtR/hkmuy3hlr3eSx4kxZt6Ni
z4M3MmfHaGvFWjf92roNsefBG72v630+4rq9k2utwumxRY8xMY9x/Vo3PVe0
e3H9dH3thk7GKcedcGetzb8/eMRrZ+zr9PZ06HOW/dg3AAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBn/n/oLxBO
    "], {{0, 423.59999999999997`}, {360., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
    Automatic],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{564., 668.},
  ImageSizeRaw->{360., 423.59999999999997`},
  PlotRange->{{0, 360.}, {0, 423.59999999999997`}}]], "Output",
 CellChangeTimes->{{3.929128226099953*^9, 3.929128239319809*^9}, 
   3.9291282723630447`*^9, {3.9291283039673376`*^9, 3.929128316633011*^9}, 
   3.92912854034643*^9, {3.929128599163261*^9, 3.929128624869766*^9}, 
   3.929128698164732*^9, 3.929132156889134*^9, {3.929132313392315*^9, 
   3.92913233008468*^9}, {3.929132551061346*^9, 3.929132608809311*^9}, 
   3.9291326499984055`*^9, 3.9291328070485897`*^9, 3.929132867468638*^9, 
   3.9291743750311127`*^9, 3.929178248649122*^9, 3.929178305617382*^9, {
   3.929178336912344*^9, 3.929178477692251*^9}},
 CellLabel->
  "Out[426]=",ExpressionUUID->"e44685c2-4c8b-d848-aee4-bfefc8066f29"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qcircuit", "=", 
   RowBox[{"XorFromNandGatesCircuitNoCopy", "[", 
    RowBox[{"[", 
     RowBox[{"2", ";;"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qc", "=", 
   RowBox[{"quantumCircuit", "[", "qcircuit", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qci", "=", 
   RowBox[{"Wolfram`QuantumFramework`QuantumState", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"ToString", "/@", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "1"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qm", "=", 
   RowBox[{"qc", "[", "qci", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"qm", "[", "\"\<Probabilities\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"o", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"qc", "[", "qci", "]"}], "[", "\"\<Probabilities\>\"", "]"}], "[", 
   InterpretationBox[
    StyleBox[
     TemplateBox[{
       RowBox[{
         SubscriptBox["\"\[ScriptZ]\"", 
          InterpretationBox["\"+\"", 1]]}]},
      "Ket"],
     FontWeight->"Plain"],
    Wolfram`QuantumFramework`QuditName[
     Subscript["\[ScriptZ]", 
      Interpretation["+", 1]], "Dual" -> False]], "]"}]}]}], "Input",
 CellChangeTimes->{{3.929132651797762*^9, 3.9291326560582447`*^9}, {
  3.929132702792431*^9, 3.929132702847994*^9}, {3.929132776877882*^9, 
  3.9291328481216154`*^9}, {3.929139373173172*^9, 3.929139387862847*^9}, {
  3.9291780550460777`*^9, 3.9291782040009823`*^9}},
 CellLabel->
  "In[427]:=",ExpressionUUID->"0b6c2436-ca71-7f45-aac0-83637698b399"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{
          SubscriptBox["\"\[ScriptZ]\"", 
           InterpretationBox["\"+\"", 1]]}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[
      Subscript["\[ScriptZ]", 
       Interpretation["+", 1]], "Dual" -> False]], "\[Rule]", "1"}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{
          SubscriptBox["\"\[ScriptZ]\"", 
           InterpretationBox["\"\[Minus]\"", -1]]}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[
      Subscript["\[ScriptZ]", 
       Interpretation["\[Minus]", -1]], "Dual" -> False]], "\[Rule]", "0"}]}],
   "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.92913265714712*^9, {3.929132807398178*^9, 3.929132867874262*^9}, {
   3.92913935938974*^9, 3.929139389602808*^9}, 3.9291743753813896`*^9, 
   3.9291746969398212`*^9, {3.9291780282701054`*^9, 3.9291780559160557`*^9}, {
   3.9291780944541607`*^9, 3.9291781418175297`*^9}, {3.9291781839282036`*^9, 
   3.9291782052899513`*^9}, 3.9291783146324005`*^9, {3.9291784605858955`*^9, 
   3.92917847994878*^9}},
 CellLabel->
  "Out[431]=",ExpressionUUID->"001dc8cb-ca93-644c-85eb-a2a0d2efb639"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.92913265714712*^9, {3.929132807398178*^9, 3.929132867874262*^9}, {
   3.92913935938974*^9, 3.929139389602808*^9}, 3.9291743753813896`*^9, 
   3.9291746969398212`*^9, {3.9291780282701054`*^9, 3.9291780559160557`*^9}, {
   3.9291780944541607`*^9, 3.9291781418175297`*^9}, {3.9291781839282036`*^9, 
   3.9291782052899513`*^9}, 3.9291783146324005`*^9, {3.9291784605858955`*^9, 
   3.929178480764721*^9}},
 CellLabel->
  "Out[432]=",ExpressionUUID->"53fe3817-65a2-2a47-8f47-9c20274ec122"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", "%", "]"}]], "Code",
 CellChangeTimes->{{3.9291754414197426`*^9, 3.9291754450210304`*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"f05387aa-5b06-5840-a1e4-3f4e0bf890ef"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    StyleBox[
     TemplateBox[{
       RowBox[{
         SubscriptBox["\"\[ScriptZ]\"", 
          InterpretationBox["\"+\"", 1]]}]},
      "Ket"],
     FontWeight->"Plain"],
    Wolfram`QuantumFramework`QuditName[
     Subscript["\[ScriptZ]", 
      Interpretation["+", 1]], "Dual" -> False]], ",", 
   InterpretationBox[
    StyleBox[
     TemplateBox[{
       RowBox[{
         SubscriptBox["\"\[ScriptZ]\"", 
          InterpretationBox["\"\[Minus]\"", -1]]}]},
      "Ket"],
     FontWeight->"Plain"],
    Wolfram`QuantumFramework`QuditName[
     Subscript["\[ScriptZ]", 
      Interpretation["\[Minus]", -1]], "Dual" -> False]]}], "}"}]], "Output",
 CellChangeTimes->{3.9291754464984474`*^9},
 CellLabel->
  "Out[149]=",ExpressionUUID->"b6520aa1-e505-224d-96e5-2bec9534fea7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Code",
 CellChangeTimes->{{3.92917544926696*^9, 3.9291754502070637`*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"ae2744c9-7bbe-de46-95b7-0d3b99ecaa99"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   TemplateBox[{
     RowBox[{
       SubscriptBox["\"\[ScriptZ]\"", 
        InterpretationBox["\"+\"", 1]]}]},
    "Ket"],
   FontWeight->"Plain"],
  Wolfram`QuantumFramework`QuditName[
   Subscript["\[ScriptZ]", 
    Interpretation["+", 1]], "Dual" -> False]]], "Output",
 CellChangeTimes->{3.9291754506629925`*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"9f204bbe-6411-d54b-adf6-46a7221e8bdf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{"b", "=", 
   RowBox[{"ToExpression", "[", 
    RowBox[{"\"\<\\\"\\[Script\>\"", "<>", 
     RowBox[{"ToUpperCase", "[", "\"\<z\>\"", "]"}], "<>", "\"\<]\\\"\>\""}], 
    "]"}]}]}]], "Code",
 CellChangeTimes->{{3.9291774972295513`*^9, 3.9291776219907055`*^9}},
 EmphasizeSyntaxErrors->True,
 CellLabel->
  "In[233]:=",ExpressionUUID->"63f36092-1902-1143-a8f9-c6a92de49ba0"],

Cell[BoxData["\<\"\[ScriptZ]\"\>"], "Output",
 CellChangeTimes->{{3.929177501932394*^9, 3.929177622608671*^9}},
 CellLabel->
  "Out[233]=",ExpressionUUID->"4449b86f-8d94-6e4b-93ea-15b2535264ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "Head"}]], "Code",
 CellChangeTimes->{{3.9291754521997223`*^9, 3.9291754581968765`*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"77467196-7e06-d346-b1ac-38b7655f15ae"],

Cell[BoxData["Wolfram`QuantumFramework`QuditName"], "Output",
 CellChangeTimes->{3.929175458594469*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"bb5e124d-efa2-6e43-98c0-aa63f9f9937d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Wolfram`QuantumFramework`QuditName", "[", "]"}]], "Code",
 CellChangeTimes->{{3.9291754623285217`*^9, 
  3.929175469012615*^9}},ExpressionUUID->"c6ec8a39-a22f-d949-aa90-\
843d343f6998"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qnFromQudit", "[", "s_", "]"}], ":=", " ", 
  RowBox[{"Wolfram`QuantumFramework`QuditName", "[", 
   RowBox[{
    RowBox[{"Subscript", "[", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"\"\<\\\"\\[Script\>\"", "<>", 
        RowBox[{"ToUpperCase", "[", 
         RowBox[{"StringTake", "[", 
          RowBox[{"s", ",", " ", 
           RowBox[{"{", "1", "}"}]}], "]"}], "]"}], "<>", "\"\<]\\\"\>\""}], 
       "]"}], ",", " ", 
      RowBox[{"Interpretation", "[", 
       RowBox[{
        RowBox[{"StringTake", "[", 
         RowBox[{"s", ",", " ", 
          RowBox[{"{", "2", "}"}]}], "]"}], ",", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{"s", ",", " ", 
             RowBox[{"{", "2", "}"}]}], "]"}], "==", "\"\<+\>\""}], ",", "1", 
          ",", "0"}], "]"}]}], "]"}]}], "]"}], ",", " ", 
    RowBox[{"\"\<Dual\>\"", " ", "->", " ", "False"}]}], "]"}]}], "\n", 
 RowBox[{"qnFromQudit", "[", "\"\<z+\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"<|", 
   RowBox[{"qn", "->", "True"}], "|>"}], "[", "%", "]"}], "\n", 
 RowBox[{"StringTake", "[", 
  RowBox[{"\"\<z+\>\"", ",", " ", 
   RowBox[{"{", "2", "}"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.929175847277336*^9, 3.929175858504715*^9}, {
  3.9291770403645306`*^9, 3.929177055231695*^9}, {3.9291771175228424`*^9, 
  3.9291771536463013`*^9}, {3.929177196449505*^9, 3.9291774546959095`*^9}, {
  3.9291776436457367`*^9, 3.9291776522530785`*^9}, {3.9291777032847214`*^9, 
  3.9291777774113064`*^9}, {3.929177832467039*^9, 3.9291779353976173`*^9}},
 CellLabel->
  "In[307]:=",ExpressionUUID->"b88580aa-4401-904b-b1ee-46bd6c886569"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   TemplateBox[{
     RowBox[{
       SubscriptBox["\"\[ScriptZ]\"", 
        InterpretationBox["\"+\"", 
         If[StringTake["z+", {2}] == "+", 1, 0]]]}]},
    "Ket"],
   FontWeight->"Plain"],
  Wolfram`QuantumFramework`QuditName[
   Subscript["\[ScriptZ]", 
    Interpretation["+", 
     If[StringTake["z+", {2}] == "+", 1, 0]]], "Dual" -> False]]], "Output",
 CellChangeTimes->{{3.9291778407769527`*^9, 3.929177936040762*^9}},
 CellLabel->
  "Out[308]=",ExpressionUUID->"8adf3699-dc4b-3746-9fc3-2843f8a9183d"],

Cell[BoxData[
 RowBox[{"Missing", "[", 
  RowBox[{"\<\"KeyAbsent\"\>", ",", 
   InterpretationBox[
    StyleBox[
     TemplateBox[{
       RowBox[{
         SubscriptBox["\"\[ScriptZ]\"", 
          InterpretationBox["\"+\"", 
           If[StringTake["z+", {2}] == "+", 1, 0]]]}]},
      "Ket"],
     FontWeight->"Plain"],
    Wolfram`QuantumFramework`QuditName[
     Subscript["\[ScriptZ]", 
      Interpretation["+", 
       If[StringTake["z+", {2}] == "+", 1, 0]]], "Dual" -> False]]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.9291778407769527`*^9, 3.9291779361517963`*^9}},
 CellLabel->
  "Out[309]=",ExpressionUUID->"3398d7c2-4170-5946-8c40-213dd93474b3"],

Cell[BoxData["\<\"+\"\>"], "Output",
 CellChangeTimes->{{3.9291778407769527`*^9, 3.929177936261322*^9}},
 CellLabel->
  "Out[310]=",ExpressionUUID->"c7f54a03-ea50-ad4e-9826-903beea5d630"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"qn", "\n", 
 RowBox[{"qm", "[", "\"\<Probabilities\>\"", "]"}], "\n", 
 RowBox[{"%", "[", "qn", "]"}], "\n", 
 RowBox[{"qn", "//", "InputForm"}]}], "Code",
 CellChangeTimes->{{3.9291771298239765`*^9, 3.9291771401122456`*^9}, {
  3.9291773262733097`*^9, 3.929177346888815*^9}, {3.929177942026821*^9, 
  3.9291779448230114`*^9}},
 CellLabel->
  "In[311]:=",ExpressionUUID->"ec67a21a-50c0-0646-aaed-646e0afbcc77"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   TemplateBox[{
     RowBox[{
       SubscriptBox["\"\[ScriptZ]\"", 
        InterpretationBox["\"+\"", 1]]}]},
    "Ket"],
   FontWeight->"Plain"],
  Wolfram`QuantumFramework`QuditName[
   Subscript["\[ScriptZ]", 
    Interpretation["+", 1]], "Dual" -> False]]], "Output",
 CellChangeTimes->{
  3.92917586017227*^9, {3.9291770411150055`*^9, 3.9291770555500298`*^9}, {
   3.929177126072529*^9, 3.929177156807678*^9}, 3.9291771910266857`*^9, {
   3.9291773444308033`*^9, 3.9291773742146263`*^9}, 3.929177439087906*^9, 
   3.929177945144045*^9},
 CellLabel->
  "Out[311]=",ExpressionUUID->"c015c0b1-7fc9-7f48-a2c4-c35921bd12d0"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{
          SubscriptBox["\"\[ScriptZ]\"", 
           InterpretationBox["\"+\"", 1]]}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[
      Subscript["\[ScriptZ]", 
       Interpretation["+", 1]], "Dual" -> False]], "\[Rule]", "1"}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{
          SubscriptBox["\"\[ScriptZ]\"", 
           InterpretationBox["\"\[Minus]\"", -1]]}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[
      Subscript["\[ScriptZ]", 
       Interpretation["\[Minus]", -1]], "Dual" -> False]], "\[Rule]", "0"}]}],
   "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.92917586017227*^9, {3.9291770411150055`*^9, 3.9291770555500298`*^9}, {
   3.929177126072529*^9, 3.929177156807678*^9}, 3.9291771910266857`*^9, {
   3.9291773444308033`*^9, 3.9291773742146263`*^9}, 3.929177439087906*^9, 
   3.929177945250965*^9},
 CellLabel->
  "Out[312]=",ExpressionUUID->"f38f1ef5-7d8e-7440-ac9a-3dab82218069"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.92917586017227*^9, {3.9291770411150055`*^9, 3.9291770555500298`*^9}, {
   3.929177126072529*^9, 3.929177156807678*^9}, 3.9291771910266857`*^9, {
   3.9291773444308033`*^9, 3.9291773742146263`*^9}, 3.929177439087906*^9, 
   3.929177945364298*^9},
 CellLabel->
  "Out[313]=",ExpressionUUID->"210108e1-564f-674d-9607-67ad5b06110b"],

Cell["\<\
Wolfram`QuantumFramework`QuditName[Subscript[\"\[ScriptZ]\", \
Interpretation[\"+\", 1]], \"Dual\" -> False]\
\>", "Output",
 CellChangeTimes->{
  3.92917586017227*^9, {3.9291770411150055`*^9, 3.9291770555500298`*^9}, {
   3.929177126072529*^9, 3.929177156807678*^9}, 3.9291771910266857`*^9, {
   3.9291773444308033`*^9, 3.9291773742146263`*^9}, 3.929177439087906*^9, 
   3.929177945485985*^9},
 CellLabel->
  "Out[314]//InputForm=",ExpressionUUID->"f0721945-5c88-9e4d-898e-\
ded369f53d08"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qm", "[", "\"\<Probabilities\>\"", "]"}]], "Code",
 CellChangeTimes->{{3.9291758643946247`*^9, 3.929175870309143*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"af01341f-4a97-e041-b1dc-35bca2f0c95a"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{
          SubscriptBox["\"\[ScriptZ]\"", 
           InterpretationBox["\"+\"", 1]]}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[
      Subscript["\[ScriptZ]", 
       Interpretation["+", 1]], "Dual" -> False]], "\[Rule]", "1"}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{
          SubscriptBox["\"\[ScriptZ]\"", 
           InterpretationBox["\"\[Minus]\"", -1]]}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[
      Subscript["\[ScriptZ]", 
       Interpretation["\[Minus]", -1]], "Dual" -> False]], "\[Rule]", "0"}]}],
   "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.9291758715557594`*^9, {3.9291770457477875`*^9, 3.929177082220745*^9}},
 CellLabel->
  "Out[162]=",ExpressionUUID->"5bb0a386-a407-9845-b631-ad8766833630"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", "%", "]"}]], "Code",
 CellChangeTimes->{{3.92917704732469*^9, 3.9291770898965607`*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"aed191b2-4297-d940-9bee-258dac8dc611"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    StyleBox[
     TemplateBox[{
       RowBox[{
         SubscriptBox["\"\[ScriptZ]\"", 
          InterpretationBox["\"+\"", 1]]}]},
      "Ket"],
     FontWeight->"Plain"],
    Wolfram`QuantumFramework`QuditName[
     Subscript["\[ScriptZ]", 
      Interpretation["+", 1]], "Dual" -> False]], ",", 
   InterpretationBox[
    StyleBox[
     TemplateBox[{
       RowBox[{
         SubscriptBox["\"\[ScriptZ]\"", 
          InterpretationBox["\"\[Minus]\"", -1]]}]},
      "Ket"],
     FontWeight->"Plain"],
    Wolfram`QuantumFramework`QuditName[
     Subscript["\[ScriptZ]", 
      Interpretation["\[Minus]", -1]], "Dual" -> False]]}], "}"}]], "Output",
 CellChangeTimes->{{3.9291770500336456`*^9, 3.9291770901988907`*^9}},
 CellLabel->
  "Out[163]=",ExpressionUUID->"0a754e0b-e963-ef41-bdcc-c9831651ce48"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Code",
 CellChangeTimes->{{3.9291770938595943`*^9, 3.929177094588152*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"656e4e87-d32d-774d-9dd2-d5c09fc93df4"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   TemplateBox[{
     RowBox[{
       SubscriptBox["\"\[ScriptZ]\"", 
        InterpretationBox["\"+\"", 1]]}]},
    "Ket"],
   FontWeight->"Plain"],
  Wolfram`QuantumFramework`QuditName[
   Subscript["\[ScriptZ]", 
    Interpretation["+", 1]], "Dual" -> False]]], "Output",
 CellChangeTimes->{3.929177094948452*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"200d3a73-01ed-3a46-b7a8-ab2e2d244e07"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "InputForm"}]], "Code",
 CellChangeTimes->{{3.9291771005080185`*^9, 3.929177102078697*^9}},
 CellLabel->
  "In[165]:=",ExpressionUUID->"dd705105-ef16-b242-8b24-747cc8771b35"],

Cell["\<\
Wolfram`QuantumFramework`QuditName[Subscript[\"\[ScriptZ]\", \
Interpretation[\"+\", 1]], \"Dual\" -> False]\
\>", "Output",
 CellChangeTimes->{3.929177102388098*^9},
 CellLabel->
  "Out[165]//InputForm=",ExpressionUUID->"e3ca1248-bac6-6043-8c24-\
fe328497c7d0"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1152, 579.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792}},
Magnification:>0.9 Inherited,
FrontEndVersion->"14.0 for Microsoft Windows (64-bit) (December 16, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e6298520-1b27-1f40-8cad-3ac676486da6"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[583, 22, 229, 5, 143, "Title",ExpressionUUID->"80ccb2bd-270f-604e-8ff0-1b73aebceafb"],
Cell[815, 29, 304, 7, 47, "Subtitle",ExpressionUUID->"a6c8d056-788c-7a46-b828-99086904c6f9"],
Cell[CellGroupData[{
Cell[1144, 40, 159, 3, 59, "Section",ExpressionUUID->"8579bbb3-05e8-2147-aff1-6cb8de6e6200"],
Cell[1306, 45, 524, 10, 25, "Input",ExpressionUUID->"aa00de69-e013-0a4d-b823-333acd447754"],
Cell[CellGroupData[{
Cell[1855, 59, 173, 3, 48, "Subsection",ExpressionUUID->"1c9f7b6d-b0ac-2d42-b6c6-1eb267d2aabe"],
Cell[2031, 64, 770, 13, 72, "Text",ExpressionUUID->"c8a3a6e0-c439-3348-baf0-0a4bf7c7da19"],
Cell[CellGroupData[{
Cell[2826, 81, 166, 3, 40, "Subsubsection",ExpressionUUID->"9f1c1c30-d27d-e04c-9a84-ee360426b892"],
Cell[2995, 86, 10463, 243, 646, "Code",ExpressionUUID->"6693699b-7175-db46-ba1e-f3b998612d93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13495, 334, 160, 3, 40, "Subsubsection",ExpressionUUID->"a66e0c76-80f6-634d-a35f-f9cbc2163739"],
Cell[CellGroupData[{
Cell[13680, 341, 259, 4, 25, "Input",ExpressionUUID->"985fc76f-d1f7-f041-8057-13945d17852f"],
Cell[13942, 347, 1724, 32, 58, "Output",ExpressionUUID->"74a1a4ac-ab8a-0645-889d-69188d7d8c67"]
}, Open  ]],
Cell[15681, 382, 52789, 871, 302, "Text",ExpressionUUID->"ddef1cf3-ae58-4f48-b113-05bbd59984c3"],
Cell[CellGroupData[{
Cell[68495, 1257, 2204, 57, 163, "Input",ExpressionUUID->"d37b91f7-edcb-5f4e-8a32-2b6526556f92"],
Cell[70702, 1316, 1929, 37, 58, "Output",ExpressionUUID->"c8b7866b-9745-3a47-b41e-3f5beaadd6e7"]
}, Open  ]],
Cell[72646, 1356, 548, 10, 31, "Text",ExpressionUUID->"6b9b2105-7e23-6448-9454-37d3c893e2c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73231, 1371, 260, 4, 40, "Subsubsection",ExpressionUUID->"4d33db40-88b3-f54a-91b7-72e340f40a5f"],
Cell[73494, 1377, 7802, 247, 402, "Input",ExpressionUUID->"655eee1d-1c6b-ad4f-840c-90eba3091986"]
}, Closed]],
Cell[CellGroupData[{
Cell[81333, 1629, 204, 3, 33, "Subsubsection",ExpressionUUID->"aa1a102b-71be-8143-91cc-02682edd7b24"],
Cell[CellGroupData[{
Cell[81562, 1636, 1356, 35, 77, "Input",ExpressionUUID->"5f2d0c69-f131-4d40-a905-36a7f0b658a9"],
Cell[82921, 1673, 11874, 283, 188, "Output",ExpressionUUID->"b1674e54-f170-7642-8b96-203ad4bd8733"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[94856, 1963, 193, 3, 48, "Subsection",ExpressionUUID->"a662f355-b1c9-c644-a2a3-3eb54da3d785"],
Cell[95052, 1968, 620, 10, 52, "Text",ExpressionUUID->"53771d7a-aeaf-9843-b25b-034f8356cf13"],
Cell[CellGroupData[{
Cell[95697, 1982, 165, 3, 40, "Subsubsection",ExpressionUUID->"b7d193ef-b3a6-a842-b630-17658764fab9"],
Cell[95865, 1987, 226, 4, 28, "Item",ExpressionUUID->"19d998e7-3a29-d34f-9262-301168cc19c3"],
Cell[96094, 1993, 2126, 50, 95, "Text",ExpressionUUID->"678816f6-3a56-2a46-b459-2320030358a5"],
Cell[98223, 2045, 1190, 27, 54, "Text",ExpressionUUID->"1647efcd-d688-1c42-8032-5340aad37fe2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99450, 2077, 185, 3, 40, "Subsubsection",ExpressionUUID->"8b785a51-71ed-694c-aeb9-12a2b1141b82"],
Cell[99638, 2082, 1997, 61, 52, "Text",ExpressionUUID->"f7a53cbb-a28c-1045-b619-054f13e4af44"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101672, 2148, 162, 3, 40, "Subsubsection",ExpressionUUID->"ddbbd4e7-9663-bb45-8744-ef4dc96baa6e"],
Cell[101837, 2153, 1624, 26, 176, "Text",ExpressionUUID->"6bcabcd1-dda2-1b49-b788-e96eac65faf0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[103510, 2185, 179, 3, 48, "Subsection",ExpressionUUID->"0017b0c0-feb9-7c48-a85a-782006d2132d"],
Cell[103692, 2190, 148, 3, 31, "Text",ExpressionUUID->"2fb752b8-9d8b-5b4b-b917-0b69e2517b16"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[103889, 2199, 161, 3, 59, "Section",ExpressionUUID->"760fe22a-f891-904a-9581-e8b81d56d627"],
Cell[CellGroupData[{
Cell[104075, 2206, 291, 4, 48, "Subsection",ExpressionUUID->"caf4a320-4e6c-0847-9fd4-562c9cb78f6b"],
Cell[CellGroupData[{
Cell[104391, 2214, 161, 3, 40, "Subsubsection",ExpressionUUID->"fa9ae2a6-ccdc-1447-9ee5-400f423a2932"],
Cell[104555, 2219, 307, 7, 31, "Text",ExpressionUUID->"312203f0-125f-9d4d-9432-65cd56234cfb"],
Cell[104865, 2228, 1377, 39, 125, "Code",ExpressionUUID->"1ad0717f-f510-ff41-9de8-1d18b163a836"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106279, 2272, 183, 3, 40, "Subsubsection",ExpressionUUID->"1dd3c670-4610-0947-aee2-7f934b749f29"],
Cell[106465, 2277, 452, 9, 52, "Text",ExpressionUUID->"9e7f7b5f-e4a4-ac48-b966-464e6bfb0085"],
Cell[106920, 2288, 545, 12, 61, "Code",ExpressionUUID->"745baf0d-cbb8-4549-a20a-ef9780d6547d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[107514, 2306, 217, 4, 48, "Subsection",ExpressionUUID->"4173d69e-77aa-7b4d-87c6-8f52e2d69bf7"],
Cell[107734, 2312, 749, 16, 93, "Text",ExpressionUUID->"ca6c2daf-0e3c-e44c-8b65-f51f205dc383"],
Cell[CellGroupData[{
Cell[108508, 2332, 169, 3, 40, "Subsubsection",ExpressionUUID->"432eeefa-7e0f-4d44-9812-fdd59a116d6d"],
Cell[108680, 2337, 2577, 77, 125, "Code",ExpressionUUID->"3df4077d-619e-8a49-ac65-a1329f9cdefe"],
Cell[111260, 2416, 192, 3, 31, "Text",ExpressionUUID->"223dc3a4-b8a9-3648-810c-29ff3b71979a"],
Cell[CellGroupData[{
Cell[111477, 2423, 399, 8, 25, "Input",ExpressionUUID->"b0420c86-00f2-0042-a30b-8b87ce3ff955"],
Cell[111879, 2433, 4108, 94, 179, "Output",ExpressionUUID->"52a26a26-618d-774b-be66-0146c75de17e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[116036, 2533, 168, 3, 40, "Subsubsection",ExpressionUUID->"d7ec9d17-6f07-5e4e-acf7-c80c02888c95"],
Cell[116207, 2538, 241, 4, 31, "Text",ExpressionUUID->"75ebebd8-dc4b-ce45-a002-239b3c47223b"],
Cell[116451, 2544, 1788, 44, 93, "Code",ExpressionUUID->"15949cfe-1040-ac4b-903e-874a9c42dbc5"],
Cell[118242, 2590, 264, 6, 31, "Text",ExpressionUUID->"491cf179-00a2-ef4e-8c6f-a711ba372b0f"],
Cell[118509, 2598, 1188, 30, 61, "Code",ExpressionUUID->"0482a508-42fb-ae4d-aeb7-4ae5621bc399"],
Cell[119700, 2630, 447, 12, 31, "Text",ExpressionUUID->"8b8156cf-1288-c047-a907-b337ba10116d"],
Cell[CellGroupData[{
Cell[120172, 2646, 290, 6, 25, "Input",ExpressionUUID->"4dc028a2-1203-5d49-9314-3c7e4602c86d"],
Cell[120465, 2654, 1361, 29, 55, "Output",ExpressionUUID->"3fa3de64-d4f5-9a4f-a1e5-80c9c2932eb9"]
}, Open  ]],
Cell[121841, 2686, 1018, 22, 93, "Text",ExpressionUUID->"278b03c9-35d6-cb4f-9504-2f78f5f39e9c"],
Cell[122862, 2710, 6040, 137, 298, "Code",ExpressionUUID->"33241036-48db-8e4f-95c5-80dab5283c85"],
Cell[128905, 2849, 242, 6, 31, "Text",ExpressionUUID->"53c45030-4e3e-5048-9456-bb1cf1360a05"],
Cell[CellGroupData[{
Cell[129172, 2859, 736, 14, 25, "Input",ExpressionUUID->"77c92c64-31ba-3147-8414-ef3048737a7d"],
Cell[129911, 2875, 2781, 55, 211, "Output",ExpressionUUID->"8eca6e40-e823-c34d-807b-4f049d9041b4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[132753, 2937, 169, 3, 48, "Subsection",ExpressionUUID->"a403d750-848e-d24b-baa6-dd73b3bae17a"],
Cell[132925, 2942, 898, 18, 72, "Text",ExpressionUUID->"dcfb8020-8575-9941-aa21-66c7c6355a01"],
Cell[133826, 2962, 3381, 83, 188, "Code",ExpressionUUID->"b738eb31-ba60-c248-b7b5-49b17b4398e6"],
Cell[137210, 3047, 459, 9, 52, "Text",ExpressionUUID->"e8bd2fad-dede-4440-8367-ab348434524e"],
Cell[CellGroupData[{
Cell[137694, 3060, 536, 13, 45, "Code",ExpressionUUID->"b5fb6c3d-2753-fa4c-95d1-0a3ff39b6ab1"],
Cell[138233, 3075, 2361, 41, 338, "Output",ExpressionUUID->"5b92f42d-bf00-bd4b-9db4-7d3c5f1ea36c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[140643, 3122, 155, 3, 48, "Subsection",ExpressionUUID->"ff56db50-4a9c-4a4a-9bb5-c299dead2ada"],
Cell[CellGroupData[{
Cell[140823, 3129, 172, 3, 40, "Subsubsection",ExpressionUUID->"669956aa-93eb-da41-bcbb-9dfcb2e8c503"],
Cell[140998, 3134, 1041, 16, 114, "Text",ExpressionUUID->"6087b252-1b7f-4c44-82ba-aeabf68a5e13"],
Cell[142042, 3152, 1419, 35, 77, "Code",ExpressionUUID->"b0dca5ed-b246-3042-aaf1-62d70430b037"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143498, 3192, 172, 3, 40, "Subsubsection",ExpressionUUID->"fd71c754-9b88-6945-8b52-31b5664ff32a"],
Cell[143673, 3197, 449, 8, 52, "Text",ExpressionUUID->"be97e242-09d5-e142-bf63-fd6d4cd9a9ea"],
Cell[144125, 3207, 72252, 1292, 565, "Code",ExpressionUUID->"ac070dbf-4512-154e-bd24-3d3cc13c82d3"]
}, Closed]],
Cell[CellGroupData[{
Cell[216414, 4504, 166, 3, 33, "Subsubsection",ExpressionUUID->"b922571a-7f0a-2a41-9667-1a6d6708b0d9"],
Cell[216583, 4509, 373, 7, 31, "Text",ExpressionUUID->"a9d21cda-9aab-844f-beaf-5e210e0a7b1a"],
Cell[216959, 4518, 7080, 200, 725, "Input",ExpressionUUID->"12bdbfbc-d293-f74c-a5ce-94113cfbae61",
 InitializationCell->True],
Cell[224042, 4720, 1191, 23, 45, "Code",ExpressionUUID->"d7245546-9b37-b247-97a5-bbee64602793"],
Cell[CellGroupData[{
Cell[225258, 4747, 971, 17, 43, "Input",ExpressionUUID->"63495a76-4190-5941-ba11-4a57ff3dd050"],
Cell[226232, 4766, 1102, 24, 58, "Output",ExpressionUUID->"cd403bf3-128a-6e48-bbda-8e93353b92dd"],
Cell[227337, 4792, 1105, 24, 58, "Output",ExpressionUUID->"d0bee36b-d71c-e84a-9b9c-49a2c0482658"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228479, 4821, 433, 7, 25, "Input",ExpressionUUID->"ca5c9ab6-73e3-2142-a06a-1a6d317f06cf"],
Cell[228915, 4830, 12051, 280, 589, "Output",ExpressionUUID->"aa287668-d62b-4d46-93c5-3a37c514119e"]
}, Open  ]],
Cell[240981, 5113, 201, 5, 25, "Input",ExpressionUUID->"1175835a-6786-f743-be16-d829d40a6354"],
Cell[241185, 5120, 71738, 1279, 502, "Code",ExpressionUUID->"784ab28d-40d9-c444-a23c-74039927fad6"],
Cell[CellGroupData[{
Cell[312948, 6403, 1292, 18, 25, "Input",ExpressionUUID->"cb66f29b-c5cf-a34d-890c-00d5d3c4e550"],
Cell[314243, 6423, 33551, 555, 616, "Output",ExpressionUUID->"e44685c2-4c8b-d848-aee4-bfefc8066f29"]
}, Open  ]],
Cell[CellGroupData[{
Cell[347831, 6983, 1573, 42, 115, "Input",ExpressionUUID->"0b6c2436-ca71-7f45-aac0-83637698b399"],
Cell[349407, 7027, 1344, 36, 34, "Output",ExpressionUUID->"001dc8cb-ca93-644c-85eb-a2a0d2efb639"],
Cell[350754, 7065, 536, 9, 28, "Output",ExpressionUUID->"53fe3817-65a2-2a47-8f47-9c20274ec122"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351327, 7079, 209, 4, 45, "Code",ExpressionUUID->"f05387aa-5b06-5840-a1e4-3f4e0bf890ef"],
Cell[351539, 7085, 844, 27, 34, "Output",ExpressionUUID->"b6520aa1-e505-224d-96e5-2bec9534fea7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[352420, 7117, 226, 5, 45, "Code",ExpressionUUID->"ae2744c9-7bbe-de46-95b7-0d3b99ecaa99"],
Cell[352649, 7124, 447, 14, 34, "Output",ExpressionUUID->"9f204bbe-6411-d54b-adf6-46a7221e8bdf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[353133, 7143, 413, 10, 61, "Code",ExpressionUUID->"63f36092-1902-1143-a8f9-c6a92de49ba0"],
Cell[353549, 7155, 194, 3, 28, "Output",ExpressionUUID->"4449b86f-8d94-6e4b-93ea-15b2535264ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[353780, 7163, 205, 4, 45, "Code",ExpressionUUID->"77467196-7e06-d346-b1ac-38b7655f15ae"],
Cell[353988, 7169, 186, 3, 28, "Output",ExpressionUUID->"bb5e124d-efa2-6e43-98c0-aa63f9f9937d"]
}, Open  ]],
Cell[354189, 7175, 209, 4, 45, "Code",ExpressionUUID->"c6ec8a39-a22f-d949-aa90-843d343f6998"],
Cell[CellGroupData[{
Cell[354423, 7183, 1727, 40, 93, "Code",ExpressionUUID->"b88580aa-4401-904b-b1ee-46bd6c886569"],
Cell[356153, 7225, 561, 16, 34, "Output",ExpressionUUID->"8adf3699-dc4b-3746-9fc3-2843f8a9183d"],
Cell[356717, 7243, 664, 19, 49, "Output",ExpressionUUID->"3398d7c2-4170-5946-8c40-213dd93474b3"],
Cell[357384, 7264, 187, 3, 49, "Output",ExpressionUUID->"c7f54a03-ea50-ad4e-9826-903beea5d630"]
}, Open  ]],
Cell[CellGroupData[{
Cell[357608, 7272, 425, 8, 94, "Code",ExpressionUUID->"ec67a21a-50c0-0646-aaed-646e0afbcc77"],
Cell[358036, 7282, 673, 18, 37, "Output",ExpressionUUID->"c015c0b1-7fc9-7f48-a2c4-c35921bd12d0"],
Cell[358712, 7302, 1190, 34, 37, "Output",ExpressionUUID->"f38f1ef5-7d8e-7440-ac9a-3dab82218069"],
Cell[359905, 7338, 381, 7, 32, "Output",ExpressionUUID->"210108e1-564f-674d-9607-67ad5b06110b"],
Cell[360289, 7347, 500, 11, 32, "Output",ExpressionUUID->"f0721945-5c88-9e4d-898e-ded369f53d08"]
}, Open  ]],
Cell[CellGroupData[{
Cell[360826, 7363, 225, 4, 29, "Code",ExpressionUUID->"af01341f-4a97-e041-b1dc-35bca2f0c95a"],
Cell[361054, 7369, 1015, 31, 37, "Output",ExpressionUUID->"5bb0a386-a407-9845-b631-ad8766833630"]
}, Open  ]],
Cell[CellGroupData[{
Cell[362106, 7405, 206, 4, 29, "Code",ExpressionUUID->"aed191b2-4297-d940-9bee-258dac8dc611"],
Cell[362315, 7411, 870, 27, 37, "Output",ExpressionUUID->"0a754e0b-e963-ef41-bdcc-c9831651ce48"]
}, Open  ]],
Cell[CellGroupData[{
Cell[363222, 7443, 227, 5, 29, "Code",ExpressionUUID->"656e4e87-d32d-774d-9dd2-d5c09fc93df4"],
Cell[363452, 7450, 445, 14, 37, "Output",ExpressionUUID->"200d3a73-01ed-3a46-b7a8-ab2e2d244e07"]
}, Open  ]],
Cell[CellGroupData[{
Cell[363934, 7469, 208, 4, 29, "Code",ExpressionUUID->"dd705105-ef16-b242-8b24-747cc8771b35"],
Cell[364145, 7475, 272, 7, 32, "Output",ExpressionUUID->"e3ca1248-bac6-6043-8c24-fe328497c7d0"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

