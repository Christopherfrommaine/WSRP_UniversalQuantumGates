(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[    815868,      15852]
NotebookOptionsPosition[    806471,      15698]
NotebookOutlinePosition[    806941,      15716]
CellTagsIndexPosition[    806898,      15713]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"response", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<https://evetycoon.com/api/v1/market/stats/10000002/44992\>\"", 
    "]"}]}], "\n"}]], "Input",
 CellChangeTimes->{{3.9290370388618584`*^9, 3.9290370516671906`*^9}, {
   3.9290372106709538`*^9, 3.9290372347890415`*^9}, {3.929037278007572*^9, 
   3.9290372860620136`*^9}, 3.9290376871404877`*^9},
 CellLabel->
  "In[1134]:=",ExpressionUUID->"71645a0c-0bd7-e94a-8eca-77bd520e485a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"buyVolume\"\>", "\[Rule]", "552781"}], ",", 
   RowBox[{"\<\"sellVolume\"\>", "\[Rule]", "380183"}], ",", 
   RowBox[{"\<\"buyOrders\"\>", "\[Rule]", "371"}], ",", 
   RowBox[{"\<\"sellOrders\"\>", "\[Rule]", "165"}], ",", 
   RowBox[{"\<\"buyOutliers\"\>", "\[Rule]", "99"}], ",", 
   RowBox[{"\<\"sellOutliers\"\>", "\[Rule]", "8"}], ",", 
   RowBox[{"\<\"buyThreshold\"\>", "\[Rule]", "504100.`"}], ",", 
   RowBox[{"\<\"sellThreshold\"\>", "\[Rule]", "5.197`*^7"}], ",", 
   RowBox[{"\<\"buyAvgFivePercent\"\>", "\[Rule]", "5.030551792756612`*^6"}], 
   ",", 
   RowBox[{"\<\"sellAvgFivePercent\"\>", "\[Rule]", "5.223324635698879`*^6"}],
    ",", 
   RowBox[{"\<\"maxBuy\"\>", "\[Rule]", "5.041`*^6"}], ",", 
   RowBox[{"\<\"minSell\"\>", "\[Rule]", "5.197`*^6"}]}], "}"}]], "Output",
 CellChangeTimes->{3.929037287379799*^9, 3.929037687831173*^9},
 CellLabel->
  "Out[1134]=",ExpressionUUID->"637014ab-fa10-c54e-8fa4-5992566f5034"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetModel", "[", "\"\<NewModel\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9290378184806576`*^9, 3.9290378499409065`*^9}},
 CellLabel->
  "In[1136]:=",ExpressionUUID->"9b66a4ba-dc13-7543-96bd-6a1aff9dcdf6"],

Cell[BoxData[
 TemplateBox[{
  "NetModel", "nonetmodel2", 
   "\"No model with name NewModel could be found. Did you mean Ademxapp Model \
A1 Trained on ADE20K Data?\"", 2, 1136, 65, 17058780316267577655, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9290378510847816`*^9},
 CellLabel->
  "During evaluation of \
In[1136]:=",ExpressionUUID->"b80777eb-3995-b340-acbe-9f7bb92e2b93"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.92903782246134*^9, 3.929037851091276*^9}},
 CellLabel->
  "Out[1136]=",ExpressionUUID->"90d1d5bd-32b2-0249-a390-ef6b9004cc76"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"List", " ", "of", " ", "Key"}], "-", 
     RowBox[{"value", " ", "pairs"}]}], ",", " ", 
    RowBox[{
     RowBox[{"should", " ", "be", " ", "time"}], "->", 
     RowBox[{"stock", " ", "value"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"trainingData", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "->", "1.9"}], ",", 
      RowBox[{"2", "->", "4.1"}], ",", 
      RowBox[{"3", "->", "6.0"}], ",", 
      RowBox[{"4", "->", "8.1"}]}], "}"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"net", "=", 
    RowBox[{"NetChain", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ElementwiseLayer", "[", "\"\<ELU\>\"", "]"}], ",", " ", 
       RowBox[{"ElementwiseLayer", "[", "\"\<ELU\>\"", "]"}], ",", " ", 
       RowBox[{"ElementwiseLayer", "[", "\"\<ELU\>\"", "]"}], ",", " ", 
       RowBox[{"LinearLayer", "[", "]"}]}], "}"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"net", "=", " ", 
    RowBox[{"NetTrain", "[", 
     RowBox[{"net", ",", " ", "trainingData"}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Call", " ", "the", " ", "net", " ", "with", " ", "a", " ", "specific", 
      " ", "key"}], ",", " ", 
     RowBox[{"predicts", " ", "value"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"net", "[", "2", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.92903788808506*^9, 3.92903788808506*^9}, {
  3.9290379725708237`*^9, 3.9290379736510544`*^9}, {3.929038005931143*^9, 
  3.929038128544815*^9}, {3.929038169759737*^9, 3.9290382924297256`*^9}, {
  3.929038333404396*^9, 3.9290383375967426`*^9}, {3.929038376180397*^9, 
  3.9290384196394863`*^9}, {3.929038505443571*^9, 3.929038601515682*^9}},
 CellLabel->
  "In[1235]:=",ExpressionUUID->"dde69e13-0472-4d4d-8252-9a03132e6a06"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[Rule]", "1.9`"}], ",", 
   RowBox[{"2", "\[Rule]", "4.1`"}], ",", 
   RowBox[{"3", "\[Rule]", "6.`"}], ",", 
   RowBox[{"4", "\[Rule]", "8.1`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.929037888740511*^9, {3.929037974134695*^9, 3.929038013196232*^9}, {
   3.9290380491425877`*^9, 3.929038131431114*^9}, {3.9290381766813583`*^9, 
   3.9290384199913254`*^9}, 3.929038607075798*^9, 3.929038714281496*^9},
 CellLabel->
  "Out[1235]=",ExpressionUUID->"55192d31-f986-4945-b393-d0f9fce76f3d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NetChain",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                9.771662886600941, {0., 9.771662886600941}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            OverlayBox[{
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 GrayLevel[0.6], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{
                   Style[
                   "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                   10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 GrayLevel[0.6], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{
                   Style[
                   "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                   10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.84, 0.84, 0.84], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   GrayLevel[0.6], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.84, 0.84, 0.84], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   GrayLevel[0.6], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.84, 0.84, 0.84], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   GrayLevel[0.6], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   GrayLevel[0.6], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              StyleBox[
              "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
               FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
               RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
               FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
               RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
             Alignment -> {Center, 
               Scaled[0.0001]}], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"array\"", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"array\"", "SummaryItem"], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            OverlayBox[{
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 GrayLevel[0.6], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{
                   Style[
                   "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                   10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 GrayLevel[0.6], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{
                   Style[
                   "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                   10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.84, 0.84, 0.84], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   GrayLevel[0.6], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.84, 0.84, 0.84], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   GrayLevel[0.6], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.84, 0.84, 0.84], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   GrayLevel[0.6], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   GrayLevel[0.6], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              StyleBox[
              "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
               FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
               RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
               FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
               RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
             Alignment -> {Center, 
               Scaled[0.0001]}], 
            GridBox[{{
               TagBox[
                
                DynamicModuleBox[{
                 NeuralNetworks`Private`NetChain`assoc3 = <|
                   "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>|>, 
                    "2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>|>, 
                    "3" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>|>, 
                    "4" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[2, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    "$OutputSize" -> NeuralNetworks`SizeT, "$InputSize" -> 
                    NeuralNetworks`SizeT, "$InputDimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>|>, 
                  NeuralNetworks`Private`NetChain`opart, 
                  NeuralNetworks`Private`NetChain`part, 
                  NeuralNetworks`Private`NetChain`selected = Null}, 
                 DynamicBox[
                  GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   GridFrameMargins -> {{0, 0}, {0, 0}}], 
                  TrackedSymbols :> {
                   NeuralNetworks`Private`NetChain`selected}], 
                 Initialization :> {NetChain}], "SummaryItem"]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  NetChain[<|
   "Type" -> "Chain", 
    "Nodes" -> <|
     "1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>|>, 
      "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>|>, 
      "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>|>, 
      "4" -> <|"Type" -> "Linear", 
        "Arrays" -> <|"Weights" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[2, NeuralNetworks`SizeT], 
            NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
            NeuralNetworks`TensorT[
             NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
             NeuralNetworks`RealT]]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> 
          NeuralNetworks`ListT[NeuralNetworks`NaturalT, NeuralNetworks`SizeT],
           "$OutputSize" -> NeuralNetworks`SizeT, "$InputSize" -> 
          NeuralNetworks`SizeT, "$InputDimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`RealT]|>|>|>, 
    "Edges" -> {
     NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Inputs", "Input"], 
      NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Outputs", "Output"] -> 
      NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"]}, 
    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
        NeuralNetworks`ListT[NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
        NeuralNetworks`AtomT]|>, 
    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
        NeuralNetworks`ListT[NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
        NeuralNetworks`RealT]|>|>, <|
   "Version" -> "14.0.2", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.929037888740511*^9, {3.929037974134695*^9, 3.929038013196232*^9}, {
   3.9290380491425877`*^9, 3.929038131431114*^9}, {3.9290381766813583`*^9, 
   3.9290384199913254`*^9}, 3.929038607075798*^9, 3.9290387143164215`*^9},
 CellLabel->
  "Out[1236]=",ExpressionUUID->"160e10f3-e582-b54d-8cdd-c0822824da45"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NetChain",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                9.771662886600941, {0., 9.771662886600941}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.014925373134328358`], {
               RGBColor[0.729, 0.729, 0.729], 
               Thickness[0.018686567164179105`], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                CurveClosed -> {0}]}, {
               RGBColor[0.729, 0.729, 0.729], 
               Thickness[0.018686567164179105`], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                CurveClosed -> {0}]}, {
               FaceForm[{
                 RGBColor[0.631, 0.8160000000000001, 0.498], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
               FaceForm[{
                 RGBColor[0.40800000000000003`, 0.627, 0.196], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {15., 
                79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 103.}, {23.,
                 103.}}}]}, {
               FaceForm[{
                 RGBColor[0.38, 0.753, 0.89], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
               FaceForm[{
                 RGBColor[0.24300000000000002`, 0.608, 0.71], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {29., 
                79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 103.}, {37.,
                 103.}}}]}, {
               FaceForm[{
                 RGBColor[0.584, 0.51, 0.8390000000000001], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
               FaceForm[{
                 RGBColor[0.4, 0.396, 0.659], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {43., 
                79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 103.}, {51.,
                 103.}}}]}, {
               FaceForm[{
                 RGBColor[0.549, 0.549, 0.549], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25., 
                95.}, {25., 88.}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39., 
                95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
             ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"real\"", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"real\"", "SummaryItem"], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.014925373134328358`], {
               RGBColor[0.729, 0.729, 0.729], 
               Thickness[0.018686567164179105`], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                CurveClosed -> {0}]}, {
               RGBColor[0.729, 0.729, 0.729], 
               Thickness[0.018686567164179105`], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                CurveClosed -> {0}]}, {
               FaceForm[{
                 RGBColor[0.631, 0.8160000000000001, 0.498], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
               FaceForm[{
                 RGBColor[0.40800000000000003`, 0.627, 0.196], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {15., 
                79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 103.}, {23.,
                 103.}}}]}, {
               FaceForm[{
                 RGBColor[0.38, 0.753, 0.89], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
               FaceForm[{
                 RGBColor[0.24300000000000002`, 0.608, 0.71], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {29., 
                79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 103.}, {37.,
                 103.}}}]}, {
               FaceForm[{
                 RGBColor[0.584, 0.51, 0.8390000000000001], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
               FaceForm[{
                 RGBColor[0.4, 0.396, 0.659], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {43., 
                79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 103.}, {51.,
                 103.}}}]}, {
               FaceForm[{
                 RGBColor[0.549, 0.549, 0.549], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25., 
                95.}, {25., 88.}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39., 
                95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
             ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
            GridBox[{{
               TagBox[
                
                DynamicModuleBox[{
                 NeuralNetworks`Private`NetChain`assoc3 = <|
                   "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                    "3" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                    "4" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {}, "$OutputSize" -> 1, 
                    "$InputSize" -> 1, "$InputDimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                  NeuralNetworks`Private`NetChain`opart, 
                  NeuralNetworks`Private`NetChain`part, 
                  NeuralNetworks`Private`NetChain`selected = Null}, 
                 DynamicBox[
                  GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   GridFrameMargins -> {{0, 0}, {0, 0}}], 
                  TrackedSymbols :> {
                   NeuralNetworks`Private`NetChain`selected}], 
                 Initialization :> {NetChain}], "SummaryItem"]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  NetChain[<|
   "Type" -> "Chain", 
    "Nodes" -> <|
     "1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> {}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
      "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> {}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
      "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> {}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
      "4" -> <|"Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> RawArray["Real32",{{2.047889232635498}}], "Biases" -> 
          RawArray["Real32",{-0.09396619349718094}]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {}, "$OutputSize" -> 1, "$InputSize" -> 1, 
          "$InputDimensions" -> {}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>|>, 
    "Edges" -> {
     NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Inputs", "Input"], 
      NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Outputs", "Output"] -> 
      NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"]}, 
    "Inputs" -> <|
     "Input" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
    "Outputs" -> <|
     "Output" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, <|
   "Version" -> "14.0.2", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.929037888740511*^9, {3.929037974134695*^9, 3.929038013196232*^9}, {
   3.9290380491425877`*^9, 3.929038131431114*^9}, {3.9290381766813583`*^9, 
   3.9290384199913254`*^9}, 3.929038607075798*^9, 3.9290387261077385`*^9},
 CellLabel->
  "Out[1237]=",ExpressionUUID->"8077e0f9-0396-684a-a934-bcfd4a47e211"],

Cell[BoxData["4.00181245803833`"], "Output",
 CellChangeTimes->{
  3.929037888740511*^9, {3.929037974134695*^9, 3.929038013196232*^9}, {
   3.9290380491425877`*^9, 3.929038131431114*^9}, {3.9290381766813583`*^9, 
   3.9290384199913254`*^9}, 3.929038607075798*^9, 3.929038726140293*^9},
 CellLabel->
  "Out[1238]=",ExpressionUUID->"b04255d9-9371-5249-9d98-a308a60ae993"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.92903798261059*^9, 
  3.929038004810587*^9}},ExpressionUUID->"8fb93cd3-564d-2440-ac37-\
2d5cdfcdfa11"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NetChain",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                10.869016023673117`, {0., 10.869016023673117`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.014925373134328358`], {
               RGBColor[0.729, 0.729, 0.729], 
               Thickness[0.018686567164179105`], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                CurveClosed -> {0}]}, {
               RGBColor[0.729, 0.729, 0.729], 
               Thickness[0.018686567164179105`], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                CurveClosed -> {0}]}, {
               FaceForm[{
                 RGBColor[0.631, 0.8160000000000001, 0.498], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
               FaceForm[{
                 RGBColor[0.40800000000000003`, 0.627, 0.196], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {15., 
                79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 103.}, {23.,
                 103.}}}]}, {
               FaceForm[{
                 RGBColor[0.38, 0.753, 0.89], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
               FaceForm[{
                 RGBColor[0.24300000000000002`, 0.608, 0.71], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {29., 
                79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 103.}, {37.,
                 103.}}}]}, {
               FaceForm[{
                 RGBColor[0.584, 0.51, 0.8390000000000001], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
               FaceForm[{
                 RGBColor[0.4, 0.396, 0.659], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {43., 
                79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 103.}, {51.,
                 103.}}}]}, {
               FaceForm[{
                 RGBColor[0.549, 0.549, 0.549], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25., 
                95.}, {25., 88.}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39., 
                95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
             ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"array\"", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"real\"", "SummaryItem"], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {
                10.869016023673117`, {0., 10.869016023673117`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.014925373134328358`], {
               RGBColor[0.729, 0.729, 0.729], 
               Thickness[0.018686567164179105`], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                CurveClosed -> {0}]}, {
               RGBColor[0.729, 0.729, 0.729], 
               Thickness[0.018686567164179105`], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                CurveClosed -> {0}]}, {
               FaceForm[{
                 RGBColor[0.631, 0.8160000000000001, 0.498], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
               FaceForm[{
                 RGBColor[0.40800000000000003`, 0.627, 0.196], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {15., 
                79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 103.}, {23.,
                 103.}}}]}, {
               FaceForm[{
                 RGBColor[0.38, 0.753, 0.89], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
               FaceForm[{
                 RGBColor[0.24300000000000002`, 0.608, 0.71], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {29., 
                79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 103.}, {37.,
                 103.}}}]}, {
               FaceForm[{
                 RGBColor[0.584, 0.51, 0.8390000000000001], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
               FaceForm[{
                 RGBColor[0.4, 0.396, 0.659], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {43., 
                79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 103.}, {51.,
                 103.}}}]}, {
               FaceForm[{
                 RGBColor[0.549, 0.549, 0.549], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25., 
                95.}, {25., 88.}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39., 
                95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
             ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
            GridBox[{{
               TagBox[
                
                DynamicModuleBox[{
                 NeuralNetworks`Private`NetChain`assoc3 = <|
                   "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>|>, 
                    "2" -> <|
                    "Type" -> "Summation", "Arrays" -> <||>, 
                    "Parameters" -> <||>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`AtomT]|>|>, 
                  NeuralNetworks`Private`NetChain`opart, 
                  NeuralNetworks`Private`NetChain`part, 
                  NeuralNetworks`Private`NetChain`selected = Null}, 
                 DynamicBox[
                  GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SummationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   GridFrameMargins -> {{0, 0}, {0, 0}}], 
                  ImageSizeCache -> {
                   161.963793464303, {24.207481213063005`, 
                    28.856895275563005`}}, 
                  TrackedSymbols :> {
                   NeuralNetworks`Private`NetChain`selected}], 
                 Initialization :> {NetChain}], "SummaryItem"]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  NetChain[<|
   "Type" -> "Chain", 
    "Nodes" -> <|
     "1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>|>, 
      "2" -> <|"Type" -> "Summation", "Arrays" -> <||>, "Parameters" -> <||>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{}, NeuralNetworks`AtomT]|>|>|>, 
    "Edges" -> {
     NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Inputs", "Input"], 
      NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Outputs", "Output"] -> 
      NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"]}, 
    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
        NeuralNetworks`ListT[NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
        NeuralNetworks`AtomT]|>, 
    "Outputs" -> <|
     "Output" -> NeuralNetworks`TensorT[{}, NeuralNetworks`AtomT]|>|>, <|
   "Version" -> "14.0.2", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.9290379909417324`*^9, 3.9290379976869583`*^9}},
 CellLabel->
  "Out[1145]=",ExpressionUUID->"da79517f-bc9c-1741-8db2-6d43264041aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.92903792801075*^9, 3.929037933414255*^9}, 
   3.9290380079004116`*^9},ExpressionUUID->"e306186d-378d-d748-b0c3-\
737468c9a69d"],

Cell[BoxData["2.0565249919891357`"], "Output",
 CellChangeTimes->{
  3.929037933810444*^9, {3.9290379770009212`*^9, 3.929037999101591*^9}},
 CellLabel->
  "Out[1146]=",ExpressionUUID->"acba38b0-1ea9-cc40-bfbb-a95708e7b9c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"net", "[", "1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"net1", "[", "1", "]"}]}], "Input",
 CellChangeTimes->{{3.9290384086210766`*^9, 3.9290384121209965`*^9}},
 CellLabel->
  "In[1226]:=",ExpressionUUID->"5f8b19f0-e757-3642-b265-1f6628aa4b28"],

Cell[BoxData[
 TemplateBox[{
  "NetChain", "nfspec", 
   "\"Cannot evaluate net: input of first layer is not fully specified.\"", 2,
    1226, 78, 17058780316267577655, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9290384126909637`*^9},
 CellLabel->
  "During evaluation of \
In[1226]:=",ExpressionUUID->"4f5c7b7b-3c87-0842-91e4-068a23468ece"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.929038412706604*^9},
 CellLabel->
  "Out[1226]=",ExpressionUUID->"faa35c6a-ee14-eb4e-a116-39fd3e908cf5"],

Cell[BoxData["1.9506986141204834`"], "Output",
 CellChangeTimes->{3.9290384127112236`*^9},
 CellLabel->
  "Out[1227]=",ExpressionUUID->"0999585f-39f5-d646-87cf-e05c111d0463"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\n"], "Input",
 CellChangeTimes->{{3.9290387731597557`*^9, 
  3.9290387807776985`*^9}},ExpressionUUID->"c99cb1b7-bff4-8548-aef9-\
1f64dc77bda0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"buyVolume\"\>", "\[Rule]", "543807"}], ",", 
   RowBox[{"\<\"sellVolume\"\>", "\[Rule]", "379311"}], ",", 
   RowBox[{"\<\"buyOrders\"\>", "\[Rule]", "363"}], ",", 
   RowBox[{"\<\"sellOrders\"\>", "\[Rule]", "165"}], ",", 
   RowBox[{"\<\"buyOutliers\"\>", "\[Rule]", "99"}], ",", 
   RowBox[{"\<\"sellOutliers\"\>", "\[Rule]", "8"}], ",", 
   RowBox[{"\<\"buyThreshold\"\>", "\[Rule]", "503200.`"}], ",", 
   RowBox[{"\<\"sellThreshold\"\>", "\[Rule]", "5.197`*^7"}], ",", 
   RowBox[{"\<\"buyAvgFivePercent\"\>", "\[Rule]", "5.025978447958808`*^6"}], 
   ",", 
   RowBox[{"\<\"sellAvgFivePercent\"\>", "\[Rule]", "5.225066490904298`*^6"}],
    ",", 
   RowBox[{"\<\"maxBuy\"\>", "\[Rule]", "5.032`*^6"}], ",", 
   RowBox[{"\<\"minSell\"\>", "\[Rule]", "5.197`*^6"}]}], "}"}]], "Output",
 CellChangeTimes->{3.929038775449663*^9},
 CellLabel->
  "Out[1239]=",ExpressionUUID->"1e875d3c-e594-0245-b488-9c85653da877"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  "\"\<https://evetycoon.com/api/v1/market/history/10000002/44992\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.9290387960956497`*^9, 3.929038798808466*^9}},
 CellLabel->
  "In[1240]:=",ExpressionUUID->"a59cfd4e-c5c7-f247-9276-13406dc166fb"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"\"date\"", "\[Rule]", "1572566400000"}], ",", 
             RowBox[{"\"regionId\"", "\[Rule]", "10000002"}], ",", 
             RowBox[{"\"typeId\"", "\[Rule]", "44992"}], ",", 
             RowBox[{"\"average\"", "\[Rule]", "3.47012`*^6"}], ",", 
             RowBox[{"\"highest\"", "\[Rule]", "3.59011217`*^6"}], ",", 
             RowBox[{"\"lowest\"", "\[Rule]", "3.461404`*^6"}], ",", 
             RowBox[{"\"orderCount\"", "\[Rule]", "2168"}], ",", 
             RowBox[{"\"volume\"", "\[Rule]", "1153189"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"\"date\"", "\[Rule]", "1572652800000"}], ",", 
             RowBox[{"\"regionId\"", "\[Rule]", "10000002"}], ",", 
             RowBox[{"\"typeId\"", "\[Rule]", "44992"}], ",", 
             RowBox[{"\"average\"", "\[Rule]", "3.45600099`*^6"}], ",", 
             RowBox[{"\"highest\"", "\[Rule]", "3.57878389`*^6"}], ",", 
             RowBox[{"\"lowest\"", "\[Rule]", "3.449501`*^6"}], ",", 
             RowBox[{"\"orderCount\"", "\[Rule]", "2319"}], ",", 
             RowBox[{"\"volume\"", "\[Rule]", "1318155"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"\"date\"", "\[Rule]", "1572739200000"}], ",", 
             RowBox[{"\"regionId\"", "\[Rule]", "10000002"}], ",", 
             RowBox[{"\"typeId\"", "\[Rule]", "44992"}], ",", 
             RowBox[{"\"average\"", "\[Rule]", "3.44944399`*^6"}], ",", 
             RowBox[{"\"highest\"", "\[Rule]", "3.54999994`*^6"}], ",", 
             RowBox[{"\"lowest\"", "\[Rule]", "3.44207401`*^6"}], ",", 
             RowBox[{"\"orderCount\"", "\[Rule]", "2150"}], ",", 
             RowBox[{"\"volume\"", "\[Rule]", "1143092"}]}], "}"}], ",", 
         TemplateBox[{"1699"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"\"date\"", "\[Rule]", "1719792000000"}], ",", 
             RowBox[{"\"regionId\"", "\[Rule]", "10000002"}], ",", 
             RowBox[{"\"typeId\"", "\[Rule]", "44992"}], ",", 
             RowBox[{"\"average\"", "\[Rule]", "5.2`*^6"}], ",", 
             RowBox[{"\"highest\"", "\[Rule]", "5.325`*^6"}], ",", 
             RowBox[{"\"lowest\"", "\[Rule]", "5.1`*^6"}], ",", 
             RowBox[{"\"orderCount\"", "\[Rule]", "1966"}], ",", 
             RowBox[{"\"volume\"", "\[Rule]", "1035302"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"\"date\"", "\[Rule]", "1719878400000"}], ",", 
             RowBox[{"\"regionId\"", "\[Rule]", "10000002"}], ",", 
             RowBox[{"\"typeId\"", "\[Rule]", "44992"}], ",", 
             RowBox[{"\"average\"", "\[Rule]", "5.061`*^6"}], ",", 
             RowBox[{"\"highest\"", "\[Rule]", "5.287`*^6"}], ",", 
             RowBox[{"\"lowest\"", "\[Rule]", "5.05`*^6"}], ",", 
             RowBox[{"\"orderCount\"", "\[Rule]", "1415"}], ",", 
             RowBox[{"\"volume\"", "\[Rule]", "666152"}]}], "}"}]}], "}"}], 
     Short[#, 8]& ], "line" -> 1240, "sessionID" -> 17058780316267577655, 
   "byteCount" -> 1636032, "size" -> 8, "stored" -> False, "expr" -> 
   Missing["NotStored"], "wrap" -> OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.929038799353403*^9},
 CellLabel->
  "Out[1240]=",ExpressionUUID->"83db894d-036b-0b4d-a183-c5d5ea94842c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "=", 
  RowBox[{
  "Import", "[", 
   "\"\<https://evetycoon.com/api/v1/market/history/10000002/44992\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.929038806970436*^9, 3.929038806970436*^9}},
 CellLabel->
  "In[1241]:=",ExpressionUUID->"26c74d04-02f5-e240-bec5-b848622ae886"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"\"date\"", "\[Rule]", "1572566400000"}], ",", 
             RowBox[{"\"regionId\"", "\[Rule]", "10000002"}], ",", 
             RowBox[{"\"typeId\"", "\[Rule]", "44992"}], ",", 
             RowBox[{"\"average\"", "\[Rule]", "3.47012`*^6"}], ",", 
             RowBox[{"\"highest\"", "\[Rule]", "3.59011217`*^6"}], ",", 
             RowBox[{"\"lowest\"", "\[Rule]", "3.461404`*^6"}], ",", 
             RowBox[{"\"orderCount\"", "\[Rule]", "2168"}], ",", 
             RowBox[{"\"volume\"", "\[Rule]", "1153189"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"\"date\"", "\[Rule]", "1572652800000"}], ",", 
             RowBox[{"\"regionId\"", "\[Rule]", "10000002"}], ",", 
             RowBox[{"\"typeId\"", "\[Rule]", "44992"}], ",", 
             RowBox[{"\"average\"", "\[Rule]", "3.45600099`*^6"}], ",", 
             RowBox[{"\"highest\"", "\[Rule]", "3.57878389`*^6"}], ",", 
             RowBox[{"\"lowest\"", "\[Rule]", "3.449501`*^6"}], ",", 
             RowBox[{"\"orderCount\"", "\[Rule]", "2319"}], ",", 
             RowBox[{"\"volume\"", "\[Rule]", "1318155"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"\"date\"", "\[Rule]", "1572739200000"}], ",", 
             RowBox[{"\"regionId\"", "\[Rule]", "10000002"}], ",", 
             RowBox[{"\"typeId\"", "\[Rule]", "44992"}], ",", 
             RowBox[{"\"average\"", "\[Rule]", "3.44944399`*^6"}], ",", 
             RowBox[{"\"highest\"", "\[Rule]", "3.54999994`*^6"}], ",", 
             RowBox[{"\"lowest\"", "\[Rule]", "3.44207401`*^6"}], ",", 
             RowBox[{"\"orderCount\"", "\[Rule]", "2150"}], ",", 
             RowBox[{"\"volume\"", "\[Rule]", "1143092"}]}], "}"}], ",", 
         TemplateBox[{"1699"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"\"date\"", "\[Rule]", "1719792000000"}], ",", 
             RowBox[{"\"regionId\"", "\[Rule]", "10000002"}], ",", 
             RowBox[{"\"typeId\"", "\[Rule]", "44992"}], ",", 
             RowBox[{"\"average\"", "\[Rule]", "5.2`*^6"}], ",", 
             RowBox[{"\"highest\"", "\[Rule]", "5.325`*^6"}], ",", 
             RowBox[{"\"lowest\"", "\[Rule]", "5.1`*^6"}], ",", 
             RowBox[{"\"orderCount\"", "\[Rule]", "1966"}], ",", 
             RowBox[{"\"volume\"", "\[Rule]", "1035302"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"\"date\"", "\[Rule]", "1719878400000"}], ",", 
             RowBox[{"\"regionId\"", "\[Rule]", "10000002"}], ",", 
             RowBox[{"\"typeId\"", "\[Rule]", "44992"}], ",", 
             RowBox[{"\"average\"", "\[Rule]", "5.061`*^6"}], ",", 
             RowBox[{"\"highest\"", "\[Rule]", "5.287`*^6"}], ",", 
             RowBox[{"\"lowest\"", "\[Rule]", "5.05`*^6"}], ",", 
             RowBox[{"\"orderCount\"", "\[Rule]", "1415"}], ",", 
             RowBox[{"\"volume\"", "\[Rule]", "666152"}]}], "}"}]}], "}"}], 
     Short[#, 8]& ], "line" -> 1241, "sessionID" -> 17058780316267577655, 
   "byteCount" -> 1636032, "size" -> 8, "stored" -> False, "expr" -> 
   Missing["NotStored"], "wrap" -> OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.929038808249935*^9},
 CellLabel->
  "Out[1241]=",ExpressionUUID->"6de77fc4-66e1-ca40-9535-5288a1f27fb4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"C1", "=", 
  RowBox[{"c", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.929038821828371*^9, 3.929038825265047*^9}},
 CellLabel->
  "In[1242]:=",ExpressionUUID->"d6910605-be68-4344-9a00-66e54675bb4e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"date\"\>", "\[Rule]", "1572566400000"}], ",", 
   RowBox[{"\<\"regionId\"\>", "\[Rule]", "10000002"}], ",", 
   RowBox[{"\<\"typeId\"\>", "\[Rule]", "44992"}], ",", 
   RowBox[{"\<\"average\"\>", "\[Rule]", "3.47012`*^6"}], ",", 
   RowBox[{"\<\"highest\"\>", "\[Rule]", "3.59011217`*^6"}], ",", 
   RowBox[{"\<\"lowest\"\>", "\[Rule]", "3.461404`*^6"}], ",", 
   RowBox[{"\<\"orderCount\"\>", "\[Rule]", "2168"}], ",", 
   RowBox[{"\<\"volume\"\>", "\[Rule]", "1153189"}]}], "}"}]], "Output",
 CellChangeTimes->{3.929038825767769*^9},
 CellLabel->
  "Out[1242]=",ExpressionUUID->"07dab847-1f16-d146-9c5b-14a4f8a8111f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"{", "}"}]}]], "Input",
 CellChangeTimes->{{3.929038829056761*^9, 3.9290388379857597`*^9}},
 CellLabel->
  "In[1243]:=",ExpressionUUID->"56273f47-0683-4b4b-9882-ce149c226d8a"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.9290388383595924`*^9},
 CellLabel->
  "Out[1243]=",ExpressionUUID->"84d2c7e7-55bb-1f4e-b178-2acda6332ef0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Values", "[", 
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], "->", 
     RowBox[{"Values", "[", 
      RowBox[{"#", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "]"}]}], "&"}], "/@", "c"}]}]], "Input",
 CellChangeTimes->{{3.9290388425188217`*^9, 3.92903904299078*^9}},
 CellLabel->
  "In[1260]:=",ExpressionUUID->"f25ac232-bfd4-0e42-9f02-e4982ed57c27"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1572566400000", "\[Rule]", "3.47012`*^6"}], ",", 
   RowBox[{"1572652800000", "\[Rule]", "3.45600099`*^6"}], ",", 
   RowBox[{"1572739200000", "\[Rule]", "3.44944399`*^6"}], ",", 
   RowBox[{"1572825600000", "\[Rule]", "3.47000073`*^6"}], ",", 
   RowBox[{"1572912000000", "\[Rule]", "3.457305`*^6"}], ",", 
   RowBox[{"1572998400000", "\[Rule]", "3.460001`*^6"}], ",", 
   RowBox[{"1573084800000", "\[Rule]", "3.465`*^6"}], ",", 
   RowBox[{"1573171200000", "\[Rule]", "3.46033`*^6"}], ",", 
   RowBox[{"1573257600000", "\[Rule]", "3.45030803`*^6"}], ",", 
   RowBox[{"1573344000000", "\[Rule]", "3.43166999`*^6"}], ",", 
   RowBox[{"1573430400000", "\[Rule]", "3.44089025`*^6"}], ",", 
   RowBox[{"1573516800000", "\[Rule]", "3.54284998`*^6"}], ",", 
   RowBox[{"1573603200000", "\[Rule]", "3.437804`*^6"}], ",", 
   RowBox[{"1573689600000", "\[Rule]", "3.43273722`*^6"}], ",", 
   RowBox[{"1573776000000", "\[Rule]", "3.43030301`*^6"}], ",", 
   RowBox[{"1573862400000", "\[Rule]", "3.41201409`*^6"}], ",", 
   RowBox[{"1573948800000", "\[Rule]", "3.404005`*^6"}], ",", 
   RowBox[{"1574035200000", "\[Rule]", "3.40369701`*^6"}], ",", 
   RowBox[{"1574121600000", "\[Rule]", "3.402331`*^6"}], ",", 
   RowBox[{"1574208000000", "\[Rule]", "3.382001`*^6"}], ",", 
   RowBox[{"1574294400000", "\[Rule]", "3.392`*^6"}], ",", 
   RowBox[{"1574380800000", "\[Rule]", "3.37703`*^6"}], ",", 
   RowBox[{"1574467200000", "\[Rule]", "3.36062`*^6"}], ",", 
   RowBox[{"1574553600000", "\[Rule]", "3.34620017`*^6"}], ",", 
   RowBox[{"1574640000000", "\[Rule]", "3.37499999`*^6"}], ",", 
   RowBox[{"1574726400000", "\[Rule]", "3.35000001`*^6"}], ",", 
   RowBox[{"1574812800000", "\[Rule]", "3.44697101`*^6"}], ",", 
   RowBox[{"1574899200000", "\[Rule]", "3.29999999`*^6"}], ",", 
   RowBox[{"1574985600000", "\[Rule]", "3.21315`*^6"}], ",", 
   RowBox[{"1575072000000", "\[Rule]", "3.252`*^6"}], ",", 
   RowBox[{"1575158400000", "\[Rule]", "3.2935`*^6"}], ",", 
   RowBox[{"1575244800000", "\[Rule]", "3.27519722`*^6"}], ",", 
   RowBox[{"1575331200000", "\[Rule]", "3.305901`*^6"}], ",", 
   RowBox[{"1575417600000", "\[Rule]", "3.30730306`*^6"}], ",", 
   RowBox[{"1575504000000", "\[Rule]", "3.301015`*^6"}], ",", 
   RowBox[{"1575590400000", "\[Rule]", "3.28301608`*^6"}], ",", 
   RowBox[{"1575676800000", "\[Rule]", "3.27840041`*^6"}], ",", 
   RowBox[{"1575763200000", "\[Rule]", "3.27207207`*^6"}], ",", 
   RowBox[{"1575849600000", "\[Rule]", "3.31001001`*^6"}], ",", 
   RowBox[{"1575936000000", "\[Rule]", "3.36370037`*^6"}], ",", 
   RowBox[{"1576022400000", "\[Rule]", "3.36020206`*^6"}], ",", 
   RowBox[{"1576108800000", "\[Rule]", "3.31700004`*^6"}], ",", 
   RowBox[{"1576195200000", "\[Rule]", "3.307606`*^6"}], ",", 
   RowBox[{"1576281600000", "\[Rule]", "3.29101`*^6"}], ",", 
   RowBox[{"1576368000000", "\[Rule]", "3.26815003`*^6"}], ",", 
   RowBox[{"1576454400000", "\[Rule]", "3.25`*^6"}], ",", 
   RowBox[{"1576540800000", "\[Rule]", "3.243101`*^6"}], ",", 
   RowBox[{"1576627200000", "\[Rule]", "3.24009`*^6"}], ",", 
   RowBox[{"1576713600000", "\[Rule]", "3.21016`*^6"}], ",", 
   RowBox[{"1576800000000", "\[Rule]", "3.20460205`*^6"}], ",", 
   RowBox[{"1576886400000", "\[Rule]", "3.171`*^6"}], ",", 
   RowBox[{"1576972800000", "\[Rule]", "3.1669`*^6"}], ",", 
   RowBox[{"1577059200000", "\[Rule]", "3.18`*^6"}], ",", 
   RowBox[{"1577145600000", "\[Rule]", "3.2102`*^6"}], ",", 
   RowBox[{"1577232000000", "\[Rule]", "3.399978`*^6"}], ",", 
   RowBox[{"1577318400000", "\[Rule]", "3.41126995`*^6"}], ",", 
   RowBox[{"1577404800000", "\[Rule]", "3.371304`*^6"}], ",", 
   RowBox[{"1577491200000", "\[Rule]", "3.28`*^6"}], ",", 
   RowBox[{"1577577600000", "\[Rule]", "3.252091`*^6"}], ",", 
   RowBox[{"1577664000000", "\[Rule]", "3.25`*^6"}], ",", 
   RowBox[{"1577750400000", "\[Rule]", "3.230061`*^6"}], ",", 
   RowBox[{"1577836800000", "\[Rule]", "3.2101`*^6"}], ",", 
   RowBox[{"1577923200000", "\[Rule]", "3.18622203`*^6"}], ",", 
   RowBox[{"1578009600000", "\[Rule]", "3.200012`*^6"}], ",", 
   RowBox[{"1578096000000", "\[Rule]", "3.19930599`*^6"}], ",", 
   RowBox[{"1578182400000", "\[Rule]", "3.192202`*^6"}], ",", 
   RowBox[{"1578268800000", "\[Rule]", "3.18540005`*^6"}], ",", 
   RowBox[{"1578355200000", "\[Rule]", "3.20000001`*^6"}], ",", 
   RowBox[{"1578441600000", "\[Rule]", "3.20500003`*^6"}], ",", 
   RowBox[{"1578528000000", "\[Rule]", "3.20120802`*^6"}], ",", 
   RowBox[{"1578614400000", "\[Rule]", "3.20199001`*^6"}], ",", 
   RowBox[{"1578700800000", "\[Rule]", "3.19170702`*^6"}], ",", 
   RowBox[{"1578787200000", "\[Rule]", "3.20000004`*^6"}], ",", 
   RowBox[{"1578873600000", "\[Rule]", "3.19500102`*^6"}], ",", 
   RowBox[{"1578960000000", "\[Rule]", "3.19210572`*^6"}], ",", 
   RowBox[{"1579046400000", "\[Rule]", "3.19720228`*^6"}], ",", 
   RowBox[{"1579132800000", "\[Rule]", "3.19420195`*^6"}], ",", 
   RowBox[{"1579219200000", "\[Rule]", "3.1931`*^6"}], ",", 
   RowBox[{"1579305600000", "\[Rule]", "3.19103998`*^6"}], ",", 
   RowBox[{"1579392000000", "\[Rule]", "3.19635`*^6"}], ",", 
   RowBox[{"1579478400000", "\[Rule]", "3.20405`*^6"}], ",", 
   RowBox[{"1579564800000", "\[Rule]", "3.202`*^6"}], ",", 
   RowBox[{"1579651200000", "\[Rule]", "3.20762`*^6"}], ",", 
   RowBox[{"1579737600000", "\[Rule]", "3.212077`*^6"}], ",", 
   RowBox[{"1579824000000", "\[Rule]", "3.22593911`*^6"}], ",", 
   RowBox[{"1579910400000", "\[Rule]", "3.28000259`*^6"}], ",", 
   RowBox[{"1579996800000", "\[Rule]", "3.27401107`*^6"}], ",", 
   RowBox[{"1580083200000", "\[Rule]", "3.27621`*^6"}], ",", 
   RowBox[{"1580169600000", "\[Rule]", "3.29000201`*^6"}], ",", 
   RowBox[{"1580256000000", "\[Rule]", "3.297202`*^6"}], ",", 
   RowBox[{"1580342400000", "\[Rule]", "3.295251`*^6"}], ",", 
   RowBox[{"1580428800000", "\[Rule]", "3.2965`*^6"}], ",", 
   RowBox[{"1580515200000", "\[Rule]", "3.280606`*^6"}], ",", 
   RowBox[{"1580601600000", "\[Rule]", "3.28022`*^6"}], ",", 
   RowBox[{"1580688000000", "\[Rule]", "3.27955`*^6"}], ",", 
   RowBox[{"1580774400000", "\[Rule]", "3.27105`*^6"}], ",", 
   RowBox[{"1580860800000", "\[Rule]", "3.28603001`*^6"}], ",", 
   RowBox[{"1580947200000", "\[Rule]", "3.276`*^6"}], ",", 
   RowBox[{"1581033600000", "\[Rule]", "3.26830528`*^6"}], ",", 
   RowBox[{"1581120000000", "\[Rule]", "3.26403`*^6"}], ",", 
   RowBox[{"1581206400000", "\[Rule]", "3.25849989`*^6"}], ",", 
   RowBox[{"1581292800000", "\[Rule]", "3.25614001`*^6"}], ",", 
   RowBox[{"1581379200000", "\[Rule]", "3.2630001`*^6"}], ",", 
   RowBox[{"1581465600000", "\[Rule]", "3.30000501`*^6"}], ",", 
   RowBox[{"1581552000000", "\[Rule]", "3.280505`*^6"}], ",", 
   RowBox[{"1581638400000", "\[Rule]", "3.275044`*^6"}], ",", 
   RowBox[{"1581724800000", "\[Rule]", "3.28471`*^6"}], ",", 
   RowBox[{"1581811200000", "\[Rule]", "3.27606`*^6"}], ",", 
   RowBox[{"1581897600000", "\[Rule]", "3.27814`*^6"}], ",", 
   RowBox[{"1581984000000", "\[Rule]", "3.28501`*^6"}], ",", 
   RowBox[{"1582070400000", "\[Rule]", "3.28312101`*^6"}], ",", 
   RowBox[{"1582156800000", "\[Rule]", "3.284504`*^6"}], ",", 
   RowBox[{"1582243200000", "\[Rule]", "3.2803029`*^6"}], ",", 
   RowBox[{"1582329600000", "\[Rule]", "3.25652102`*^6"}], ",", 
   RowBox[{"1582416000000", "\[Rule]", "3.24601`*^6"}], ",", 
   RowBox[{"1582502400000", "\[Rule]", "3.35008`*^6"}], ",", 
   RowBox[{"1582588800000", "\[Rule]", "3.295006`*^6"}], ",", 
   RowBox[{"1582675200000", "\[Rule]", "3.286066`*^6"}], ",", 
   RowBox[{"1582761600000", "\[Rule]", "3.28606`*^6"}], ",", 
   RowBox[{"1582848000000", "\[Rule]", "3.20012101`*^6"}], ",", 
   RowBox[{"1582934400000", "\[Rule]", "3.19002442`*^6"}], ",", 
   RowBox[{"1583020800000", "\[Rule]", "3.18501`*^6"}], ",", 
   RowBox[{"1583107200000", "\[Rule]", "3.19340648`*^6"}], ",", 
   RowBox[{"1583193600000", "\[Rule]", "3.206`*^6"}], ",", 
   RowBox[{"1583280000000", "\[Rule]", "3.222505`*^6"}], ",", 
   RowBox[{"1583366400000", "\[Rule]", "3.21706`*^6"}], ",", 
   RowBox[{"1583452800000", "\[Rule]", "3.19815402`*^6"}], ",", 
   RowBox[{"1583539200000", "\[Rule]", "3.200252`*^6"}], ",", 
   RowBox[{"1583625600000", "\[Rule]", "3.204042`*^6"}], ",", 
   RowBox[{"1583712000000", "\[Rule]", "3.22016241`*^6"}], ",", 
   RowBox[{"1583798400000", "\[Rule]", "3.227032`*^6"}], ",", 
   RowBox[{"1583884800000", "\[Rule]", "3.219`*^6"}], ",", 
   RowBox[{"1583971200000", "\[Rule]", "3.221`*^6"}], ",", 
   RowBox[{"1584057600000", "\[Rule]", "3.22`*^6"}], ",", 
   RowBox[{"1584144000000", "\[Rule]", "3.21200005`*^6"}], ",", 
   RowBox[{"1584230400000", "\[Rule]", "3.20600011`*^6"}], ",", 
   RowBox[{"1584316800000", "\[Rule]", "3.201`*^6"}], ",", 
   RowBox[{"1584403200000", "\[Rule]", "3.196`*^6"}], ",", 
   RowBox[{"1584489600000", "\[Rule]", "3.186`*^6"}], ",", 
   RowBox[{"1584576000000", "\[Rule]", "3.176`*^6"}], ",", 
   RowBox[{"1584662400000", "\[Rule]", "3.151`*^6"}], ",", 
   RowBox[{"1584748800000", "\[Rule]", "3.101`*^6"}], ",", 
   RowBox[{"1584835200000", "\[Rule]", "3.124`*^6"}], ",", 
   RowBox[{"1584921600000", "\[Rule]", "3.15`*^6"}], ",", 
   RowBox[{"1585008000000", "\[Rule]", "3.15`*^6"}], ",", 
   RowBox[{"1585094400000", "\[Rule]", "3.136`*^6"}], ",", 
   RowBox[{"1585180800000", "\[Rule]", "3.135`*^6"}], ",", 
   RowBox[{"1585267200000", "\[Rule]", "3.126`*^6"}], ",", 
   RowBox[{"1585353600000", "\[Rule]", "3.093`*^6"}], ",", 
   RowBox[{"1585440000000", "\[Rule]", "3.099`*^6"}], ",", 
   RowBox[{"1585526400000", "\[Rule]", "3.074`*^6"}], ",", 
   RowBox[{"1585612800000", "\[Rule]", "3.056`*^6"}], ",", 
   RowBox[{"1585699200000", "\[Rule]", "3.013`*^6"}], ",", 
   RowBox[{"1585785600000", "\[Rule]", "2.913`*^6"}], ",", 
   RowBox[{"1585872000000", "\[Rule]", "2.9`*^6"}], ",", 
   RowBox[{"1585958400000", "\[Rule]", "2.958`*^6"}], ",", 
   RowBox[{"1586044800000", "\[Rule]", "2.977`*^6"}], ",", 
   RowBox[{"1586131200000", "\[Rule]", "2.962`*^6"}], ",", 
   RowBox[{"1586217600000", "\[Rule]", "2.915`*^6"}], ",", 
   RowBox[{"1586304000000", "\[Rule]", "2.903`*^6"}], ",", 
   RowBox[{"1586390400000", "\[Rule]", "2.887`*^6"}], ",", 
   RowBox[{"1586476800000", "\[Rule]", "3.135`*^6"}], ",", 
   RowBox[{"1586563200000", "\[Rule]", "3.173`*^6"}], ",", 
   RowBox[{"1586649600000", "\[Rule]", "3.075`*^6"}], ",", 
   RowBox[{"1586736000000", "\[Rule]", "2.971`*^6"}], ",", 
   RowBox[{"1586822400000", "\[Rule]", "2.949`*^6"}], ",", 
   RowBox[{"1586908800000", "\[Rule]", "2.871`*^6"}], ",", 
   RowBox[{"1586995200000", "\[Rule]", "2.778`*^6"}], ",", 
   RowBox[{"1587081600000", "\[Rule]", "2.74`*^6"}], ",", 
   RowBox[{"1587168000000", "\[Rule]", "2.72`*^6"}], ",", 
   RowBox[{"1587254400000", "\[Rule]", "2.716`*^6"}], ",", 
   RowBox[{"1587340800000", "\[Rule]", "2.745`*^6"}], ",", 
   RowBox[{"1587427200000", "\[Rule]", "2.779`*^6"}], ",", 
   RowBox[{"1587513600000", "\[Rule]", "2.796`*^6"}], ",", 
   RowBox[{"1587600000000", "\[Rule]", "2.768`*^6"}], ",", 
   RowBox[{"1587686400000", "\[Rule]", "2.73`*^6"}], ",", 
   RowBox[{"1587772800000", "\[Rule]", "2.681`*^6"}], ",", 
   RowBox[{"1587859200000", "\[Rule]", "2.672`*^6"}], ",", 
   RowBox[{"1587945600000", "\[Rule]", "2.66`*^6"}], ",", 
   RowBox[{"1588032000000", "\[Rule]", "2.644`*^6"}], ",", 
   RowBox[{"1588118400000", "\[Rule]", "2.608`*^6"}], ",", 
   RowBox[{"1588204800000", "\[Rule]", "2.58`*^6"}], ",", 
   RowBox[{"1588291200000", "\[Rule]", "2.573`*^6"}], ",", 
   RowBox[{"1588377600000", "\[Rule]", "2.593`*^6"}], ",", 
   RowBox[{"1588464000000", "\[Rule]", "2.583`*^6"}], ",", 
   RowBox[{"1588550400000", "\[Rule]", "2.575`*^6"}], ",", 
   RowBox[{"1588636800000", "\[Rule]", "2.608`*^6"}], ",", 
   RowBox[{"1588723200000", "\[Rule]", "2.594`*^6"}], ",", 
   RowBox[{"1588809600000", "\[Rule]", "2.592`*^6"}], ",", 
   RowBox[{"1588896000000", "\[Rule]", "2.579`*^6"}], ",", 
   RowBox[{"1588982400000", "\[Rule]", "2.55`*^6"}], ",", 
   RowBox[{"1589068800000", "\[Rule]", "2.556`*^6"}], ",", 
   RowBox[{"1589155200000", "\[Rule]", "2.578`*^6"}], ",", 
   RowBox[{"1589241600000", "\[Rule]", "2.564`*^6"}], ",", 
   RowBox[{"1589328000000", "\[Rule]", "2.547`*^6"}], ",", 
   RowBox[{"1589414400000", "\[Rule]", "2.526`*^6"}], ",", 
   RowBox[{"1589500800000", "\[Rule]", "2.535`*^6"}], ",", 
   RowBox[{"1589587200000", "\[Rule]", "2.5`*^6"}], ",", 
   RowBox[{"1589673600000", "\[Rule]", "2.465`*^6"}], ",", 
   RowBox[{"1589760000000", "\[Rule]", "2.451`*^6"}], ",", 
   RowBox[{"1589846400000", "\[Rule]", "2.468`*^6"}], ",", 
   RowBox[{"1589932800000", "\[Rule]", "2.476`*^6"}], ",", 
   RowBox[{"1590019200000", "\[Rule]", "2.49`*^6"}], ",", 
   RowBox[{"1590105600000", "\[Rule]", "2.498`*^6"}], ",", 
   RowBox[{"1590192000000", "\[Rule]", "2.478`*^6"}], ",", 
   RowBox[{"1590278400000", "\[Rule]", "2.481`*^6"}], ",", 
   RowBox[{"1590364800000", "\[Rule]", "2.609`*^6"}], ",", 
   RowBox[{"1590451200000", "\[Rule]", "2.806`*^6"}], ",", 
   RowBox[{"1590537600000", "\[Rule]", "2.673`*^6"}], ",", 
   RowBox[{"1590624000000", "\[Rule]", "2.648`*^6"}], ",", 
   RowBox[{"1590710400000", "\[Rule]", "2.516`*^6"}], ",", 
   RowBox[{"1590796800000", "\[Rule]", "2.492`*^6"}], ",", 
   RowBox[{"1590883200000", "\[Rule]", "2.506`*^6"}], ",", 
   RowBox[{"1590969600000", "\[Rule]", "2.526`*^6"}], ",", 
   RowBox[{"1591056000000", "\[Rule]", "2.531`*^6"}], ",", 
   RowBox[{"1591142400000", "\[Rule]", "2.542`*^6"}], ",", 
   RowBox[{"1591228800000", "\[Rule]", "2.542`*^6"}], ",", 
   RowBox[{"1591315200000", "\[Rule]", "2.531`*^6"}], ",", 
   RowBox[{"1591401600000", "\[Rule]", "2.521`*^6"}], ",", 
   RowBox[{"1591488000000", "\[Rule]", "2.516`*^6"}], ",", 
   RowBox[{"1591574400000", "\[Rule]", "2.545`*^6"}], ",", 
   RowBox[{"1591660800000", "\[Rule]", "2.545`*^6"}], ",", 
   RowBox[{"1591747200000", "\[Rule]", "2.553`*^6"}], ",", 
   RowBox[{"1591833600000", "\[Rule]", "2.558`*^6"}], ",", 
   RowBox[{"1591920000000", "\[Rule]", "2.705`*^6"}], ",", 
   RowBox[{"1592006400000", "\[Rule]", "2.752`*^6"}], ",", 
   RowBox[{"1592092800000", "\[Rule]", "2.757`*^6"}], ",", 
   RowBox[{"1592179200000", "\[Rule]", "2.612`*^6"}], ",", 
   RowBox[{"1592265600000", "\[Rule]", "2.61`*^6"}], ",", 
   RowBox[{"1592352000000", "\[Rule]", "2.571`*^6"}], ",", 
   RowBox[{"1592438400000", "\[Rule]", "2.581`*^6"}], ",", 
   RowBox[{"1592524800000", "\[Rule]", "2.583`*^6"}], ",", 
   RowBox[{"1592611200000", "\[Rule]", "2.567`*^6"}], ",", 
   RowBox[{"1592697600000", "\[Rule]", "2.567`*^6"}], ",", 
   RowBox[{"1592784000000", "\[Rule]", "2.563`*^6"}], ",", 
   RowBox[{"1592870400000", "\[Rule]", "2.55`*^6"}], ",", 
   RowBox[{"1592956800000", "\[Rule]", "2.558`*^6"}], ",", 
   RowBox[{"1593043200000", "\[Rule]", "2.555`*^6"}], ",", 
   RowBox[{"1593129600000", "\[Rule]", "2.55`*^6"}], ",", 
   RowBox[{"1593216000000", "\[Rule]", "2.554`*^6"}], ",", 
   RowBox[{"1593302400000", "\[Rule]", "2.544`*^6"}], ",", 
   RowBox[{"1593388800000", "\[Rule]", "2.551`*^6"}], ",", 
   RowBox[{"1593475200000", "\[Rule]", "2.523`*^6"}], ",", 
   RowBox[{"1593561600000", "\[Rule]", "2.511`*^6"}], ",", 
   RowBox[{"1593648000000", "\[Rule]", "2.51`*^6"}], ",", 
   RowBox[{"1593734400000", "\[Rule]", "2.503`*^6"}], ",", 
   RowBox[{"1593820800000", "\[Rule]", "2.479`*^6"}], ",", 
   RowBox[{"1593907200000", "\[Rule]", "2.451`*^6"}], ",", 
   RowBox[{"1593993600000", "\[Rule]", "2.477`*^6"}], ",", 
   RowBox[{"1594080000000", "\[Rule]", "2.46`*^6"}], ",", 
   RowBox[{"1594166400000", "\[Rule]", "2.463`*^6"}], ",", 
   RowBox[{"1594252800000", "\[Rule]", "2.477`*^6"}], ",", 
   RowBox[{"1594339200000", "\[Rule]", "2.48`*^6"}], ",", 
   RowBox[{"1594425600000", "\[Rule]", "2.487`*^6"}], ",", 
   RowBox[{"1594512000000", "\[Rule]", "2.489`*^6"}], ",", 
   RowBox[{"1594598400000", "\[Rule]", "2.486`*^6"}], ",", 
   RowBox[{"1594684800000", "\[Rule]", "2.49`*^6"}], ",", 
   RowBox[{"1594771200000", "\[Rule]", "2.49`*^6"}], ",", 
   RowBox[{"1594857600000", "\[Rule]", "2.48`*^6"}], ",", 
   RowBox[{"1594944000000", "\[Rule]", "2.48`*^6"}], ",", 
   RowBox[{"1595030400000", "\[Rule]", "2.483`*^6"}], ",", 
   RowBox[{"1595116800000", "\[Rule]", "2.485`*^6"}], ",", 
   RowBox[{"1595203200000", "\[Rule]", "2.495`*^6"}], ",", 
   RowBox[{"1595289600000", "\[Rule]", "2.492`*^6"}], ",", 
   RowBox[{"1595376000000", "\[Rule]", "2.495`*^6"}], ",", 
   RowBox[{"1595462400000", "\[Rule]", "2.492`*^6"}], ",", 
   RowBox[{"1595548800000", "\[Rule]", "2.491`*^6"}], ",", 
   RowBox[{"1595635200000", "\[Rule]", "2.494`*^6"}], ",", 
   RowBox[{"1595721600000", "\[Rule]", "2.494`*^6"}], ",", 
   RowBox[{"1595808000000", "\[Rule]", "2.5`*^6"}], ",", 
   RowBox[{"1595894400000", "\[Rule]", "2.496`*^6"}], ",", 
   RowBox[{"1595980800000", "\[Rule]", "2.504`*^6"}], ",", 
   RowBox[{"1596067200000", "\[Rule]", "2.503`*^6"}], ",", 
   RowBox[{"1596153600000", "\[Rule]", "2.495`*^6"}], ",", 
   RowBox[{"1596240000000", "\[Rule]", "2.491`*^6"}], ",", 
   RowBox[{"1596326400000", "\[Rule]", "2.496`*^6"}], ",", 
   RowBox[{"1596412800000", "\[Rule]", "2.5`*^6"}], ",", 
   RowBox[{"1596499200000", "\[Rule]", "2.495`*^6"}], ",", 
   RowBox[{"1596585600000", "\[Rule]", "2.5`*^6"}], ",", 
   RowBox[{"1596672000000", "\[Rule]", "2.495`*^6"}], ",", 
   RowBox[{"1596758400000", "\[Rule]", "2.499`*^6"}], ",", 
   RowBox[{"1596844800000", "\[Rule]", "2.499`*^6"}], ",", 
   RowBox[{"1596931200000", "\[Rule]", "2.515`*^6"}], ",", 
   RowBox[{"1597017600000", "\[Rule]", "2.508`*^6"}], ",", 
   RowBox[{"1597104000000", "\[Rule]", "2.513`*^6"}], ",", 
   RowBox[{"1597190400000", "\[Rule]", "2.531`*^6"}], ",", 
   RowBox[{"1597276800000", "\[Rule]", "2.523`*^6"}], ",", 
   RowBox[{"1597363200000", "\[Rule]", "2.533`*^6"}], ",", 
   RowBox[{"1597449600000", "\[Rule]", "2.534`*^6"}], ",", 
   RowBox[{"1597536000000", "\[Rule]", "2.541`*^6"}], ",", 
   RowBox[{"1597622400000", "\[Rule]", "2.543`*^6"}], ",", 
   RowBox[{"1597708800000", "\[Rule]", "2.544`*^6"}], ",", 
   RowBox[{"1597795200000", "\[Rule]", "2.552`*^6"}], ",", 
   RowBox[{"1597881600000", "\[Rule]", "2.556`*^6"}], ",", 
   RowBox[{"1597968000000", "\[Rule]", "2.548`*^6"}], ",", 
   RowBox[{"1598054400000", "\[Rule]", "2.544`*^6"}], ",", 
   RowBox[{"1598140800000", "\[Rule]", "2.554`*^6"}], ",", 
   RowBox[{"1598227200000", "\[Rule]", "2.557`*^6"}], ",", 
   RowBox[{"1598313600000", "\[Rule]", "2.57`*^6"}], ",", 
   RowBox[{"1598400000000", "\[Rule]", "2.582`*^6"}], ",", 
   RowBox[{"1598486400000", "\[Rule]", "2.597`*^6"}], ",", 
   RowBox[{"1598572800000", "\[Rule]", "2.799`*^6"}], ",", 
   RowBox[{"1598659200000", "\[Rule]", "2.73`*^6"}], ",", 
   RowBox[{"1598745600000", "\[Rule]", "2.728`*^6"}], ",", 
   RowBox[{"1598832000000", "\[Rule]", "2.632`*^6"}], ",", 
   RowBox[{"1598918400000", "\[Rule]", "2.615`*^6"}], ",", 
   RowBox[{"1599004800000", "\[Rule]", "2.631`*^6"}], ",", 
   RowBox[{"1599091200000", "\[Rule]", "2.628`*^6"}], ",", 
   RowBox[{"1599177600000", "\[Rule]", "2.626`*^6"}], ",", 
   RowBox[{"1599264000000", "\[Rule]", "2.623`*^6"}], ",", 
   RowBox[{"1599350400000", "\[Rule]", "2.613`*^6"}], ",", 
   RowBox[{"1599436800000", "\[Rule]", "2.618`*^6"}], ",", 
   RowBox[{"1599523200000", "\[Rule]", "2.615`*^6"}], ",", 
   RowBox[{"1599609600000", "\[Rule]", "2.61`*^6"}], ",", 
   RowBox[{"1599696000000", "\[Rule]", "2.602`*^6"}], ",", 
   RowBox[{"1599782400000", "\[Rule]", "2.6`*^6"}], ",", 
   RowBox[{"1599868800000", "\[Rule]", "2.6`*^6"}], ",", 
   RowBox[{"1599955200000", "\[Rule]", "2.612`*^6"}], ",", 
   RowBox[{"1600041600000", "\[Rule]", "2.617`*^6"}], ",", 
   RowBox[{"1600128000000", "\[Rule]", "2.626`*^6"}], ",", 
   RowBox[{"1600214400000", "\[Rule]", "2.615`*^6"}], ",", 
   RowBox[{"1600300800000", "\[Rule]", "2.612`*^6"}], ",", 
   RowBox[{"1600387200000", "\[Rule]", "2.611`*^6"}], ",", 
   RowBox[{"1600473600000", "\[Rule]", "2.607`*^6"}], ",", 
   RowBox[{"1600560000000", "\[Rule]", "2.608`*^6"}], ",", 
   RowBox[{"1600646400000", "\[Rule]", "2.623`*^6"}], ",", 
   RowBox[{"1600732800000", "\[Rule]", "2.612`*^6"}], ",", 
   RowBox[{"1600819200000", "\[Rule]", "2.607`*^6"}], ",", 
   RowBox[{"1600905600000", "\[Rule]", "2.61`*^6"}], ",", 
   RowBox[{"1600992000000", "\[Rule]", "2.607`*^6"}], ",", 
   RowBox[{"1601078400000", "\[Rule]", "2.611`*^6"}], ",", 
   RowBox[{"1601164800000", "\[Rule]", "2.607`*^6"}], ",", 
   RowBox[{"1601251200000", "\[Rule]", "2.613`*^6"}], ",", 
   RowBox[{"1601337600000", "\[Rule]", "2.614`*^6"}], ",", 
   RowBox[{"1601424000000", "\[Rule]", "2.618`*^6"}], ",", 
   RowBox[{"1601510400000", "\[Rule]", "2.615`*^6"}], ",", 
   RowBox[{"1601596800000", "\[Rule]", "2.625`*^6"}], ",", 
   RowBox[{"1601683200000", "\[Rule]", "2.626`*^6"}], ",", 
   RowBox[{"1601769600000", "\[Rule]", "2.634`*^6"}], ",", 
   RowBox[{"1601856000000", "\[Rule]", "2.66`*^6"}], ",", 
   RowBox[{"1601942400000", "\[Rule]", "2.67`*^6"}], ",", 
   RowBox[{"1602028800000", "\[Rule]", "2.726`*^6"}], ",", 
   RowBox[{"1602115200000", "\[Rule]", "2.762`*^6"}], ",", 
   RowBox[{"1602201600000", "\[Rule]", "2.787`*^6"}], ",", 
   RowBox[{"1602288000000", "\[Rule]", "2.72`*^6"}], ",", 
   RowBox[{"1602374400000", "\[Rule]", "2.688`*^6"}], ",", 
   RowBox[{"1602460800000", "\[Rule]", "2.692`*^6"}], ",", 
   RowBox[{"1602547200000", "\[Rule]", "2.689`*^6"}], ",", 
   RowBox[{"1602633600000", "\[Rule]", "2.698`*^6"}], ",", 
   RowBox[{"1602720000000", "\[Rule]", "2.696`*^6"}], ",", 
   RowBox[{"1602806400000", "\[Rule]", "2.699`*^6"}], ",", 
   RowBox[{"1602892800000", "\[Rule]", "2.697`*^6"}], ",", 
   RowBox[{"1602979200000", "\[Rule]", "2.693`*^6"}], ",", 
   RowBox[{"1603065600000", "\[Rule]", "2.694`*^6"}], ",", 
   RowBox[{"1603152000000", "\[Rule]", "2.707`*^6"}], ",", 
   RowBox[{"1603238400000", "\[Rule]", "2.7`*^6"}], ",", 
   RowBox[{"1603324800000", "\[Rule]", "2.701`*^6"}], ",", 
   RowBox[{"1603411200000", "\[Rule]", "2.713`*^6"}], ",", 
   RowBox[{"1603497600000", "\[Rule]", "2.706`*^6"}], ",", 
   RowBox[{"1603584000000", "\[Rule]", "2.707`*^6"}], ",", 
   RowBox[{"1603670400000", "\[Rule]", "2.705`*^6"}], ",", 
   RowBox[{"1603756800000", "\[Rule]", "2.71`*^6"}], ",", 
   RowBox[{"1603843200000", "\[Rule]", "2.709`*^6"}], ",", 
   RowBox[{"1603929600000", "\[Rule]", "2.706`*^6"}], ",", 
   RowBox[{"1604016000000", "\[Rule]", "2.713`*^6"}], ",", 
   RowBox[{"1604102400000", "\[Rule]", "2.687`*^6"}], ",", 
   RowBox[{"1604188800000", "\[Rule]", "2.691`*^6"}], ",", 
   RowBox[{"1604275200000", "\[Rule]", "2.693`*^6"}], ",", 
   RowBox[{"1604361600000", "\[Rule]", "2.696`*^6"}], ",", 
   RowBox[{"1604448000000", "\[Rule]", "2.706`*^6"}], ",", 
   RowBox[{"1604534400000", "\[Rule]", "2.697`*^6"}], ",", 
   RowBox[{"1604620800000", "\[Rule]", "2.694`*^6"}], ",", 
   RowBox[{"1604707200000", "\[Rule]", "2.692`*^6"}], ",", 
   RowBox[{"1604793600000", "\[Rule]", "2.693`*^6"}], ",", 
   RowBox[{"1604880000000", "\[Rule]", "2.697`*^6"}], ",", 
   RowBox[{"1604966400000", "\[Rule]", "2.7`*^6"}], ",", 
   RowBox[{"1605052800000", "\[Rule]", "2.7`*^6"}], ",", 
   RowBox[{"1605139200000", "\[Rule]", "2.709`*^6"}], ",", 
   RowBox[{"1605225600000", "\[Rule]", "2.703`*^6"}], ",", 
   RowBox[{"1605312000000", "\[Rule]", "2.702`*^6"}], ",", 
   RowBox[{"1605398400000", "\[Rule]", "2.7`*^6"}], ",", 
   RowBox[{"1605484800000", "\[Rule]", "2.704`*^6"}], ",", 
   RowBox[{"1605571200000", "\[Rule]", "2.706`*^6"}], ",", 
   RowBox[{"1605657600000", "\[Rule]", "2.718`*^6"}], ",", 
   RowBox[{"1605744000000", "\[Rule]", "2.72`*^6"}], ",", 
   RowBox[{"1605830400000", "\[Rule]", "2.716`*^6"}], ",", 
   RowBox[{"1605916800000", "\[Rule]", "2.709`*^6"}], ",", 
   RowBox[{"1606003200000", "\[Rule]", "2.717`*^6"}], ",", 
   RowBox[{"1606089600000", "\[Rule]", "2.726`*^6"}], ",", 
   RowBox[{"1606176000000", "\[Rule]", "2.751`*^6"}], ",", 
   RowBox[{"1606262400000", "\[Rule]", "2.748`*^6"}], ",", 
   RowBox[{"1606348800000", "\[Rule]", "2.63`*^6"}], ",", 
   RowBox[{"1606435200000", "\[Rule]", "2.64`*^6"}], ",", 
   RowBox[{"1606521600000", "\[Rule]", "2.688`*^6"}], ",", 
   RowBox[{"1606608000000", "\[Rule]", "2.686`*^6"}], ",", 
   RowBox[{"1606694400000", "\[Rule]", "2.711`*^6"}], ",", 
   RowBox[{"1606780800000", "\[Rule]", "2.708`*^6"}], ",", 
   RowBox[{"1606867200000", "\[Rule]", "2.696`*^6"}], ",", 
   RowBox[{"1606953600000", "\[Rule]", "2.696`*^6"}], ",", 
   RowBox[{"1607040000000", "\[Rule]", "2.691`*^6"}], ",", 
   RowBox[{"1607126400000", "\[Rule]", "2.686`*^6"}], ",", 
   RowBox[{"1607212800000", "\[Rule]", "2.682`*^6"}], ",", 
   RowBox[{"1607299200000", "\[Rule]", "2.688`*^6"}], ",", 
   RowBox[{"1607385600000", "\[Rule]", "2.683`*^6"}], ",", 
   RowBox[{"1607472000000", "\[Rule]", "2.68`*^6"}], ",", 
   RowBox[{"1607558400000", "\[Rule]", "2.697`*^6"}], ",", 
   RowBox[{"1607644800000", "\[Rule]", "2.679`*^6"}], ",", 
   RowBox[{"1607731200000", "\[Rule]", "2.672`*^6"}], ",", 
   RowBox[{"1607817600000", "\[Rule]", "2.674`*^6"}], ",", 
   RowBox[{"1607904000000", "\[Rule]", "2.672`*^6"}], ",", 
   RowBox[{"1607990400000", "\[Rule]", "2.664`*^6"}], ",", 
   RowBox[{"1608076800000", "\[Rule]", "2.666`*^6"}], ",", 
   RowBox[{"1608163200000", "\[Rule]", "2.661`*^6"}], ",", 
   RowBox[{"1608249600000", "\[Rule]", "2.664`*^6"}], ",", 
   RowBox[{"1608336000000", "\[Rule]", "2.657`*^6"}], ",", 
   RowBox[{"1608422400000", "\[Rule]", "2.642`*^6"}], ",", 
   RowBox[{"1608508800000", "\[Rule]", "2.642`*^6"}], ",", 
   RowBox[{"1608595200000", "\[Rule]", "2.65`*^6"}], ",", 
   RowBox[{"1608681600000", "\[Rule]", "2.646`*^6"}], ",", 
   RowBox[{"1608768000000", "\[Rule]", "2.8`*^6"}], ",", 
   RowBox[{"1608854400000", "\[Rule]", "2.819`*^6"}], ",", 
   RowBox[{"1608940800000", "\[Rule]", "2.77`*^6"}], ",", 
   RowBox[{"1609027200000", "\[Rule]", "2.657`*^6"}], ",", 
   RowBox[{"1609113600000", "\[Rule]", "2.651`*^6"}], ",", 
   RowBox[{"1609200000000", "\[Rule]", "2.647`*^6"}], ",", 
   RowBox[{"1609286400000", "\[Rule]", "2.643`*^6"}], ",", 
   RowBox[{"1609372800000", "\[Rule]", "2.638`*^6"}], ",", 
   RowBox[{"1609459200000", "\[Rule]", "2.606`*^6"}], ",", 
   RowBox[{"1609545600000", "\[Rule]", "2.56`*^6"}], ",", 
   RowBox[{"1609632000000", "\[Rule]", "2.552`*^6"}], ",", 
   RowBox[{"1609718400000", "\[Rule]", "2.559`*^6"}], ",", 
   RowBox[{"1609804800000", "\[Rule]", "2.557`*^6"}], ",", 
   RowBox[{"1609891200000", "\[Rule]", "2.546`*^6"}], ",", 
   RowBox[{"1609977600000", "\[Rule]", "2.541`*^6"}], ",", 
   RowBox[{"1610064000000", "\[Rule]", "2.533`*^6"}], ",", 
   RowBox[{"1610150400000", "\[Rule]", "2.492`*^6"}], ",", 
   RowBox[{"1610236800000", "\[Rule]", "2.49`*^6"}], ",", 
   RowBox[{"1610323200000", "\[Rule]", "2.512`*^6"}], ",", 
   RowBox[{"1610409600000", "\[Rule]", "2.5`*^6"}], ",", 
   RowBox[{"1610496000000", "\[Rule]", "2.531`*^6"}], ",", 
   RowBox[{"1610582400000", "\[Rule]", "2.508`*^6"}], ",", 
   RowBox[{"1610668800000", "\[Rule]", "2.501`*^6"}], ",", 
   RowBox[{"1610755200000", "\[Rule]", "2.499`*^6"}], ",", 
   RowBox[{"1610841600000", "\[Rule]", "2.503`*^6"}], ",", 
   RowBox[{"1610928000000", "\[Rule]", "2.505`*^6"}], ",", 
   RowBox[{"1611014400000", "\[Rule]", "2.5`*^6"}], ",", 
   RowBox[{"1611100800000", "\[Rule]", "2.501`*^6"}], ",", 
   RowBox[{"1611187200000", "\[Rule]", "2.498`*^6"}], ",", 
   RowBox[{"1611273600000", "\[Rule]", "2.49`*^6"}], ",", 
   RowBox[{"1611360000000", "\[Rule]", "2.486`*^6"}], ",", 
   RowBox[{"1611446400000", "\[Rule]", "2.481`*^6"}], ",", 
   RowBox[{"1611532800000", "\[Rule]", "2.481`*^6"}], ",", 
   RowBox[{"1611619200000", "\[Rule]", "2.484`*^6"}], ",", 
   RowBox[{"1611705600000", "\[Rule]", "2.473`*^6"}], ",", 
   RowBox[{"1611792000000", "\[Rule]", "2.472`*^6"}], ",", 
   RowBox[{"1611878400000", "\[Rule]", "2.471`*^6"}], ",", 
   RowBox[{"1611964800000", "\[Rule]", "2.466`*^6"}], ",", 
   RowBox[{"1612051200000", "\[Rule]", "2.455`*^6"}], ",", 
   RowBox[{"1612137600000", "\[Rule]", "2.475`*^6"}], ",", 
   RowBox[{"1612224000000", "\[Rule]", "2.459`*^6"}], ",", 
   RowBox[{"1612310400000", "\[Rule]", "2.455`*^6"}], ",", 
   RowBox[{"1612396800000", "\[Rule]", "2.446`*^6"}], ",", 
   RowBox[{"1612483200000", "\[Rule]", "2.442`*^6"}], ",", 
   RowBox[{"1612569600000", "\[Rule]", "2.439`*^6"}], ",", 
   RowBox[{"1612656000000", "\[Rule]", "2.438`*^6"}], ",", 
   RowBox[{"1612742400000", "\[Rule]", "2.46`*^6"}], ",", 
   RowBox[{"1612828800000", "\[Rule]", "2.445`*^6"}], ",", 
   RowBox[{"1612915200000", "\[Rule]", "2.444`*^6"}], ",", 
   RowBox[{"1613001600000", "\[Rule]", "2.441`*^6"}], ",", 
   RowBox[{"1613088000000", "\[Rule]", "2.438`*^6"}], ",", 
   RowBox[{"1613174400000", "\[Rule]", "2.43`*^6"}], ",", 
   RowBox[{"1613260800000", "\[Rule]", "2.427`*^6"}], ",", 
   RowBox[{"1613347200000", "\[Rule]", "2.414`*^6"}], ",", 
   RowBox[{"1613433600000", "\[Rule]", "2.413`*^6"}], ",", 
   RowBox[{"1613520000000", "\[Rule]", "2.412`*^6"}], ",", 
   RowBox[{"1613606400000", "\[Rule]", "2.41`*^6"}], ",", 
   RowBox[{"1613692800000", "\[Rule]", "2.41`*^6"}], ",", 
   RowBox[{"1613779200000", "\[Rule]", "2.4`*^6"}], ",", 
   RowBox[{"1613865600000", "\[Rule]", "2.408`*^6"}], ",", 
   RowBox[{"1613952000000", "\[Rule]", "2.415`*^6"}], ",", 
   RowBox[{"1614038400000", "\[Rule]", "2.418`*^6"}], ",", 
   RowBox[{"1614124800000", "\[Rule]", "2.421`*^6"}], ",", 
   RowBox[{"1614211200000", "\[Rule]", "2.42`*^6"}], ",", 
   RowBox[{"1614297600000", "\[Rule]", "2.402`*^6"}], ",", 
   RowBox[{"1614384000000", "\[Rule]", "2.362`*^6"}], ",", 
   RowBox[{"1614470400000", "\[Rule]", "2.335`*^6"}], ",", 
   RowBox[{"1614556800000", "\[Rule]", "2.334`*^6"}], ",", 
   RowBox[{"1614643200000", "\[Rule]", "2.338`*^6"}], ",", 
   RowBox[{"1614729600000", "\[Rule]", "2.337`*^6"}], ",", 
   RowBox[{"1614816000000", "\[Rule]", "2.341`*^6"}], ",", 
   RowBox[{"1614902400000", "\[Rule]", "2.343`*^6"}], ",", 
   RowBox[{"1614988800000", "\[Rule]", "2.331`*^6"}], ",", 
   RowBox[{"1615075200000", "\[Rule]", "2.322`*^6"}], ",", 
   RowBox[{"1615161600000", "\[Rule]", "2.33`*^6"}], ",", 
   RowBox[{"1615248000000", "\[Rule]", "2.324`*^6"}], ",", 
   RowBox[{"1615334400000", "\[Rule]", "2.318`*^6"}], ",", 
   RowBox[{"1615420800000", "\[Rule]", "2.317`*^6"}], ",", 
   RowBox[{"1615507200000", "\[Rule]", "2.315`*^6"}], ",", 
   RowBox[{"1615593600000", "\[Rule]", "2.301`*^6"}], ",", 
   RowBox[{"1615680000000", "\[Rule]", "2.298`*^6"}], ",", 
   RowBox[{"1615766400000", "\[Rule]", "2.305`*^6"}], ",", 
   RowBox[{"1615852800000", "\[Rule]", "2.304`*^6"}], ",", 
   RowBox[{"1615939200000", "\[Rule]", "2.291`*^6"}], ",", 
   RowBox[{"1616025600000", "\[Rule]", "2.245`*^6"}], ",", 
   RowBox[{"1616112000000", "\[Rule]", "2.223`*^6"}], ",", 
   RowBox[{"1616198400000", "\[Rule]", "2.201`*^6"}], ",", 
   RowBox[{"1616284800000", "\[Rule]", "2.199`*^6"}], ",", 
   RowBox[{"1616371200000", "\[Rule]", "2.204`*^6"}], ",", 
   RowBox[{"1616457600000", "\[Rule]", "2.209`*^6"}], ",", 
   RowBox[{"1616544000000", "\[Rule]", "2.24`*^6"}], ",", 
   RowBox[{"1616630400000", "\[Rule]", "2.244`*^6"}], ",", 
   RowBox[{"1616716800000", "\[Rule]", "2.225`*^6"}], ",", 
   RowBox[{"1616803200000", "\[Rule]", "2.198`*^6"}], ",", 
   RowBox[{"1616889600000", "\[Rule]", "2.195`*^6"}], ",", 
   RowBox[{"1616976000000", "\[Rule]", "2.195`*^6"}], ",", 
   RowBox[{"1617062400000", "\[Rule]", "2.208`*^6"}], ",", 
   RowBox[{"1617148800000", "\[Rule]", "2.219`*^6"}], ",", 
   RowBox[{"1617235200000", "\[Rule]", "2.2`*^6"}], ",", 
   RowBox[{"1617321600000", "\[Rule]", "2.2`*^6"}], ",", 
   RowBox[{"1617408000000", "\[Rule]", "2.197`*^6"}], ",", 
   RowBox[{"1617494400000", "\[Rule]", "2.208`*^6"}], ",", 
   RowBox[{"1617580800000", "\[Rule]", "2.239`*^6"}], ",", 
   RowBox[{"1617667200000", "\[Rule]", "2.22`*^6"}], ",", 
   RowBox[{"1617753600000", "\[Rule]", "2.237`*^6"}], ",", 
   RowBox[{"1617840000000", "\[Rule]", "2.255`*^6"}], ",", 
   RowBox[{"1617926400000", "\[Rule]", "2.264`*^6"}], ",", 
   RowBox[{"1618012800000", "\[Rule]", "2.3`*^6"}], ",", 
   RowBox[{"1618099200000", "\[Rule]", "2.3`*^6"}], ",", 
   RowBox[{"1618185600000", "\[Rule]", "2.326`*^6"}], ",", 
   RowBox[{"1618272000000", "\[Rule]", "2.361`*^6"}], ",", 
   RowBox[{"1618358400000", "\[Rule]", "2.405`*^6"}], ",", 
   RowBox[{"1618444800000", "\[Rule]", "2.394`*^6"}], ",", 
   RowBox[{"1618531200000", "\[Rule]", "2.386`*^6"}], ",", 
   RowBox[{"1618617600000", "\[Rule]", "2.37`*^6"}], ",", 
   RowBox[{"1618704000000", "\[Rule]", "2.332`*^6"}], ",", 
   RowBox[{"1618790400000", "\[Rule]", "2.406`*^6"}], ",", 
   RowBox[{"1618876800000", "\[Rule]", "2.388`*^6"}], ",", 
   RowBox[{"1618963200000", "\[Rule]", "2.367`*^6"}], ",", 
   RowBox[{"1619049600000", "\[Rule]", "2.366`*^6"}], ",", 
   RowBox[{"1619136000000", "\[Rule]", "2.346`*^6"}], ",", 
   RowBox[{"1619222400000", "\[Rule]", "2.298`*^6"}], ",", 
   RowBox[{"1619308800000", "\[Rule]", "2.297`*^6"}], ",", 
   RowBox[{"1619395200000", "\[Rule]", "2.296`*^6"}], ",", 
   RowBox[{"1619481600000", "\[Rule]", "2.3`*^6"}], ",", 
   RowBox[{"1619568000000", "\[Rule]", "2.304`*^6"}], ",", 
   RowBox[{"1619654400000", "\[Rule]", "2.308`*^6"}], ",", 
   RowBox[{"1619740800000", "\[Rule]", "2.305`*^6"}], ",", 
   RowBox[{"1619827200000", "\[Rule]", "2.301`*^6"}], ",", 
   RowBox[{"1619913600000", "\[Rule]", "2.309`*^6"}], ",", 
   RowBox[{"1620000000000", "\[Rule]", "2.298`*^6"}], ",", 
   RowBox[{"1620086400000", "\[Rule]", "2.296`*^6"}], ",", 
   RowBox[{"1620172800000", "\[Rule]", "2.293`*^6"}], ",", 
   RowBox[{"1620259200000", "\[Rule]", "2.306`*^6"}], ",", 
   RowBox[{"1620345600000", "\[Rule]", "2.31`*^6"}], ",", 
   RowBox[{"1620432000000", "\[Rule]", "2.314`*^6"}], ",", 
   RowBox[{"1620518400000", "\[Rule]", "2.313`*^6"}], ",", 
   RowBox[{"1620604800000", "\[Rule]", "2.38`*^6"}], ",", 
   RowBox[{"1620691200000", "\[Rule]", "2.401`*^6"}], ",", 
   RowBox[{"1620777600000", "\[Rule]", "2.411`*^6"}], ",", 
   RowBox[{"1620864000000", "\[Rule]", "2.438`*^6"}], ",", 
   RowBox[{"1620950400000", "\[Rule]", "2.398`*^6"}], ",", 
   RowBox[{"1621036800000", "\[Rule]", "2.341`*^6"}], ",", 
   RowBox[{"1621123200000", "\[Rule]", "2.377`*^6"}], ",", 
   RowBox[{"1621209600000", "\[Rule]", "2.406`*^6"}], ",", 
   RowBox[{"1621296000000", "\[Rule]", "2.421`*^6"}], ",", 
   RowBox[{"1621382400000", "\[Rule]", "2.405`*^6"}], ",", 
   RowBox[{"1621468800000", "\[Rule]", "2.374`*^6"}], ",", 
   RowBox[{"1621555200000", "\[Rule]", "2.366`*^6"}], ",", 
   RowBox[{"1621641600000", "\[Rule]", "2.346`*^6"}], ",", 
   RowBox[{"1621728000000", "\[Rule]", "2.375`*^6"}], ",", 
   RowBox[{"1621814400000", "\[Rule]", "2.386`*^6"}], ",", 
   RowBox[{"1621900800000", "\[Rule]", "2.382`*^6"}], ",", 
   RowBox[{"1621987200000", "\[Rule]", "2.365`*^6"}], ",", 
   RowBox[{"1622073600000", "\[Rule]", "2.385`*^6"}], ",", 
   RowBox[{"1622160000000", "\[Rule]", "2.381`*^6"}], ",", 
   RowBox[{"1622246400000", "\[Rule]", "2.417`*^6"}], ",", 
   RowBox[{"1622332800000", "\[Rule]", "2.39`*^6"}], ",", 
   RowBox[{"1622419200000", "\[Rule]", "2.392`*^6"}], ",", 
   RowBox[{"1622505600000", "\[Rule]", "2.402`*^6"}], ",", 
   RowBox[{"1622592000000", "\[Rule]", "2.397`*^6"}], ",", 
   RowBox[{"1622678400000", "\[Rule]", "2.391`*^6"}], ",", 
   RowBox[{"1622764800000", "\[Rule]", "2.39`*^6"}], ",", 
   RowBox[{"1622851200000", "\[Rule]", "2.397`*^6"}], ",", 
   RowBox[{"1622937600000", "\[Rule]", "2.405`*^6"}], ",", 
   RowBox[{"1623024000000", "\[Rule]", "2.415`*^6"}], ",", 
   RowBox[{"1623110400000", "\[Rule]", "2.451`*^6"}], ",", 
   RowBox[{"1623196800000", "\[Rule]", "2.441`*^6"}], ",", 
   RowBox[{"1623283200000", "\[Rule]", "2.504`*^6"}], ",", 
   RowBox[{"1623369600000", "\[Rule]", "2.497`*^6"}], ",", 
   RowBox[{"1623456000000", "\[Rule]", "2.504`*^6"}], ",", 
   RowBox[{"1623542400000", "\[Rule]", "2.472`*^6"}], ",", 
   RowBox[{"1623628800000", "\[Rule]", "2.476`*^6"}], ",", 
   RowBox[{"1623715200000", "\[Rule]", "2.489`*^6"}], ",", 
   RowBox[{"1623801600000", "\[Rule]", "2.479`*^6"}], ",", 
   RowBox[{"1623888000000", "\[Rule]", "2.484`*^6"}], ",", 
   RowBox[{"1623974400000", "\[Rule]", "2.478`*^6"}], ",", 
   RowBox[{"1624060800000", "\[Rule]", "2.472`*^6"}], ",", 
   RowBox[{"1624147200000", "\[Rule]", "2.474`*^6"}], ",", 
   RowBox[{"1624233600000", "\[Rule]", "2.481`*^6"}], ",", 
   RowBox[{"1624320000000", "\[Rule]", "2.491`*^6"}], ",", 
   RowBox[{"1624406400000", "\[Rule]", "2.5`*^6"}], ",", 
   RowBox[{"1624492800000", "\[Rule]", "2.502`*^6"}], ",", 
   RowBox[{"1624579200000", "\[Rule]", "2.49999999`*^6"}], ",", 
   RowBox[{"1624665600000", "\[Rule]", "2.51`*^6"}], ",", 
   RowBox[{"1624752000000", "\[Rule]", "2.56`*^6"}], ",", 
   RowBox[{"1624838400000", "\[Rule]", "2.548`*^6"}], ",", 
   RowBox[{"1624924800000", "\[Rule]", "2.552`*^6"}], ",", 
   RowBox[{"1625011200000", "\[Rule]", "2.566`*^6"}], ",", 
   RowBox[{"1625097600000", "\[Rule]", "2.57`*^6"}], ",", 
   RowBox[{"1625184000000", "\[Rule]", "2.564`*^6"}], ",", 
   RowBox[{"1625270400000", "\[Rule]", "2.559`*^6"}], ",", 
   RowBox[{"1625356800000", "\[Rule]", "2.602`*^6"}], ",", 
   RowBox[{"1625443200000", "\[Rule]", "2.621`*^6"}], ",", 
   RowBox[{"1625529600000", "\[Rule]", "2.613`*^6"}], ",", 
   RowBox[{"1625616000000", "\[Rule]", "2.726`*^6"}], ",", 
   RowBox[{"1625702400000", "\[Rule]", "2.693`*^6"}], ",", 
   RowBox[{"1625788800000", "\[Rule]", "2.689`*^6"}], ",", 
   RowBox[{"1625875200000", "\[Rule]", "2.664`*^6"}], ",", 
   RowBox[{"1625961600000", "\[Rule]", "2.649`*^6"}], ",", 
   RowBox[{"1626048000000", "\[Rule]", "2.7`*^6"}], ",", 
   RowBox[{"1626134400000", "\[Rule]", "2.71`*^6"}], ",", 
   RowBox[{"1626220800000", "\[Rule]", "2.698`*^6"}], ",", 
   RowBox[{"1626307200000", "\[Rule]", "2.7`*^6"}], ",", 
   RowBox[{"1626393600000", "\[Rule]", "2.696`*^6"}], ",", 
   RowBox[{"1626480000000", "\[Rule]", "2.686`*^6"}], ",", 
   RowBox[{"1626566400000", "\[Rule]", "2.693`*^6"}], ",", 
   RowBox[{"1626652800000", "\[Rule]", "2.687`*^6"}], ",", 
   RowBox[{"1626739200000", "\[Rule]", "2.667`*^6"}], ",", 
   RowBox[{"1626825600000", "\[Rule]", "2.673`*^6"}], ",", 
   RowBox[{"1626912000000", "\[Rule]", "2.65`*^6"}], ",", 
   RowBox[{"1626998400000", "\[Rule]", "2.634`*^6"}], ",", 
   RowBox[{"1627084800000", "\[Rule]", "2.618`*^6"}], ",", 
   RowBox[{"1627171200000", "\[Rule]", "2.581`*^6"}], ",", 
   RowBox[{"1627257600000", "\[Rule]", "2.613`*^6"}], ",", 
   RowBox[{"1627344000000", "\[Rule]", "2.72`*^6"}], ",", 
   RowBox[{"1627430400000", "\[Rule]", "2.72`*^6"}], ",", 
   RowBox[{"1627516800000", "\[Rule]", "2.721`*^6"}], ",", 
   RowBox[{"1627603200000", "\[Rule]", "2.72`*^6"}], ",", 
   RowBox[{"1627689600000", "\[Rule]", "2.644`*^6"}], ",", 
   RowBox[{"1627776000000", "\[Rule]", "2.691`*^6"}], ",", 
   RowBox[{"1627862400000", "\[Rule]", "2.696`*^6"}], ",", 
   RowBox[{"1627948800000", "\[Rule]", "2.71`*^6"}], ",", 
   RowBox[{"1628035200000", "\[Rule]", "2.688`*^6"}], ",", 
   RowBox[{"1628121600000", "\[Rule]", "2.681`*^6"}], ",", 
   RowBox[{"1628208000000", "\[Rule]", "2.665`*^6"}], ",", 
   RowBox[{"1628294400000", "\[Rule]", "2.633`*^6"}], ",", 
   RowBox[{"1628380800000", "\[Rule]", "2.626`*^6"}], ",", 
   RowBox[{"1628467200000", "\[Rule]", "2.636`*^6"}], ",", 
   RowBox[{"1628553600000", "\[Rule]", "2.631`*^6"}], ",", 
   RowBox[{"1628640000000", "\[Rule]", "2.616`*^6"}], ",", 
   RowBox[{"1628726400000", "\[Rule]", "2.616`*^6"}], ",", 
   RowBox[{"1628812800000", "\[Rule]", "2.599`*^6"}], ",", 
   RowBox[{"1628899200000", "\[Rule]", "2.589`*^6"}], ",", 
   RowBox[{"1628985600000", "\[Rule]", "2.561`*^6"}], ",", 
   RowBox[{"1629072000000", "\[Rule]", "2.591`*^6"}], ",", 
   RowBox[{"1629158400000", "\[Rule]", "2.575`*^6"}], ",", 
   RowBox[{"1629244800000", "\[Rule]", "2.565`*^6"}], ",", 
   RowBox[{"1629331200000", "\[Rule]", "2.551`*^6"}], ",", 
   RowBox[{"1629417600000", "\[Rule]", "2.556`*^6"}], ",", 
   RowBox[{"1629504000000", "\[Rule]", "2.559`*^6"}], ",", 
   RowBox[{"1629590400000", "\[Rule]", "2.58`*^6"}], ",", 
   RowBox[{"1629676800000", "\[Rule]", "2.592`*^6"}], ",", 
   RowBox[{"1629763200000", "\[Rule]", "2.563`*^6"}], ",", 
   RowBox[{"1629849600000", "\[Rule]", "2.587`*^6"}], ",", 
   RowBox[{"1629936000000", "\[Rule]", "2.59`*^6"}], ",", 
   RowBox[{"1630022400000", "\[Rule]", "2.586`*^6"}], ",", 
   RowBox[{"1630108800000", "\[Rule]", "2.58`*^6"}], ",", 
   RowBox[{"1630195200000", "\[Rule]", "2.579`*^6"}], ",", 
   RowBox[{"1630281600000", "\[Rule]", "2.579`*^6"}], ",", 
   RowBox[{"1630368000000", "\[Rule]", "2.587`*^6"}], ",", 
   RowBox[{"1630454400000", "\[Rule]", "2.588`*^6"}], ",", 
   RowBox[{"1630540800000", "\[Rule]", "2.591`*^6"}], ",", 
   RowBox[{"1630627200000", "\[Rule]", "2.585`*^6"}], ",", 
   RowBox[{"1630713600000", "\[Rule]", "2.59`*^6"}], ",", 
   RowBox[{"1630800000000", "\[Rule]", "2.592`*^6"}], ",", 
   RowBox[{"1630886400000", "\[Rule]", "2.598`*^6"}], ",", 
   RowBox[{"1630972800000", "\[Rule]", "2.615`*^6"}], ",", 
   RowBox[{"1631059200000", "\[Rule]", "2.621`*^6"}], ",", 
   RowBox[{"1631145600000", "\[Rule]", "2.633`*^6"}], ",", 
   RowBox[{"1631232000000", "\[Rule]", "2.641`*^6"}], ",", 
   RowBox[{"1631318400000", "\[Rule]", "2.637`*^6"}], ",", 
   RowBox[{"1631404800000", "\[Rule]", "2.634`*^6"}], ",", 
   RowBox[{"1631491200000", "\[Rule]", "2.643`*^6"}], ",", 
   RowBox[{"1631577600000", "\[Rule]", "2.654`*^6"}], ",", 
   RowBox[{"1631664000000", "\[Rule]", "2.656`*^6"}], ",", 
   RowBox[{"1631750400000", "\[Rule]", "2.662`*^6"}], ",", 
   RowBox[{"1631836800000", "\[Rule]", "2.698`*^6"}], ",", 
   RowBox[{"1631923200000", "\[Rule]", "2.694`*^6"}], ",", 
   RowBox[{"1632009600000", "\[Rule]", "2.7`*^6"}], ",", 
   RowBox[{"1632096000000", "\[Rule]", "2.71`*^6"}], ",", 
   RowBox[{"1632182400000", "\[Rule]", "2.746`*^6"}], ",", 
   RowBox[{"1632268800000", "\[Rule]", "2.743`*^6"}], ",", 
   RowBox[{"1632355200000", "\[Rule]", "2.729`*^6"}], ",", 
   RowBox[{"1632441600000", "\[Rule]", "2.731`*^6"}], ",", 
   RowBox[{"1632528000000", "\[Rule]", "2.726`*^6"}], ",", 
   RowBox[{"1632614400000", "\[Rule]", "2.737`*^6"}], ",", 
   RowBox[{"1632700800000", "\[Rule]", "2.757`*^6"}], ",", 
   RowBox[{"1632787200000", "\[Rule]", "2.771`*^6"}], ",", 
   RowBox[{"1632873600000", "\[Rule]", "2.791`*^6"}], ",", 
   RowBox[{"1632960000000", "\[Rule]", "2.794`*^6"}], ",", 
   RowBox[{"1633046400000", "\[Rule]", "2.802`*^6"}], ",", 
   RowBox[{"1633132800000", "\[Rule]", "2.778`*^6"}], ",", 
   RowBox[{"1633219200000", "\[Rule]", "2.79`*^6"}], ",", 
   RowBox[{"1633305600000", "\[Rule]", "2.796`*^6"}], ",", 
   RowBox[{"1633392000000", "\[Rule]", "2.763`*^6"}], ",", 
   RowBox[{"1633478400000", "\[Rule]", "2.771`*^6"}], ",", 
   RowBox[{"1633564800000", "\[Rule]", "2.779`*^6"}], ",", 
   RowBox[{"1633651200000", "\[Rule]", "2.78`*^6"}], ",", 
   RowBox[{"1633737600000", "\[Rule]", "2.776`*^6"}], ",", 
   RowBox[{"1633824000000", "\[Rule]", "2.783`*^6"}], ",", 
   RowBox[{"1633910400000", "\[Rule]", "2.793`*^6"}], ",", 
   RowBox[{"1633996800000", "\[Rule]", "2.808`*^6"}], ",", 
   RowBox[{"1634083200000", "\[Rule]", "2.835`*^6"}], ",", 
   RowBox[{"1634169600000", "\[Rule]", "2.829`*^6"}], ",", 
   RowBox[{"1634256000000", "\[Rule]", "2.83`*^6"}], ",", 
   RowBox[{"1634342400000", "\[Rule]", "2.83`*^6"}], ",", 
   RowBox[{"1634428800000", "\[Rule]", "2.832`*^6"}], ",", 
   RowBox[{"1634515200000", "\[Rule]", "2.832`*^6"}], ",", 
   RowBox[{"1634601600000", "\[Rule]", "2.846`*^6"}], ",", 
   RowBox[{"1634688000000", "\[Rule]", "2.891`*^6"}], ",", 
   RowBox[{"1634774400000", "\[Rule]", "2.945`*^6"}], ",", 
   RowBox[{"1634860800000", "\[Rule]", "2.93`*^6"}], ",", 
   RowBox[{"1634947200000", "\[Rule]", "2.952`*^6"}], ",", 
   RowBox[{"1635033600000", "\[Rule]", "2.955`*^6"}], ",", 
   RowBox[{"1635120000000", "\[Rule]", "2.94`*^6"}], ",", 
   RowBox[{"1635206400000", "\[Rule]", "2.943`*^6"}], ",", 
   RowBox[{"1635292800000", "\[Rule]", "2.938`*^6"}], ",", 
   RowBox[{"1635379200000", "\[Rule]", "2.942`*^6"}], ",", 
   RowBox[{"1635465600000", "\[Rule]", "2.924`*^6"}], ",", 
   RowBox[{"1635552000000", "\[Rule]", "2.855`*^6"}], ",", 
   RowBox[{"1635638400000", "\[Rule]", "2.845`*^6"}], ",", 
   RowBox[{"1635724800000", "\[Rule]", "2.84`*^6"}], ",", 
   RowBox[{"1635811200000", "\[Rule]", "2.841`*^6"}], ",", 
   RowBox[{"1635897600000", "\[Rule]", "2.882`*^6"}], ",", 
   RowBox[{"1635984000000", "\[Rule]", "2.91`*^6"}], ",", 
   RowBox[{"1636070400000", "\[Rule]", "2.871`*^6"}], ",", 
   RowBox[{"1636156800000", "\[Rule]", "2.9`*^6"}], ",", 
   RowBox[{"1636243200000", "\[Rule]", "2.906`*^6"}], ",", 
   RowBox[{"1636329600000", "\[Rule]", "2.907`*^6"}], ",", 
   RowBox[{"1636416000000", "\[Rule]", "2.98`*^6"}], ",", 
   RowBox[{"1636502400000", "\[Rule]", "2.953`*^6"}], ",", 
   RowBox[{"1636588800000", "\[Rule]", "2.951`*^6"}], ",", 
   RowBox[{"1636675200000", "\[Rule]", "2.932`*^6"}], ",", 
   RowBox[{"1636761600000", "\[Rule]", "2.929`*^6"}], ",", 
   RowBox[{"1636848000000", "\[Rule]", "2.914`*^6"}], ",", 
   RowBox[{"1636934400000", "\[Rule]", "2.926`*^6"}], ",", 
   RowBox[{"1637020800000", "\[Rule]", "2.908`*^6"}], ",", 
   RowBox[{"1637107200000", "\[Rule]", "2.895`*^6"}], ",", 
   RowBox[{"1637193600000", "\[Rule]", "2.891`*^6"}], ",", 
   RowBox[{"1637280000000", "\[Rule]", "2.857`*^6"}], ",", 
   RowBox[{"1637366400000", "\[Rule]", "2.848`*^6"}], ",", 
   RowBox[{"1637452800000", "\[Rule]", "2.851`*^6"}], ",", 
   RowBox[{"1637539200000", "\[Rule]", "2.857`*^6"}], ",", 
   RowBox[{"1637625600000", "\[Rule]", "2.856`*^6"}], ",", 
   RowBox[{"1637712000000", "\[Rule]", "2.857`*^6"}], ",", 
   RowBox[{"1637798400000", "\[Rule]", "2.802`*^6"}], ",", 
   RowBox[{"1637884800000", "\[Rule]", "2.755`*^6"}], ",", 
   RowBox[{"1637971200000", "\[Rule]", "2.781`*^6"}], ",", 
   RowBox[{"1638057600000", "\[Rule]", "2.801`*^6"}], ",", 
   RowBox[{"1638144000000", "\[Rule]", "2.794`*^6"}], ",", 
   RowBox[{"1638230400000", "\[Rule]", "2.786`*^6"}], ",", 
   RowBox[{"1638316800000", "\[Rule]", "2.778`*^6"}], ",", 
   RowBox[{"1638403200000", "\[Rule]", "2.784`*^6"}], ",", 
   RowBox[{"1638489600000", "\[Rule]", "2.802`*^6"}], ",", 
   RowBox[{"1638576000000", "\[Rule]", "2.78`*^6"}], ",", 
   RowBox[{"1638662400000", "\[Rule]", "2.781`*^6"}], ",", 
   RowBox[{"1638748800000", "\[Rule]", "2.792`*^6"}], ",", 
   RowBox[{"1638835200000", "\[Rule]", "2.767`*^6"}], ",", 
   RowBox[{"1638921600000", "\[Rule]", "2.785`*^6"}], ",", 
   RowBox[{"1639008000000", "\[Rule]", "2.767`*^6"}], ",", 
   RowBox[{"1639094400000", "\[Rule]", "2.768`*^6"}], ",", 
   RowBox[{"1639180800000", "\[Rule]", "2.764`*^6"}], ",", 
   RowBox[{"1639267200000", "\[Rule]", "2.78`*^6"}], ",", 
   RowBox[{"1639353600000", "\[Rule]", "2.767`*^6"}], ",", 
   RowBox[{"1639440000000", "\[Rule]", "2.76`*^6"}], ",", 
   RowBox[{"1639526400000", "\[Rule]", "2.759`*^6"}], ",", 
   RowBox[{"1639612800000", "\[Rule]", "2.766`*^6"}], ",", 
   RowBox[{"1639699200000", "\[Rule]", "2.76`*^6"}], ",", 
   RowBox[{"1639785600000", "\[Rule]", "2.752`*^6"}], ",", 
   RowBox[{"1639872000000", "\[Rule]", "2.751`*^6"}], ",", 
   RowBox[{"1639958400000", "\[Rule]", "2.775`*^6"}], ",", 
   RowBox[{"1640044800000", "\[Rule]", "2.768`*^6"}], ",", 
   RowBox[{"1640131200000", "\[Rule]", "2.929`*^6"}], ",", 
   RowBox[{"1640217600000", "\[Rule]", "2.913`*^6"}], ",", 
   RowBox[{"1640304000000", "\[Rule]", "2.809`*^6"}], ",", 
   RowBox[{"1640390400000", "\[Rule]", "2.786`*^6"}], ",", 
   RowBox[{"1640476800000", "\[Rule]", "2.763`*^6"}], ",", 
   RowBox[{"1640563200000", "\[Rule]", "2.775`*^6"}], ",", 
   RowBox[{"1640649600000", "\[Rule]", "2.777`*^6"}], ",", 
   RowBox[{"1640736000000", "\[Rule]", "2.767`*^6"}], ",", 
   RowBox[{"1640822400000", "\[Rule]", "2.765`*^6"}], ",", 
   RowBox[{"1640908800000", "\[Rule]", "2.758`*^6"}], ",", 
   RowBox[{"1640995200000", "\[Rule]", "2.752`*^6"}], ",", 
   RowBox[{"1641081600000", "\[Rule]", "2.746`*^6"}], ",", 
   RowBox[{"1641168000000", "\[Rule]", "2.781`*^6"}], ",", 
   RowBox[{"1641254400000", "\[Rule]", "2.776`*^6"}], ",", 
   RowBox[{"1641340800000", "\[Rule]", "2.756`*^6"}], ",", 
   RowBox[{"1641427200000", "\[Rule]", "2.754`*^6"}], ",", 
   RowBox[{"1641513600000", "\[Rule]", "2.759`*^6"}], ",", 
   RowBox[{"1641600000000", "\[Rule]", "2.735`*^6"}], ",", 
   RowBox[{"1641686400000", "\[Rule]", "2.739`*^6"}], ",", 
   RowBox[{"1641772800000", "\[Rule]", "2.748`*^6"}], ",", 
   RowBox[{"1641859200000", "\[Rule]", "2.739`*^6"}], ",", 
   RowBox[{"1641945600000", "\[Rule]", "2.736`*^6"}], ",", 
   RowBox[{"1642032000000", "\[Rule]", "2.742`*^6"}], ",", 
   RowBox[{"1642118400000", "\[Rule]", "2.752`*^6"}], ",", 
   RowBox[{"1642204800000", "\[Rule]", "2.746`*^6"}], ",", 
   RowBox[{"1642291200000", "\[Rule]", "2.75`*^6"}], ",", 
   RowBox[{"1642377600000", "\[Rule]", "2.747`*^6"}], ",", 
   RowBox[{"1642464000000", "\[Rule]", "2.751`*^6"}], ",", 
   RowBox[{"1642550400000", "\[Rule]", "2.754`*^6"}], ",", 
   RowBox[{"1642636800000", "\[Rule]", "2.75`*^6"}], ",", 
   RowBox[{"1642723200000", "\[Rule]", "2.749`*^6"}], ",", 
   RowBox[{"1642809600000", "\[Rule]", "2.75`*^6"}], ",", 
   RowBox[{"1642896000000", "\[Rule]", "2.75`*^6"}], ",", 
   RowBox[{"1642982400000", "\[Rule]", "2.747`*^6"}], ",", 
   RowBox[{"1643068800000", "\[Rule]", "2.755`*^6"}], ",", 
   RowBox[{"1643155200000", "\[Rule]", "2.755`*^6"}], ",", 
   RowBox[{"1643241600000", "\[Rule]", "2.749`*^6"}], ",", 
   RowBox[{"1643328000000", "\[Rule]", "2.743`*^6"}], ",", 
   RowBox[{"1643414400000", "\[Rule]", "2.817`*^6"}], ",", 
   RowBox[{"1643500800000", "\[Rule]", "2.785`*^6"}], ",", 
   RowBox[{"1643587200000", "\[Rule]", "2.8`*^6"}], ",", 
   RowBox[{"1643673600000", "\[Rule]", "2.786`*^6"}], ",", 
   RowBox[{"1643760000000", "\[Rule]", "2.785`*^6"}], ",", 
   RowBox[{"1643846400000", "\[Rule]", "2.768`*^6"}], ",", 
   RowBox[{"1643932800000", "\[Rule]", "2.763`*^6"}], ",", 
   RowBox[{"1644019200000", "\[Rule]", "2.758`*^6"}], ",", 
   RowBox[{"1644105600000", "\[Rule]", "2.753`*^6"}], ",", 
   RowBox[{"1644192000000", "\[Rule]", "2.776`*^6"}], ",", 
   RowBox[{"1644278400000", "\[Rule]", "2.759`*^6"}], ",", 
   RowBox[{"1644364800000", "\[Rule]", "2.762`*^6"}], ",", 
   RowBox[{"1644451200000", "\[Rule]", "2.771`*^6"}], ",", 
   RowBox[{"1644537600000", "\[Rule]", "2.766`*^6"}], ",", 
   RowBox[{"1644624000000", "\[Rule]", "2.78`*^6"}], ",", 
   RowBox[{"1644710400000", "\[Rule]", "2.785`*^6"}], ",", 
   RowBox[{"1644796800000", "\[Rule]", "2.784`*^6"}], ",", 
   RowBox[{"1644883200000", "\[Rule]", "2.795`*^6"}], ",", 
   RowBox[{"1644969600000", "\[Rule]", "2.797`*^6"}], ",", 
   RowBox[{"1645056000000", "\[Rule]", "2.796`*^6"}], ",", 
   RowBox[{"1645142400000", "\[Rule]", "2.805`*^6"}], ",", 
   RowBox[{"1645228800000", "\[Rule]", "2.816`*^6"}], ",", 
   RowBox[{"1645315200000", "\[Rule]", "2.816`*^6"}], ",", 
   RowBox[{"1645401600000", "\[Rule]", "2.808`*^6"}], ",", 
   RowBox[{"1645488000000", "\[Rule]", "2.804`*^6"}], ",", 
   RowBox[{"1645574400000", "\[Rule]", "2.81`*^6"}], ",", 
   RowBox[{"1645660800000", "\[Rule]", "2.796`*^6"}], ",", 
   RowBox[{"1645747200000", "\[Rule]", "2.786`*^6"}], ",", 
   RowBox[{"1645833600000", "\[Rule]", "2.92`*^6"}], ",", 
   RowBox[{"1645920000000", "\[Rule]", "2.982`*^6"}], ",", 
   RowBox[{"1646006400000", "\[Rule]", "2.98`*^6"}], ",", 
   RowBox[{"1646092800000", "\[Rule]", "2.867`*^6"}], ",", 
   RowBox[{"1646179200000", "\[Rule]", "2.802`*^6"}], ",", 
   RowBox[{"1646265600000", "\[Rule]", "2.802`*^6"}], ",", 
   RowBox[{"1646352000000", "\[Rule]", "2.999`*^6"}], ",", 
   RowBox[{"1646438400000", "\[Rule]", "3.064`*^6"}], ",", 
   RowBox[{"1646524800000", "\[Rule]", "3.01`*^6"}], ",", 
   RowBox[{"1646611200000", "\[Rule]", "2.902`*^6"}], ",", 
   RowBox[{"1646697600000", "\[Rule]", "2.946`*^6"}], ",", 
   RowBox[{"1646784000000", "\[Rule]", "2.928`*^6"}], ",", 
   RowBox[{"1646870400000", "\[Rule]", "2.898`*^6"}], ",", 
   RowBox[{"1646956800000", "\[Rule]", "2.894`*^6"}], ",", 
   RowBox[{"1647043200000", "\[Rule]", "2.87`*^6"}], ",", 
   RowBox[{"1647129600000", "\[Rule]", "2.905`*^6"}], ",", 
   RowBox[{"1647216000000", "\[Rule]", "2.907`*^6"}], ",", 
   RowBox[{"1647302400000", "\[Rule]", "2.927`*^6"}], ",", 
   RowBox[{"1647388800000", "\[Rule]", "2.972`*^6"}], ",", 
   RowBox[{"1647475200000", "\[Rule]", "2.991`*^6"}], ",", 
   RowBox[{"1647561600000", "\[Rule]", "2.99`*^6"}], ",", 
   RowBox[{"1647648000000", "\[Rule]", "2.966`*^6"}], ",", 
   RowBox[{"1647734400000", "\[Rule]", "2.98`*^6"}], ",", 
   RowBox[{"1647820800000", "\[Rule]", "2.999`*^6"}], ",", 
   RowBox[{"1647907200000", "\[Rule]", "3.095`*^6"}], ",", 
   RowBox[{"1647993600000", "\[Rule]", "3.008`*^6"}], ",", 
   RowBox[{"1648080000000", "\[Rule]", "3.007`*^6"}], ",", 
   RowBox[{"1648166400000", "\[Rule]", "3.006`*^6"}], ",", 
   RowBox[{"1648252800000", "\[Rule]", "3.012`*^6"}], ",", 
   RowBox[{"1648339200000", "\[Rule]", "3.008`*^6"}], ",", 
   RowBox[{"1648425600000", "\[Rule]", "3.005`*^6"}], ",", 
   RowBox[{"1648512000000", "\[Rule]", "3.005`*^6"}], ",", 
   RowBox[{"1648598400000", "\[Rule]", "2.995`*^6"}], ",", 
   RowBox[{"1648684800000", "\[Rule]", "2.977`*^6"}], ",", 
   RowBox[{"1648771200000", "\[Rule]", "2.931`*^6"}], ",", 
   RowBox[{"1648857600000", "\[Rule]", "2.91`*^6"}], ",", 
   RowBox[{"1648944000000", "\[Rule]", "2.911`*^6"}], ",", 
   RowBox[{"1649030400000", "\[Rule]", "2.906`*^6"}], ",", 
   RowBox[{"1649116800000", "\[Rule]", "2.918`*^6"}], ",", 
   RowBox[{"1649203200000", "\[Rule]", "2.907`*^6"}], ",", 
   RowBox[{"1649289600000", "\[Rule]", "2.956`*^6"}], ",", 
   RowBox[{"1649376000000", "\[Rule]", "2.903`*^6"}], ",", 
   RowBox[{"1649462400000", "\[Rule]", "2.901`*^6"}], ",", 
   RowBox[{"1649548800000", "\[Rule]", "2.904`*^6"}], ",", 
   RowBox[{"1649635200000", "\[Rule]", "2.911`*^6"}], ",", 
   RowBox[{"1649721600000", "\[Rule]", "2.889`*^6"}], ",", 
   RowBox[{"1649808000000", "\[Rule]", "2.9`*^6"}], ",", 
   RowBox[{"1649894400000", "\[Rule]", "2.902`*^6"}], ",", 
   RowBox[{"1649980800000", "\[Rule]", "2.894`*^6"}], ",", 
   RowBox[{"1650067200000", "\[Rule]", "2.9`*^6"}], ",", 
   RowBox[{"1650153600000", "\[Rule]", "2.9`*^6"}], ",", 
   RowBox[{"1650240000000", "\[Rule]", "2.897`*^6"}], ",", 
   RowBox[{"1650326400000", "\[Rule]", "2.892`*^6"}], ",", 
   RowBox[{"1650412800000", "\[Rule]", "2.904`*^6"}], ",", 
   RowBox[{"1650499200000", "\[Rule]", "2.95`*^6"}], ",", 
   RowBox[{"1650585600000", "\[Rule]", "3.447`*^6"}], ",", 
   RowBox[{"1650672000000", "\[Rule]", "3.545`*^6"}], ",", 
   RowBox[{"1650758400000", "\[Rule]", "3.37`*^6"}], ",", 
   RowBox[{"1650844800000", "\[Rule]", "3.4`*^6"}], ",", 
   RowBox[{"1650931200000", "\[Rule]", "3.3`*^6"}], ",", 
   RowBox[{"1651017600000", "\[Rule]", "3.182`*^6"}], ",", 
   RowBox[{"1651104000000", "\[Rule]", "3.1`*^6"}], ",", 
   RowBox[{"1651190400000", "\[Rule]", "3.085`*^6"}], ",", 
   RowBox[{"1651276800000", "\[Rule]", "3.09`*^6"}], ",", 
   RowBox[{"1651363200000", "\[Rule]", "3.087`*^6"}], ",", 
   RowBox[{"1651449600000", "\[Rule]", "3.101`*^6"}], ",", 
   RowBox[{"1651536000000", "\[Rule]", "3.225`*^6"}], ",", 
   RowBox[{"1651622400000", "\[Rule]", "3.206`*^6"}], ",", 
   RowBox[{"1651708800000", "\[Rule]", "3.215`*^6"}], ",", 
   RowBox[{"1651795200000", "\[Rule]", "3.216`*^6"}], ",", 
   RowBox[{"1651881600000", "\[Rule]", "3.26`*^6"}], ",", 
   RowBox[{"1651968000000", "\[Rule]", "3.398`*^6"}], ",", 
   RowBox[{"1652054400000", "\[Rule]", "3.321`*^6"}], ",", 
   RowBox[{"1652140800000", "\[Rule]", "3.336`*^6"}], ",", 
   RowBox[{"1652227200000", "\[Rule]", "3.326`*^6"}], ",", 
   RowBox[{"1652313600000", "\[Rule]", "3.366`*^6"}], ",", 
   RowBox[{"1652400000000", "\[Rule]", "3.45`*^6"}], ",", 
   RowBox[{"1652486400000", "\[Rule]", "3.402`*^6"}], ",", 
   RowBox[{"1652572800000", "\[Rule]", "3.449`*^6"}], ",", 
   RowBox[{"1652659200000", "\[Rule]", "3.425`*^6"}], ",", 
   RowBox[{"1652745600000", "\[Rule]", "3.513`*^6"}], ",", 
   RowBox[{"1652832000000", "\[Rule]", "3.552`*^6"}], ",", 
   RowBox[{"1652918400000", "\[Rule]", "3.577`*^6"}], ",", 
   RowBox[{"1653004800000", "\[Rule]", "3.596`*^6"}], ",", 
   RowBox[{"1653091200000", "\[Rule]", "3.569`*^6"}], ",", 
   RowBox[{"1653177600000", "\[Rule]", "3.684`*^6"}], ",", 
   RowBox[{"1653264000000", "\[Rule]", "3.63`*^6"}], ",", 
   RowBox[{"1653350400000", "\[Rule]", "3.797`*^6"}], ",", 
   RowBox[{"1653436800000", "\[Rule]", "3.632`*^6"}], ",", 
   RowBox[{"1653523200000", "\[Rule]", "3.642`*^6"}], ",", 
   RowBox[{"1653609600000", "\[Rule]", "3.644`*^6"}], ",", 
   RowBox[{"1653696000000", "\[Rule]", "3.562`*^6"}], ",", 
   RowBox[{"1653782400000", "\[Rule]", "3.531`*^6"}], ",", 
   RowBox[{"1653868800000", "\[Rule]", "3.572`*^6"}], ",", 
   RowBox[{"1653955200000", "\[Rule]", "3.525`*^6"}], ",", 
   RowBox[{"1654041600000", "\[Rule]", "3.515`*^6"}], ",", 
   RowBox[{"1654128000000", "\[Rule]", "3.474`*^6"}], ",", 
   RowBox[{"1654214400000", "\[Rule]", "3.47`*^6"}], ",", 
   RowBox[{"1654300800000", "\[Rule]", "3.462`*^6"}], ",", 
   RowBox[{"1654387200000", "\[Rule]", "3.461`*^6"}], ",", 
   RowBox[{"1654473600000", "\[Rule]", "3.475`*^6"}], ",", 
   RowBox[{"1654560000000", "\[Rule]", "3.799`*^6"}], ",", 
   RowBox[{"1654646400000", "\[Rule]", "3.864`*^6"}], ",", 
   RowBox[{"1654732800000", "\[Rule]", "3.802`*^6"}], ",", 
   RowBox[{"1654819200000", "\[Rule]", "3.812`*^6"}], ",", 
   RowBox[{"1654905600000", "\[Rule]", "3.845`*^6"}], ",", 
   RowBox[{"1654992000000", "\[Rule]", "3.89`*^6"}], ",", 
   RowBox[{"1655078400000", "\[Rule]", "3.93`*^6"}], ",", 
   RowBox[{"1655164800000", "\[Rule]", "3.786`*^6"}], ",", 
   RowBox[{"1655251200000", "\[Rule]", "3.645`*^6"}], ",", 
   RowBox[{"1655337600000", "\[Rule]", "3.652`*^6"}], ",", 
   RowBox[{"1655424000000", "\[Rule]", "3.615`*^6"}], ",", 
   RowBox[{"1655510400000", "\[Rule]", "3.653`*^6"}], ",", 
   RowBox[{"1655596800000", "\[Rule]", "3.616`*^6"}], ",", 
   RowBox[{"1655683200000", "\[Rule]", "3.694`*^6"}], ",", 
   RowBox[{"1655769600000", "\[Rule]", "3.692`*^6"}], ",", 
   RowBox[{"1655856000000", "\[Rule]", "3.666`*^6"}], ",", 
   RowBox[{"1655942400000", "\[Rule]", "3.722`*^6"}], ",", 
   RowBox[{"1656028800000", "\[Rule]", "3.7`*^6"}], ",", 
   RowBox[{"1656115200000", "\[Rule]", "3.686`*^6"}], ",", 
   RowBox[{"1656201600000", "\[Rule]", "3.659`*^6"}], ",", 
   RowBox[{"1656288000000", "\[Rule]", "3.645`*^6"}], ",", 
   RowBox[{"1656374400000", "\[Rule]", "3.677`*^6"}], ",", 
   RowBox[{"1656460800000", "\[Rule]", "3.665`*^6"}], ",", 
   RowBox[{"1656547200000", "\[Rule]", "3.649`*^6"}], ",", 
   RowBox[{"1656633600000", "\[Rule]", "3.634`*^6"}], ",", 
   RowBox[{"1656720000000", "\[Rule]", "3.648`*^6"}], ",", 
   RowBox[{"1656806400000", "\[Rule]", "3.655`*^6"}], ",", 
   RowBox[{"1656892800000", "\[Rule]", "3.665`*^6"}], ",", 
   RowBox[{"1656979200000", "\[Rule]", "3.721`*^6"}], ",", 
   RowBox[{"1657065600000", "\[Rule]", "3.688`*^6"}], ",", 
   RowBox[{"1657152000000", "\[Rule]", "3.705`*^6"}], ",", 
   RowBox[{"1657238400000", "\[Rule]", "3.681`*^6"}], ",", 
   RowBox[{"1657324800000", "\[Rule]", "3.689`*^6"}], ",", 
   RowBox[{"1657411200000", "\[Rule]", "3.7`*^6"}], ",", 
   RowBox[{"1657497600000", "\[Rule]", "3.75`*^6"}], ",", 
   RowBox[{"1657584000000", "\[Rule]", "3.92`*^6"}], ",", 
   RowBox[{"1657670400000", "\[Rule]", "3.778`*^6"}], ",", 
   RowBox[{"1657756800000", "\[Rule]", "3.78`*^6"}], ",", 
   RowBox[{"1657843200000", "\[Rule]", "3.78`*^6"}], ",", 
   RowBox[{"1657929600000", "\[Rule]", "3.766`*^6"}], ",", 
   RowBox[{"1658016000000", "\[Rule]", "3.801`*^6"}], ",", 
   RowBox[{"1658102400000", "\[Rule]", "3.816`*^6"}], ",", 
   RowBox[{"1658188800000", "\[Rule]", "3.8`*^6"}], ",", 
   RowBox[{"1658275200000", "\[Rule]", "3.81`*^6"}], ",", 
   RowBox[{"1658361600000", "\[Rule]", "3.808`*^6"}], ",", 
   RowBox[{"1658448000000", "\[Rule]", "3.833`*^6"}], ",", 
   RowBox[{"1658534400000", "\[Rule]", "3.821`*^6"}], ",", 
   RowBox[{"1658620800000", "\[Rule]", "3.855`*^6"}], ",", 
   RowBox[{"1658707200000", "\[Rule]", "3.877`*^6"}], ",", 
   RowBox[{"1658793600000", "\[Rule]", "3.952`*^6"}], ",", 
   RowBox[{"1658880000000", "\[Rule]", "3.929`*^6"}], ",", 
   RowBox[{"1658966400000", "\[Rule]", "3.91`*^6"}], ",", 
   RowBox[{"1659052800000", "\[Rule]", "3.911`*^6"}], ",", 
   RowBox[{"1659139200000", "\[Rule]", "3.954`*^6"}], ",", 
   RowBox[{"1659225600000", "\[Rule]", "3.95`*^6"}], ",", 
   RowBox[{"1659312000000", "\[Rule]", "3.931`*^6"}], ",", 
   RowBox[{"1659398400000", "\[Rule]", "3.961`*^6"}], ",", 
   RowBox[{"1659484800000", "\[Rule]", "4.002`*^6"}], ",", 
   RowBox[{"1659571200000", "\[Rule]", "4.087`*^6"}], ",", 
   RowBox[{"1659657600000", "\[Rule]", "4.082`*^6"}], ",", 
   RowBox[{"1659744000000", "\[Rule]", "4.069`*^6"}], ",", 
   RowBox[{"1659830400000", "\[Rule]", "4.114`*^6"}], ",", 
   RowBox[{"1659916800000", "\[Rule]", "4.116`*^6"}], ",", 
   RowBox[{"1660003200000", "\[Rule]", "4.12`*^6"}], ",", 
   RowBox[{"1660089600000", "\[Rule]", "4.131`*^6"}], ",", 
   RowBox[{"1660176000000", "\[Rule]", "4.146`*^6"}], ",", 
   RowBox[{"1660262400000", "\[Rule]", "4.134`*^6"}], ",", 
   RowBox[{"1660348800000", "\[Rule]", "4.17`*^6"}], ",", 
   RowBox[{"1660435200000", "\[Rule]", "4.162`*^6"}], ",", 
   RowBox[{"1660521600000", "\[Rule]", "4.183`*^6"}], ",", 
   RowBox[{"1660608000000", "\[Rule]", "4.212`*^6"}], ",", 
   RowBox[{"1660694400000", "\[Rule]", "4.184`*^6"}], ",", 
   RowBox[{"1660780800000", "\[Rule]", "4.207`*^6"}], ",", 
   RowBox[{"1660867200000", "\[Rule]", "4.216`*^6"}], ",", 
   RowBox[{"1660953600000", "\[Rule]", "4.5`*^6"}], ",", 
   RowBox[{"1661040000000", "\[Rule]", "4.604`*^6"}], ",", 
   RowBox[{"1661126400000", "\[Rule]", "4.507`*^6"}], ",", 
   RowBox[{"1661212800000", "\[Rule]", "4.459`*^6"}], ",", 
   RowBox[{"1661299200000", "\[Rule]", "4.447`*^6"}], ",", 
   RowBox[{"1661385600000", "\[Rule]", "4.448`*^6"}], ",", 
   RowBox[{"1661472000000", "\[Rule]", "4.461`*^6"}], ",", 
   RowBox[{"1661558400000", "\[Rule]", "4.434`*^6"}], ",", 
   RowBox[{"1661644800000", "\[Rule]", "4.433`*^6"}], ",", 
   RowBox[{"1661731200000", "\[Rule]", "4.471`*^6"}], ",", 
   RowBox[{"1661817600000", "\[Rule]", "4.439`*^6"}], ",", 
   RowBox[{"1661904000000", "\[Rule]", "4.446`*^6"}], ",", 
   RowBox[{"1661990400000", "\[Rule]", "4.433`*^6"}], ",", 
   RowBox[{"1662076800000", "\[Rule]", "4.5`*^6"}], ",", 
   RowBox[{"1662163200000", "\[Rule]", "4.446`*^6"}], ",", 
   RowBox[{"1662249600000", "\[Rule]", "4.459`*^6"}], ",", 
   RowBox[{"1662336000000", "\[Rule]", "4.45`*^6"}], ",", 
   RowBox[{"1662422400000", "\[Rule]", "4.465`*^6"}], ",", 
   RowBox[{"1662508800000", "\[Rule]", "4.464`*^6"}], ",", 
   RowBox[{"1662595200000", "\[Rule]", "4.471`*^6"}], ",", 
   RowBox[{"1662681600000", "\[Rule]", "4.463`*^6"}], ",", 
   RowBox[{"1662768000000", "\[Rule]", "4.36`*^6"}], ",", 
   RowBox[{"1662854400000", "\[Rule]", "4.373`*^6"}], ",", 
   RowBox[{"1662940800000", "\[Rule]", "4.394`*^6"}], ",", 
   RowBox[{"1663027200000", "\[Rule]", "4.407`*^6"}], ",", 
   RowBox[{"1663113600000", "\[Rule]", "4.428`*^6"}], ",", 
   RowBox[{"1663200000000", "\[Rule]", "4.443`*^6"}], ",", 
   RowBox[{"1663286400000", "\[Rule]", "4.451`*^6"}], ",", 
   RowBox[{"1663372800000", "\[Rule]", "4.469`*^6"}], ",", 
   RowBox[{"1663459200000", "\[Rule]", "4.457`*^6"}], ",", 
   RowBox[{"1663545600000", "\[Rule]", "4.485`*^6"}], ",", 
   RowBox[{"1663632000000", "\[Rule]", "4.561`*^6"}], ",", 
   RowBox[{"1663718400000", "\[Rule]", "4.5`*^6"}], ",", 
   RowBox[{"1663804800000", "\[Rule]", "4.53`*^6"}], ",", 
   RowBox[{"1663891200000", "\[Rule]", "5.44`*^6"}], ",", 
   RowBox[{"1663977600000", "\[Rule]", "5.32`*^6"}], ",", 
   RowBox[{"1664064000000", "\[Rule]", "5.275`*^6"}], ",", 
   RowBox[{"1664150400000", "\[Rule]", "5.175`*^6"}], ",", 
   RowBox[{"1664236800000", "\[Rule]", "4.622`*^6"}], ",", 
   RowBox[{"1664323200000", "\[Rule]", "4.627`*^6"}], ",", 
   RowBox[{"1664409600000", "\[Rule]", "4.604`*^6"}], ",", 
   RowBox[{"1664496000000", "\[Rule]", "4.502`*^6"}], ",", 
   RowBox[{"1664582400000", "\[Rule]", "4.42`*^6"}], ",", 
   RowBox[{"1664668800000", "\[Rule]", "4.39`*^6"}], ",", 
   RowBox[{"1664755200000", "\[Rule]", "4.405`*^6"}], ",", 
   RowBox[{"1664841600000", "\[Rule]", "4.415`*^6"}], ",", 
   RowBox[{"1664928000000", "\[Rule]", "4.422`*^6"}], ",", 
   RowBox[{"1665014400000", "\[Rule]", "4.634`*^6"}], ",", 
   RowBox[{"1665100800000", "\[Rule]", "4.524`*^6"}], ",", 
   RowBox[{"1665187200000", "\[Rule]", "4.437`*^6"}], ",", 
   RowBox[{"1665273600000", "\[Rule]", "4.446`*^6"}], ",", 
   RowBox[{"1665360000000", "\[Rule]", "4.433`*^6"}], ",", 
   RowBox[{"1665446400000", "\[Rule]", "4.471`*^6"}], ",", 
   RowBox[{"1665532800000", "\[Rule]", "4.462`*^6"}], ",", 
   RowBox[{"1665619200000", "\[Rule]", "4.5`*^6"}], ",", 
   RowBox[{"1665705600000", "\[Rule]", "4.485`*^6"}], ",", 
   RowBox[{"1665792000000", "\[Rule]", "4.464`*^6"}], ",", 
   RowBox[{"1665878400000", "\[Rule]", "4.499`*^6"}], ",", 
   RowBox[{"1665964800000", "\[Rule]", "4.521`*^6"}], ",", 
   RowBox[{"1666051200000", "\[Rule]", "4.509`*^6"}], ",", 
   RowBox[{"1666137600000", "\[Rule]", "4.525`*^6"}], ",", 
   RowBox[{"1666224000000", "\[Rule]", "4.663`*^6"}], ",", 
   RowBox[{"1666310400000", "\[Rule]", "4.681`*^6"}], ",", 
   RowBox[{"1666396800000", "\[Rule]", "4.661`*^6"}], ",", 
   RowBox[{"1666483200000", "\[Rule]", "4.732`*^6"}], ",", 
   RowBox[{"1666569600000", "\[Rule]", "4.851`*^6"}], ",", 
   RowBox[{"1666656000000", "\[Rule]", "4.92`*^6"}], ",", 
   RowBox[{"1666742400000", "\[Rule]", "4.873`*^6"}], ",", 
   RowBox[{"1666828800000", "\[Rule]", "4.877`*^6"}], ",", 
   RowBox[{"1666915200000", "\[Rule]", "4.841`*^6"}], ",", 
   RowBox[{"1667001600000", "\[Rule]", "4.7`*^6"}], ",", 
   RowBox[{"1667088000000", "\[Rule]", "4.715`*^6"}], ",", 
   RowBox[{"1667174400000", "\[Rule]", "4.853`*^6"}], ",", 
   RowBox[{"1667260800000", "\[Rule]", "4.9`*^6"}], ",", 
   RowBox[{"1667347200000", "\[Rule]", "4.805`*^6"}], ",", 
   RowBox[{"1667433600000", "\[Rule]", "4.812`*^6"}], ",", 
   RowBox[{"1667520000000", "\[Rule]", "4.782`*^6"}], ",", 
   RowBox[{"1667606400000", "\[Rule]", "4.788`*^6"}], ",", 
   RowBox[{"1667692800000", "\[Rule]", "4.857`*^6"}], ",", 
   RowBox[{"1667779200000", "\[Rule]", "4.851`*^6"}], ",", 
   RowBox[{"1667865600000", "\[Rule]", "4.812`*^6"}], ",", 
   RowBox[{"1667952000000", "\[Rule]", "4.814`*^6"}], ",", 
   RowBox[{"1668038400000", "\[Rule]", "4.78`*^6"}], ",", 
   RowBox[{"1668124800000", "\[Rule]", "4.755`*^6"}], ",", 
   RowBox[{"1668211200000", "\[Rule]", "4.771`*^6"}], ",", 
   RowBox[{"1668297600000", "\[Rule]", "4.802`*^6"}], ",", 
   RowBox[{"1668384000000", "\[Rule]", "4.784`*^6"}], ",", 
   RowBox[{"1668470400000", "\[Rule]", "4.903`*^6"}], ",", 
   RowBox[{"1668556800000", "\[Rule]", "4.9`*^6"}], ",", 
   RowBox[{"1668643200000", "\[Rule]", "4.905`*^6"}], ",", 
   RowBox[{"1668729600000", "\[Rule]", "4.88`*^6"}], ",", 
   RowBox[{"1668816000000", "\[Rule]", "4.853`*^6"}], ",", 
   RowBox[{"1668902400000", "\[Rule]", "4.881`*^6"}], ",", 
   RowBox[{"1668988800000", "\[Rule]", "4.959`*^6"}], ",", 
   RowBox[{"1669075200000", "\[Rule]", "4.965`*^6"}], ",", 
   RowBox[{"1669161600000", "\[Rule]", "4.907`*^6"}], ",", 
   RowBox[{"1669248000000", "\[Rule]", "4.91`*^6"}], ",", 
   RowBox[{"1669334400000", "\[Rule]", "4.901`*^6"}], ",", 
   RowBox[{"1669420800000", "\[Rule]", "4.894`*^6"}], ",", 
   RowBox[{"1669507200000", "\[Rule]", "4.955`*^6"}], ",", 
   RowBox[{"1669593600000", "\[Rule]", "4.9`*^6"}], ",", 
   RowBox[{"1669680000000", "\[Rule]", "4.805`*^6"}], ",", 
   RowBox[{"1669766400000", "\[Rule]", "4.81`*^6"}], ",", 
   RowBox[{"1669852800000", "\[Rule]", "4.814`*^6"}], ",", 
   RowBox[{"1669939200000", "\[Rule]", "4.79`*^6"}], ",", 
   RowBox[{"1670025600000", "\[Rule]", "4.797`*^6"}], ",", 
   RowBox[{"1670112000000", "\[Rule]", "4.796`*^6"}], ",", 
   RowBox[{"1670198400000", "\[Rule]", "4.8`*^6"}], ",", 
   RowBox[{"1670284800000", "\[Rule]", "4.802`*^6"}], ",", 
   RowBox[{"1670371200000", "\[Rule]", "4.81`*^6"}], ",", 
   RowBox[{"1670457600000", "\[Rule]", "4.808`*^6"}], ",", 
   RowBox[{"1670544000000", "\[Rule]", "4.791`*^6"}], ",", 
   RowBox[{"1670630400000", "\[Rule]", "4.775`*^6"}], ",", 
   RowBox[{"1670716800000", "\[Rule]", "4.8`*^6"}], ",", 
   RowBox[{"1670803200000", "\[Rule]", "4.753`*^6"}], ",", 
   RowBox[{"1670889600000", "\[Rule]", "4.731`*^6"}], ",", 
   RowBox[{"1670976000000", "\[Rule]", "4.753`*^6"}], ",", 
   RowBox[{"1671062400000", "\[Rule]", "4.77`*^6"}], ",", 
   RowBox[{"1671148800000", "\[Rule]", "4.695`*^6"}], ",", 
   RowBox[{"1671235200000", "\[Rule]", "4.624`*^6"}], ",", 
   RowBox[{"1671321600000", "\[Rule]", "4.623`*^6"}], ",", 
   RowBox[{"1671408000000", "\[Rule]", "4.615`*^6"}], ",", 
   RowBox[{"1671494400000", "\[Rule]", "4.611`*^6"}], ",", 
   RowBox[{"1671580800000", "\[Rule]", "4.623`*^6"}], ",", 
   RowBox[{"1671667200000", "\[Rule]", "4.625`*^6"}], ",", 
   RowBox[{"1671753600000", "\[Rule]", "4.605`*^6"}], ",", 
   RowBox[{"1671840000000", "\[Rule]", "4.615`*^6"}], ",", 
   RowBox[{"1671926400000", "\[Rule]", "4.619`*^6"}], ",", 
   RowBox[{"1672012800000", "\[Rule]", "4.662`*^6"}], ",", 
   RowBox[{"1672099200000", "\[Rule]", "4.622`*^6"}], ",", 
   RowBox[{"1672185600000", "\[Rule]", "4.626`*^6"}], ",", 
   RowBox[{"1672272000000", "\[Rule]", "4.622`*^6"}], ",", 
   RowBox[{"1672358400000", "\[Rule]", "4.62`*^6"}], ",", 
   RowBox[{"1672444800000", "\[Rule]", "4.588`*^6"}], ",", 
   RowBox[{"1672531200000", "\[Rule]", "4.573`*^6"}], ",", 
   RowBox[{"1672617600000", "\[Rule]", "4.643`*^6"}], ",", 
   RowBox[{"1672704000000", "\[Rule]", "4.617`*^6"}], ",", 
   RowBox[{"1672790400000", "\[Rule]", "4.607`*^6"}], ",", 
   RowBox[{"1672876800000", "\[Rule]", "4.601`*^6"}], ",", 
   RowBox[{"1672963200000", "\[Rule]", "4.657`*^6"}], ",", 
   RowBox[{"1673049600000", "\[Rule]", "4.623`*^6"}], ",", 
   RowBox[{"1673136000000", "\[Rule]", "4.62`*^6"}], ",", 
   RowBox[{"1673222400000", "\[Rule]", "4.63`*^6"}], ",", 
   RowBox[{"1673308800000", "\[Rule]", "4.99`*^6"}], ",", 
   RowBox[{"1673395200000", "\[Rule]", "5.176`*^6"}], ",", 
   RowBox[{"1673481600000", "\[Rule]", "5.089`*^6"}], ",", 
   RowBox[{"1673568000000", "\[Rule]", "5.046`*^6"}], ",", 
   RowBox[{"1673654400000", "\[Rule]", "5.054`*^6"}], ",", 
   RowBox[{"1673740800000", "\[Rule]", "5.031`*^6"}], ",", 
   RowBox[{"1673827200000", "\[Rule]", "5.05`*^6"}], ",", 
   RowBox[{"1673913600000", "\[Rule]", "5.182`*^6"}], ",", 
   RowBox[{"1674000000000", "\[Rule]", "5.395`*^6"}], ",", 
   RowBox[{"1674086400000", "\[Rule]", "5.295`*^6"}], ",", 
   RowBox[{"1674172800000", "\[Rule]", "4.875`*^6"}], ",", 
   RowBox[{"1674259200000", "\[Rule]", "4.716`*^6"}], ",", 
   RowBox[{"1674345600000", "\[Rule]", "4.672`*^6"}], ",", 
   RowBox[{"1674432000000", "\[Rule]", "4.712`*^6"}], ",", 
   RowBox[{"1674518400000", "\[Rule]", "4.727`*^6"}], ",", 
   RowBox[{"1674604800000", "\[Rule]", "4.752`*^6"}], ",", 
   RowBox[{"1674691200000", "\[Rule]", "4.78`*^6"}], ",", 
   RowBox[{"1674777600000", "\[Rule]", "5.08`*^6"}], ",", 
   RowBox[{"1674864000000", "\[Rule]", "5.1`*^6"}], ",", 
   RowBox[{"1674950400000", "\[Rule]", "4.98`*^6"}], ",", 
   RowBox[{"1675036800000", "\[Rule]", "5.01`*^6"}], ",", 
   RowBox[{"1675123200000", "\[Rule]", "4.981`*^6"}], ",", 
   RowBox[{"1675209600000", "\[Rule]", "4.941`*^6"}], ",", 
   RowBox[{"1675296000000", "\[Rule]", "4.934`*^6"}], ",", 
   RowBox[{"1675382400000", "\[Rule]", "4.951`*^6"}], ",", 
   RowBox[{"1675468800000", "\[Rule]", "4.852`*^6"}], ",", 
   RowBox[{"1675555200000", "\[Rule]", "4.835`*^6"}], ",", 
   RowBox[{"1675641600000", "\[Rule]", "4.856`*^6"}], ",", 
   RowBox[{"1675728000000", "\[Rule]", "4.83`*^6"}], ",", 
   RowBox[{"1675814400000", "\[Rule]", "4.9`*^6"}], ",", 
   RowBox[{"1675900800000", "\[Rule]", "4.83`*^6"}], ",", 
   RowBox[{"1675987200000", "\[Rule]", "4.792`*^6"}], ",", 
   RowBox[{"1676073600000", "\[Rule]", "4.865`*^6"}], ",", 
   RowBox[{"1676160000000", "\[Rule]", "4.789`*^6"}], ",", 
   RowBox[{"1676246400000", "\[Rule]", "4.802`*^6"}], ",", 
   RowBox[{"1676332800000", "\[Rule]", "4.745`*^6"}], ",", 
   RowBox[{"1676419200000", "\[Rule]", "4.792`*^6"}], ",", 
   RowBox[{"1676505600000", "\[Rule]", "4.78`*^6"}], ",", 
   RowBox[{"1676592000000", "\[Rule]", "4.72`*^6"}], ",", 
   RowBox[{"1676678400000", "\[Rule]", "4.7`*^6"}], ",", 
   RowBox[{"1676764800000", "\[Rule]", "4.7`*^6"}], ",", 
   RowBox[{"1676851200000", "\[Rule]", "4.7`*^6"}], ",", 
   RowBox[{"1676937600000", "\[Rule]", "4.7`*^6"}], ",", 
   RowBox[{"1677024000000", "\[Rule]", "4.642`*^6"}], ",", 
   RowBox[{"1677110400000", "\[Rule]", "4.628`*^6"}], ",", 
   RowBox[{"1677196800000", "\[Rule]", "4.887`*^6"}], ",", 
   RowBox[{"1677283200000", "\[Rule]", "4.869`*^6"}], ",", 
   RowBox[{"1677369600000", "\[Rule]", "4.763`*^6"}], ",", 
   RowBox[{"1677456000000", "\[Rule]", "4.8`*^6"}], ",", 
   RowBox[{"1677542400000", "\[Rule]", "4.721`*^6"}], ",", 
   RowBox[{"1677628800000", "\[Rule]", "4.634`*^6"}], ",", 
   RowBox[{"1677715200000", "\[Rule]", "4.624`*^6"}], ",", 
   RowBox[{"1677801600000", "\[Rule]", "4.61`*^6"}], ",", 
   RowBox[{"1677888000000", "\[Rule]", "4.566`*^6"}], ",", 
   RowBox[{"1677974400000", "\[Rule]", "4.527`*^6"}], ",", 
   RowBox[{"1678060800000", "\[Rule]", "4.558`*^6"}], ",", 
   RowBox[{"1678147200000", "\[Rule]", "4.531`*^6"}], ",", 
   RowBox[{"1678233600000", "\[Rule]", "4.467`*^6"}], ",", 
   RowBox[{"1678320000000", "\[Rule]", "4.46`*^6"}], ",", 
   RowBox[{"1678406400000", "\[Rule]", "4.423`*^6"}], ",", 
   RowBox[{"1678492800000", "\[Rule]", "4.36`*^6"}], ",", 
   RowBox[{"1678579200000", "\[Rule]", "4.335`*^6"}], ",", 
   RowBox[{"1678665600000", "\[Rule]", "4.385`*^6"}], ",", 
   RowBox[{"1678752000000", "\[Rule]", "4.397`*^6"}], ",", 
   RowBox[{"1678838400000", "\[Rule]", "4.389`*^6"}], ",", 
   RowBox[{"1678924800000", "\[Rule]", "4.37`*^6"}], ",", 
   RowBox[{"1679011200000", "\[Rule]", "4.359`*^6"}], ",", 
   RowBox[{"1679097600000", "\[Rule]", "4.342`*^6"}], ",", 
   RowBox[{"1679184000000", "\[Rule]", "4.375`*^6"}], ",", 
   RowBox[{"1679270400000", "\[Rule]", "4.338`*^6"}], ",", 
   RowBox[{"1679356800000", "\[Rule]", "4.328`*^6"}], ",", 
   RowBox[{"1679443200000", "\[Rule]", "4.368`*^6"}], ",", 
   RowBox[{"1679529600000", "\[Rule]", "4.321`*^6"}], ",", 
   RowBox[{"1679616000000", "\[Rule]", "4.349`*^6"}], ",", 
   RowBox[{"1679702400000", "\[Rule]", "4.35`*^6"}], ",", 
   RowBox[{"1679788800000", "\[Rule]", "4.381`*^6"}], ",", 
   RowBox[{"1679875200000", "\[Rule]", "4.33`*^6"}], ",", 
   RowBox[{"1679961600000", "\[Rule]", "4.413`*^6"}], ",", 
   RowBox[{"1680048000000", "\[Rule]", "4.38`*^6"}], ",", 
   RowBox[{"1680134400000", "\[Rule]", "4.4`*^6"}], ",", 
   RowBox[{"1680220800000", "\[Rule]", "4.404`*^6"}], ",", 
   RowBox[{"1680307200000", "\[Rule]", "4.396`*^6"}], ",", 
   RowBox[{"1680393600000", "\[Rule]", "4.486`*^6"}], ",", 
   RowBox[{"1680480000000", "\[Rule]", "4.438`*^6"}], ",", 
   RowBox[{"1680566400000", "\[Rule]", "4.431`*^6"}], ",", 
   RowBox[{"1680652800000", "\[Rule]", "4.414`*^6"}], ",", 
   RowBox[{"1680739200000", "\[Rule]", "4.431`*^6"}], ",", 
   RowBox[{"1680825600000", "\[Rule]", "4.44`*^6"}], ",", 
   RowBox[{"1680912000000", "\[Rule]", "4.424`*^6"}], ",", 
   RowBox[{"1680998400000", "\[Rule]", "4.422`*^6"}], ",", 
   RowBox[{"1681084800000", "\[Rule]", "4.41`*^6"}], ",", 
   RowBox[{"1681171200000", "\[Rule]", "4.422`*^6"}], ",", 
   RowBox[{"1681257600000", "\[Rule]", "4.435`*^6"}], ",", 
   RowBox[{"1681344000000", "\[Rule]", "4.398`*^6"}], ",", 
   RowBox[{"1681430400000", "\[Rule]", "4.389`*^6"}], ",", 
   RowBox[{"1681516800000", "\[Rule]", "4.368`*^6"}], ",", 
   RowBox[{"1681603200000", "\[Rule]", "4.344`*^6"}], ",", 
   RowBox[{"1681689600000", "\[Rule]", "4.332`*^6"}], ",", 
   RowBox[{"1681776000000", "\[Rule]", "4.391`*^6"}], ",", 
   RowBox[{"1681862400000", "\[Rule]", "4.366`*^6"}], ",", 
   RowBox[{"1681948800000", "\[Rule]", "4.439`*^6"}], ",", 
   RowBox[{"1682035200000", "\[Rule]", "4.392`*^6"}], ",", 
   RowBox[{"1682121600000", "\[Rule]", "4.41`*^6"}], ",", 
   RowBox[{"1682208000000", "\[Rule]", "4.4`*^6"}], ",", 
   RowBox[{"1682294400000", "\[Rule]", "4.415`*^6"}], ",", 
   RowBox[{"1682380800000", "\[Rule]", "4.482`*^6"}], ",", 
   RowBox[{"1682467200000", "\[Rule]", "4.45`*^6"}], ",", 
   RowBox[{"1682553600000", "\[Rule]", "4.482`*^6"}], ",", 
   RowBox[{"1682640000000", "\[Rule]", "4.48`*^6"}], ",", 
   RowBox[{"1682726400000", "\[Rule]", "4.48`*^6"}], ",", 
   RowBox[{"1682812800000", "\[Rule]", "4.472`*^6"}], ",", 
   RowBox[{"1682899200000", "\[Rule]", "4.593`*^6"}], ",", 
   RowBox[{"1682985600000", "\[Rule]", "4.544`*^6"}], ",", 
   RowBox[{"1683072000000", "\[Rule]", "4.501`*^6"}], ",", 
   RowBox[{"1683158400000", "\[Rule]", "4.6`*^6"}], ",", 
   RowBox[{"1683244800000", "\[Rule]", "4.605`*^6"}], ",", 
   RowBox[{"1683331200000", "\[Rule]", "4.6`*^6"}], ",", 
   RowBox[{"1683417600000", "\[Rule]", "4.575`*^6"}], ",", 
   RowBox[{"1683504000000", "\[Rule]", "4.619`*^6"}], ",", 
   RowBox[{"1683590400000", "\[Rule]", "4.6`*^6"}], ",", 
   RowBox[{"1683676800000", "\[Rule]", "4.532`*^6"}], ",", 
   RowBox[{"1683763200000", "\[Rule]", "4.511`*^6"}], ",", 
   RowBox[{"1683849600000", "\[Rule]", "4.492`*^6"}], ",", 
   RowBox[{"1683936000000", "\[Rule]", "4.455`*^6"}], ",", 
   RowBox[{"1684022400000", "\[Rule]", "4.462`*^6"}], ",", 
   RowBox[{"1684108800000", "\[Rule]", "4.455`*^6"}], ",", 
   RowBox[{"1684195200000", "\[Rule]", "4.46`*^6"}], ",", 
   RowBox[{"1684281600000", "\[Rule]", "4.457`*^6"}], ",", 
   RowBox[{"1684368000000", "\[Rule]", "4.47`*^6"}], ",", 
   RowBox[{"1684454400000", "\[Rule]", "4.45`*^6"}], ",", 
   RowBox[{"1684540800000", "\[Rule]", "4.47`*^6"}], ",", 
   RowBox[{"1684627200000", "\[Rule]", "4.551`*^6"}], ",", 
   RowBox[{"1684713600000", "\[Rule]", "4.478`*^6"}], ",", 
   RowBox[{"1684800000000", "\[Rule]", "4.473`*^6"}], ",", 
   RowBox[{"1684886400000", "\[Rule]", "4.5`*^6"}], ",", 
   RowBox[{"1684972800000", "\[Rule]", "4.471`*^6"}], ",", 
   RowBox[{"1685059200000", "\[Rule]", "4.455`*^6"}], ",", 
   RowBox[{"1685145600000", "\[Rule]", "4.459`*^6"}], ",", 
   RowBox[{"1685232000000", "\[Rule]", "4.5`*^6"}], ",", 
   RowBox[{"1685318400000", "\[Rule]", "4.51`*^6"}], ",", 
   RowBox[{"1685404800000", "\[Rule]", "4.57`*^6"}], ",", 
   RowBox[{"1685491200000", "\[Rule]", "4.502`*^6"}], ",", 
   RowBox[{"1685577600000", "\[Rule]", "4.475`*^6"}], ",", 
   RowBox[{"1685664000000", "\[Rule]", "5.386`*^6"}], ",", 
   RowBox[{"1685750400000", "\[Rule]", "5.39`*^6"}], ",", 
   RowBox[{"1685836800000", "\[Rule]", "5.511`*^6"}], ",", 
   RowBox[{"1685923200000", "\[Rule]", "5.722`*^6"}], ",", 
   RowBox[{"1686009600000", "\[Rule]", "5.727`*^6"}], ",", 
   RowBox[{"1686096000000", "\[Rule]", "5.`*^6"}], ",", 
   RowBox[{"1686182400000", "\[Rule]", "4.768`*^6"}], ",", 
   RowBox[{"1686268800000", "\[Rule]", "4.792`*^6"}], ",", 
   RowBox[{"1686355200000", "\[Rule]", "4.791`*^6"}], ",", 
   RowBox[{"1686441600000", "\[Rule]", "4.713`*^6"}], ",", 
   RowBox[{"1686528000000", "\[Rule]", "4.81`*^6"}], ",", 
   RowBox[{"1686614400000", "\[Rule]", "4.693`*^6"}], ",", 
   RowBox[{"1686700800000", "\[Rule]", "4.695`*^6"}], ",", 
   RowBox[{"1686787200000", "\[Rule]", "4.66`*^6"}], ",", 
   RowBox[{"1686873600000", "\[Rule]", "5.013`*^6"}], ",", 
   RowBox[{"1686960000000", "\[Rule]", "4.842`*^6"}], ",", 
   RowBox[{"1687046400000", "\[Rule]", "4.885`*^6"}], ",", 
   RowBox[{"1687132800000", "\[Rule]", "4.989`*^6"}], ",", 
   RowBox[{"1687219200000", "\[Rule]", "4.837`*^6"}], ",", 
   RowBox[{"1687305600000", "\[Rule]", "4.823`*^6"}], ",", 
   RowBox[{"1687392000000", "\[Rule]", "4.809`*^6"}], ",", 
   RowBox[{"1687478400000", "\[Rule]", "5.06`*^6"}], ",", 
   RowBox[{"1687564800000", "\[Rule]", "5.02`*^6"}], ",", 
   RowBox[{"1687651200000", "\[Rule]", "4.998`*^6"}], ",", 
   RowBox[{"1687737600000", "\[Rule]", "5.078`*^6"}], ",", 
   RowBox[{"1687824000000", "\[Rule]", "4.908`*^6"}], ",", 
   RowBox[{"1687910400000", "\[Rule]", "4.833`*^6"}], ",", 
   RowBox[{"1687996800000", "\[Rule]", "4.832`*^6"}], ",", 
   RowBox[{"1688083200000", "\[Rule]", "4.78`*^6"}], ",", 
   RowBox[{"1688169600000", "\[Rule]", "4.769`*^6"}], ",", 
   RowBox[{"1688256000000", "\[Rule]", "4.755`*^6"}], ",", 
   RowBox[{"1688342400000", "\[Rule]", "4.735`*^6"}], ",", 
   RowBox[{"1688428800000", "\[Rule]", "4.695`*^6"}], ",", 
   RowBox[{"1688515200000", "\[Rule]", "4.649`*^6"}], ",", 
   RowBox[{"1688601600000", "\[Rule]", "4.662`*^6"}], ",", 
   RowBox[{"1688688000000", "\[Rule]", "4.71`*^6"}], ",", 
   RowBox[{"1688774400000", "\[Rule]", "4.692`*^6"}], ",", 
   RowBox[{"1688860800000", "\[Rule]", "4.735`*^6"}], ",", 
   RowBox[{"1688947200000", "\[Rule]", "4.732`*^6"}], ",", 
   RowBox[{"1689033600000", "\[Rule]", "4.742`*^6"}], ",", 
   RowBox[{"1689120000000", "\[Rule]", "4.701`*^6"}], ",", 
   RowBox[{"1689206400000", "\[Rule]", "4.702`*^6"}], ",", 
   RowBox[{"1689292800000", "\[Rule]", "4.7`*^6"}], ",", 
   RowBox[{"1689379200000", "\[Rule]", "4.683`*^6"}], ",", 
   RowBox[{"1689465600000", "\[Rule]", "4.688`*^6"}], ",", 
   RowBox[{"1689552000000", "\[Rule]", "4.71`*^6"}], ",", 
   RowBox[{"1689638400000", "\[Rule]", "4.704`*^6"}], ",", 
   RowBox[{"1689724800000", "\[Rule]", "4.704`*^6"}], ",", 
   RowBox[{"1689811200000", "\[Rule]", "4.715`*^6"}], ",", 
   RowBox[{"1689897600000", "\[Rule]", "4.733`*^6"}], ",", 
   RowBox[{"1689984000000", "\[Rule]", "4.71`*^6"}], ",", 
   RowBox[{"1690070400000", "\[Rule]", "4.756`*^6"}], ",", 
   RowBox[{"1690156800000", "\[Rule]", "4.75`*^6"}], ",", 
   RowBox[{"1690243200000", "\[Rule]", "4.737`*^6"}], ",", 
   RowBox[{"1690329600000", "\[Rule]", "4.742`*^6"}], ",", 
   RowBox[{"1690416000000", "\[Rule]", "4.734`*^6"}], ",", 
   RowBox[{"1690502400000", "\[Rule]", "4.735`*^6"}], ",", 
   RowBox[{"1690588800000", "\[Rule]", "4.75`*^6"}], ",", 
   RowBox[{"1690675200000", "\[Rule]", "4.75`*^6"}], ",", 
   RowBox[{"1690761600000", "\[Rule]", "4.801`*^6"}], ",", 
   RowBox[{"1690848000000", "\[Rule]", "4.787`*^6"}], ",", 
   RowBox[{"1690934400000", "\[Rule]", "4.783`*^6"}], ",", 
   RowBox[{"1691020800000", "\[Rule]", "4.776`*^6"}], ",", 
   RowBox[{"1691107200000", "\[Rule]", "4.78`*^6"}], ",", 
   RowBox[{"1691193600000", "\[Rule]", "4.776`*^6"}], ",", 
   RowBox[{"1691280000000", "\[Rule]", "4.792`*^6"}], ",", 
   RowBox[{"1691366400000", "\[Rule]", "4.774`*^6"}], ",", 
   RowBox[{"1691452800000", "\[Rule]", "4.805`*^6"}], ",", 
   RowBox[{"1691539200000", "\[Rule]", "4.793`*^6"}], ",", 
   RowBox[{"1691625600000", "\[Rule]", "4.829`*^6"}], ",", 
   RowBox[{"1691712000000", "\[Rule]", "4.805`*^6"}], ",", 
   RowBox[{"1691798400000", "\[Rule]", "4.798`*^6"}], ",", 
   RowBox[{"1691884800000", "\[Rule]", "4.79`*^6"}], ",", 
   RowBox[{"1691971200000", "\[Rule]", "4.8`*^6"}], ",", 
   RowBox[{"1692057600000", "\[Rule]", "4.785`*^6"}], ",", 
   RowBox[{"1692144000000", "\[Rule]", "4.785`*^6"}], ",", 
   RowBox[{"1692230400000", "\[Rule]", "4.774`*^6"}], ",", 
   RowBox[{"1692316800000", "\[Rule]", "4.763`*^6"}], ",", 
   RowBox[{"1692403200000", "\[Rule]", "4.74`*^6"}], ",", 
   RowBox[{"1692489600000", "\[Rule]", "4.741`*^6"}], ",", 
   RowBox[{"1692576000000", "\[Rule]", "4.75`*^6"}], ",", 
   RowBox[{"1692662400000", "\[Rule]", "4.778`*^6"}], ",", 
   RowBox[{"1692748800000", "\[Rule]", "4.976`*^6"}], ",", 
   RowBox[{"1692835200000", "\[Rule]", "4.997`*^6"}], ",", 
   RowBox[{"1692921600000", "\[Rule]", "4.871`*^6"}], ",", 
   RowBox[{"1693008000000", "\[Rule]", "4.891`*^6"}], ",", 
   RowBox[{"1693094400000", "\[Rule]", "4.95`*^6"}], ",", 
   RowBox[{"1693180800000", "\[Rule]", "5.`*^6"}], ",", 
   RowBox[{"1693267200000", "\[Rule]", "4.765`*^6"}], ",", 
   RowBox[{"1693353600000", "\[Rule]", "4.762`*^6"}], ",", 
   RowBox[{"1693440000000", "\[Rule]", "4.784`*^6"}], ",", 
   RowBox[{"1693699200000", "\[Rule]", "4.771`*^6"}], ",", 
   RowBox[{"1693785600000", "\[Rule]", "4.774`*^6"}], ",", 
   RowBox[{"1693872000000", "\[Rule]", "4.783`*^6"}], ",", 
   RowBox[{"1693958400000", "\[Rule]", "4.778`*^6"}], ",", 
   RowBox[{"1694044800000", "\[Rule]", "4.772`*^6"}], ",", 
   RowBox[{"1694131200000", "\[Rule]", "4.766`*^6"}], ",", 
   RowBox[{"1694217600000", "\[Rule]", "4.769`*^6"}], ",", 
   RowBox[{"1694304000000", "\[Rule]", "4.78`*^6"}], ",", 
   RowBox[{"1694390400000", "\[Rule]", "4.794`*^6"}], ",", 
   RowBox[{"1694476800000", "\[Rule]", "4.801`*^6"}], ",", 
   RowBox[{"1694563200000", "\[Rule]", "4.8`*^6"}], ",", 
   RowBox[{"1694649600000", "\[Rule]", "4.835`*^6"}], ",", 
   RowBox[{"1694736000000", "\[Rule]", "4.802`*^6"}], ",", 
   RowBox[{"1694822400000", "\[Rule]", "4.773`*^6"}], ",", 
   RowBox[{"1694908800000", "\[Rule]", "4.785`*^6"}], ",", 
   RowBox[{"1694995200000", "\[Rule]", "4.785`*^6"}], ",", 
   RowBox[{"1695081600000", "\[Rule]", "4.804`*^6"}], ",", 
   RowBox[{"1695168000000", "\[Rule]", "4.803`*^6"}], ",", 
   RowBox[{"1695254400000", "\[Rule]", "4.998`*^6"}], ",", 
   RowBox[{"1695340800000", "\[Rule]", "4.837`*^6"}], ",", 
   RowBox[{"1695427200000", "\[Rule]", "4.806`*^6"}], ",", 
   RowBox[{"1695513600000", "\[Rule]", "4.803`*^6"}], ",", 
   RowBox[{"1695600000000", "\[Rule]", "4.83`*^6"}], ",", 
   RowBox[{"1695686400000", "\[Rule]", "4.85`*^6"}], ",", 
   RowBox[{"1695772800000", "\[Rule]", "4.828`*^6"}], ",", 
   RowBox[{"1695859200000", "\[Rule]", "4.819`*^6"}], ",", 
   RowBox[{"1695945600000", "\[Rule]", "4.82`*^6"}], ",", 
   RowBox[{"1696032000000", "\[Rule]", "4.814`*^6"}], ",", 
   RowBox[{"1696118400000", "\[Rule]", "4.805`*^6"}], ",", 
   RowBox[{"1696204800000", "\[Rule]", "4.813`*^6"}], ",", 
   RowBox[{"1696291200000", "\[Rule]", "4.85`*^6"}], ",", 
   RowBox[{"1696377600000", "\[Rule]", "4.86499999`*^6"}], ",", 
   RowBox[{"1696464000000", "\[Rule]", "4.9`*^6"}], ",", 
   RowBox[{"1696550400000", "\[Rule]", "4.93`*^6"}], ",", 
   RowBox[{"1696636800000", "\[Rule]", "4.853`*^6"}], ",", 
   RowBox[{"1696723200000", "\[Rule]", "4.847`*^6"}], ",", 
   RowBox[{"1696809600000", "\[Rule]", "4.851`*^6"}], ",", 
   RowBox[{"1696896000000", "\[Rule]", "4.861`*^6"}], ",", 
   RowBox[{"1696982400000", "\[Rule]", "4.845`*^6"}], ",", 
   RowBox[{"1697068800000", "\[Rule]", "4.851`*^6"}], ",", 
   RowBox[{"1697155200000", "\[Rule]", "5.1`*^6"}], ",", 
   RowBox[{"1697241600000", "\[Rule]", "5.1`*^6"}], ",", 
   RowBox[{"1697328000000", "\[Rule]", "4.958`*^6"}], ",", 
   RowBox[{"1697414400000", "\[Rule]", "4.975`*^6"}], ",", 
   RowBox[{"1697500800000", "\[Rule]", "5.098`*^6"}], ",", 
   RowBox[{"1697587200000", "\[Rule]", "4.825`*^6"}], ",", 
   RowBox[{"1697673600000", "\[Rule]", "4.85`*^6"}], ",", 
   RowBox[{"1697760000000", "\[Rule]", "4.814`*^6"}], ",", 
   RowBox[{"1697846400000", "\[Rule]", "4.809`*^6"}], ",", 
   RowBox[{"1697932800000", "\[Rule]", "4.802`*^6"}], ",", 
   RowBox[{"1698019200000", "\[Rule]", "4.836`*^6"}], ",", 
   RowBox[{"1698105600000", "\[Rule]", "4.833`*^6"}], ",", 
   RowBox[{"1698192000000", "\[Rule]", "4.829`*^6"}], ",", 
   RowBox[{"1698278400000", "\[Rule]", "4.836`*^6"}], ",", 
   RowBox[{"1698364800000", "\[Rule]", "4.852`*^6"}], ",", 
   RowBox[{"1698451200000", "\[Rule]", "4.868`*^6"}], ",", 
   RowBox[{"1698537600000", "\[Rule]", "4.891`*^6"}], ",", 
   RowBox[{"1698624000000", "\[Rule]", "4.904`*^6"}], ",", 
   RowBox[{"1698710400000", "\[Rule]", "4.92`*^6"}], ",", 
   RowBox[{"1698796800000", "\[Rule]", "4.912`*^6"}], ",", 
   RowBox[{"1698883200000", "\[Rule]", "4.911`*^6"}], ",", 
   RowBox[{"1698969600000", "\[Rule]", "4.879`*^6"}], ",", 
   RowBox[{"1699056000000", "\[Rule]", "4.808`*^6"}], ",", 
   RowBox[{"1699142400000", "\[Rule]", "4.81`*^6"}], ",", 
   RowBox[{"1699228800000", "\[Rule]", "4.838`*^6"}], ",", 
   RowBox[{"1699315200000", "\[Rule]", "4.859`*^6"}], ",", 
   RowBox[{"1699401600000", "\[Rule]", "4.832`*^6"}], ",", 
   RowBox[{"1699488000000", "\[Rule]", "4.821`*^6"}], ",", 
   RowBox[{"1699574400000", "\[Rule]", "4.828`*^6"}], ",", 
   RowBox[{"1699660800000", "\[Rule]", "4.841`*^6"}], ",", 
   RowBox[{"1699747200000", "\[Rule]", "4.854`*^6"}], ",", 
   RowBox[{"1699833600000", "\[Rule]", "4.848`*^6"}], ",", 
   RowBox[{"1699920000000", "\[Rule]", "4.875`*^6"}], ",", 
   RowBox[{"1700006400000", "\[Rule]", "4.831`*^6"}], ",", 
   RowBox[{"1700092800000", "\[Rule]", "4.814`*^6"}], ",", 
   RowBox[{"1700179200000", "\[Rule]", "4.812`*^6"}], ",", 
   RowBox[{"1700265600000", "\[Rule]", "4.815`*^6"}], ",", 
   RowBox[{"1700352000000", "\[Rule]", "4.815`*^6"}], ",", 
   RowBox[{"1700438400000", "\[Rule]", "4.818`*^6"}], ",", 
   RowBox[{"1700524800000", "\[Rule]", "4.892`*^6"}], ",", 
   RowBox[{"1700611200000", "\[Rule]", "4.833`*^6"}], ",", 
   RowBox[{"1700697600000", "\[Rule]", "4.85`*^6"}], ",", 
   RowBox[{"1700784000000", "\[Rule]", "4.845`*^6"}], ",", 
   RowBox[{"1700870400000", "\[Rule]", "4.853`*^6"}], ",", 
   RowBox[{"1700956800000", "\[Rule]", "4.876`*^6"}], ",", 
   RowBox[{"1701043200000", "\[Rule]", "4.819`*^6"}], ",", 
   RowBox[{"1701129600000", "\[Rule]", "4.796`*^6"}], ",", 
   RowBox[{"1701216000000", "\[Rule]", "4.81`*^6"}], ",", 
   RowBox[{"1701302400000", "\[Rule]", "4.796`*^6"}], ",", 
   RowBox[{"1701388800000", "\[Rule]", "4.789`*^6"}], ",", 
   RowBox[{"1701475200000", "\[Rule]", "4.912`*^6"}], ",", 
   RowBox[{"1701561600000", "\[Rule]", "5.033`*^6"}], ",", 
   RowBox[{"1701648000000", "\[Rule]", "4.95`*^6"}], ",", 
   RowBox[{"1701734400000", "\[Rule]", "4.857`*^6"}], ",", 
   RowBox[{"1701820800000", "\[Rule]", "4.858`*^6"}], ",", 
   RowBox[{"1701907200000", "\[Rule]", "4.85`*^6"}], ",", 
   RowBox[{"1701993600000", "\[Rule]", "4.818`*^6"}], ",", 
   RowBox[{"1702080000000", "\[Rule]", "4.81`*^6"}], ",", 
   RowBox[{"1702166400000", "\[Rule]", "4.823`*^6"}], ",", 
   RowBox[{"1702252800000", "\[Rule]", "4.845`*^6"}], ",", 
   RowBox[{"1702339200000", "\[Rule]", "4.832`*^6"}], ",", 
   RowBox[{"1702425600000", "\[Rule]", "4.848`*^6"}], ",", 
   RowBox[{"1702512000000", "\[Rule]", "4.841`*^6"}], ",", 
   RowBox[{"1702598400000", "\[Rule]", "4.83`*^6"}], ",", 
   RowBox[{"1702684800000", "\[Rule]", "4.82`*^6"}], ",", 
   RowBox[{"1702771200000", "\[Rule]", "4.827`*^6"}], ",", 
   RowBox[{"1702857600000", "\[Rule]", "4.835`*^6"}], ",", 
   RowBox[{"1702944000000", "\[Rule]", "4.878`*^6"}], ",", 
   RowBox[{"1703030400000", "\[Rule]", "4.86`*^6"}], ",", 
   RowBox[{"1703116800000", "\[Rule]", "4.9`*^6"}], ",", 
   RowBox[{"1703203200000", "\[Rule]", "4.882`*^6"}], ",", 
   RowBox[{"1703289600000", "\[Rule]", "4.842`*^6"}], ",", 
   RowBox[{"1703376000000", "\[Rule]", "4.846`*^6"}], ",", 
   RowBox[{"1703462400000", "\[Rule]", "4.852`*^6"}], ",", 
   RowBox[{"1703548800000", "\[Rule]", "4.863`*^6"}], ",", 
   RowBox[{"1703635200000", "\[Rule]", "4.851`*^6"}], ",", 
   RowBox[{"1703721600000", "\[Rule]", "4.889`*^6"}], ",", 
   RowBox[{"1703808000000", "\[Rule]", "4.88`*^6"}], ",", 
   RowBox[{"1703894400000", "\[Rule]", "4.871`*^6"}], ",", 
   RowBox[{"1703980800000", "\[Rule]", "4.871`*^6"}], ",", 
   RowBox[{"1704067200000", "\[Rule]", "4.87`*^6"}], ",", 
   RowBox[{"1704153600000", "\[Rule]", "4.897`*^6"}], ",", 
   RowBox[{"1704240000000", "\[Rule]", "4.9`*^6"}], ",", 
   RowBox[{"1704326400000", "\[Rule]", "4.885`*^6"}], ",", 
   RowBox[{"1704412800000", "\[Rule]", "4.867`*^6"}], ",", 
   RowBox[{"1704499200000", "\[Rule]", "4.856`*^6"}], ",", 
   RowBox[{"1704585600000", "\[Rule]", "4.892`*^6"}], ",", 
   RowBox[{"1704672000000", "\[Rule]", "4.891`*^6"}], ",", 
   RowBox[{"1704758400000", "\[Rule]", "4.895`*^6"}], ",", 
   RowBox[{"1704844800000", "\[Rule]", "4.864`*^6"}], ",", 
   RowBox[{"1704931200000", "\[Rule]", "4.847`*^6"}], ",", 
   RowBox[{"1705017600000", "\[Rule]", "4.828`*^6"}], ",", 
   RowBox[{"1705104000000", "\[Rule]", "4.84`*^6"}], ",", 
   RowBox[{"1705190400000", "\[Rule]", "4.844`*^6"}], ",", 
   RowBox[{"1705276800000", "\[Rule]", "4.842`*^6"}], ",", 
   RowBox[{"1705363200000", "\[Rule]", "4.844`*^6"}], ",", 
   RowBox[{"1705449600000", "\[Rule]", "4.867`*^6"}], ",", 
   RowBox[{"1705536000000", "\[Rule]", "4.87`*^6"}], ",", 
   RowBox[{"1705622400000", "\[Rule]", "4.875`*^6"}], ",", 
   RowBox[{"1705708800000", "\[Rule]", "4.842`*^6"}], ",", 
   RowBox[{"1705795200000", "\[Rule]", "4.857`*^6"}], ",", 
   RowBox[{"1705881600000", "\[Rule]", "4.858`*^6"}], ",", 
   RowBox[{"1705968000000", "\[Rule]", "4.885`*^6"}], ",", 
   RowBox[{"1706054400000", "\[Rule]", "4.881`*^6"}], ",", 
   RowBox[{"1706140800000", "\[Rule]", "4.871`*^6"}], ",", 
   RowBox[{"1706227200000", "\[Rule]", "4.86`*^6"}], ",", 
   RowBox[{"1706313600000", "\[Rule]", "4.831`*^6"}], ",", 
   RowBox[{"1706400000000", "\[Rule]", "4.844`*^6"}], ",", 
   RowBox[{"1706486400000", "\[Rule]", "4.825`*^6"}], ",", 
   RowBox[{"1706572800000", "\[Rule]", "4.815`*^6"}], ",", 
   RowBox[{"1706659200000", "\[Rule]", "4.852`*^6"}], ",", 
   RowBox[{"1706745600000", "\[Rule]", "4.835`*^6"}], ",", 
   RowBox[{"1706832000000", "\[Rule]", "4.824`*^6"}], ",", 
   RowBox[{"1706918400000", "\[Rule]", "4.838`*^6"}], ",", 
   RowBox[{"1707004800000", "\[Rule]", "4.836`*^6"}], ",", 
   RowBox[{"1707091200000", "\[Rule]", "4.882`*^6"}], ",", 
   RowBox[{"1707177600000", "\[Rule]", "4.874`*^6"}], ",", 
   RowBox[{"1707264000000", "\[Rule]", "5.1`*^6"}], ",", 
   RowBox[{"1707350400000", "\[Rule]", "5.24`*^6"}], ",", 
   RowBox[{"1707436800000", "\[Rule]", "5.2`*^6"}], ",", 
   RowBox[{"1707523200000", "\[Rule]", "5.194`*^6"}], ",", 
   RowBox[{"1707609600000", "\[Rule]", "5.199`*^6"}], ",", 
   RowBox[{"1707696000000", "\[Rule]", "5.237`*^6"}], ",", 
   RowBox[{"1707782400000", "\[Rule]", "5.231`*^6"}], ",", 
   RowBox[{"1707868800000", "\[Rule]", "4.915`*^6"}], ",", 
   RowBox[{"1707955200000", "\[Rule]", "4.897`*^6"}], ",", 
   RowBox[{"1708041600000", "\[Rule]", "4.904`*^6"}], ",", 
   RowBox[{"1708128000000", "\[Rule]", "4.884`*^6"}], ",", 
   RowBox[{"1708214400000", "\[Rule]", "4.904`*^6"}], ",", 
   RowBox[{"1708300800000", "\[Rule]", "4.902`*^6"}], ",", 
   RowBox[{"1708387200000", "\[Rule]", "4.914`*^6"}], ",", 
   RowBox[{"1708473600000", "\[Rule]", "4.873`*^6"}], ",", 
   RowBox[{"1708560000000", "\[Rule]", "4.847`*^6"}], ",", 
   RowBox[{"1708646400000", "\[Rule]", "4.843`*^6"}], ",", 
   RowBox[{"1708732800000", "\[Rule]", "4.84`*^6"}], ",", 
   RowBox[{"1708819200000", "\[Rule]", "4.85`*^6"}], ",", 
   RowBox[{"1708905600000", "\[Rule]", "4.865`*^6"}], ",", 
   RowBox[{"1708992000000", "\[Rule]", "4.857`*^6"}], ",", 
   RowBox[{"1709078400000", "\[Rule]", "4.858`*^6"}], ",", 
   RowBox[{"1709164800000", "\[Rule]", "4.854`*^6"}], ",", 
   RowBox[{"1709251200000", "\[Rule]", "4.85`*^6"}], ",", 
   RowBox[{"1709337600000", "\[Rule]", "4.847`*^6"}], ",", 
   RowBox[{"1709424000000", "\[Rule]", "4.865`*^6"}], ",", 
   RowBox[{"1709510400000", "\[Rule]", "4.86`*^6"}], ",", 
   RowBox[{"1709596800000", "\[Rule]", "4.88`*^6"}], ",", 
   RowBox[{"1709683200000", "\[Rule]", "4.897`*^6"}], ",", 
   RowBox[{"1709769600000", "\[Rule]", "4.875`*^6"}], ",", 
   RowBox[{"1709856000000", "\[Rule]", "4.891`*^6"}], ",", 
   RowBox[{"1709942400000", "\[Rule]", "4.887`*^6"}], ",", 
   RowBox[{"1710028800000", "\[Rule]", "4.88`*^6"}], ",", 
   RowBox[{"1710115200000", "\[Rule]", "4.887`*^6"}], ",", 
   RowBox[{"1710201600000", "\[Rule]", "4.874`*^6"}], ",", 
   RowBox[{"1710288000000", "\[Rule]", "4.87`*^6"}], ",", 
   RowBox[{"1710374400000", "\[Rule]", "4.874`*^6"}], ",", 
   RowBox[{"1710460800000", "\[Rule]", "4.89`*^6"}], ",", 
   RowBox[{"1710547200000", "\[Rule]", "4.883`*^6"}], ",", 
   RowBox[{"1710633600000", "\[Rule]", "4.903`*^6"}], ",", 
   RowBox[{"1710720000000", "\[Rule]", "4.903`*^6"}], ",", 
   RowBox[{"1710806400000", "\[Rule]", "4.927`*^6"}], ",", 
   RowBox[{"1710892800000", "\[Rule]", "4.89`*^6"}], ",", 
   RowBox[{"1710979200000", "\[Rule]", "4.925`*^6"}], ",", 
   RowBox[{"1711065600000", "\[Rule]", "4.901`*^6"}], ",", 
   RowBox[{"1711152000000", "\[Rule]", "4.915`*^6"}], ",", 
   RowBox[{"1711238400000", "\[Rule]", "4.944`*^6"}], ",", 
   RowBox[{"1711324800000", "\[Rule]", "4.908`*^6"}], ",", 
   RowBox[{"1711411200000", "\[Rule]", "4.922`*^6"}], ",", 
   RowBox[{"1711497600000", "\[Rule]", "4.922`*^6"}], ",", 
   RowBox[{"1711584000000", "\[Rule]", "4.93`*^6"}], ",", 
   RowBox[{"1711670400000", "\[Rule]", "4.906`*^6"}], ",", 
   RowBox[{"1711756800000", "\[Rule]", "4.951`*^6"}], ",", 
   RowBox[{"1711843200000", "\[Rule]", "4.934`*^6"}], ",", 
   RowBox[{"1711929600000", "\[Rule]", "4.946`*^6"}], ",", 
   RowBox[{"1712016000000", "\[Rule]", "5.005`*^6"}], ",", 
   RowBox[{"1712102400000", "\[Rule]", "5.`*^6"}], ",", 
   RowBox[{"1712188800000", "\[Rule]", "5.122`*^6"}], ",", 
   RowBox[{"1712275200000", "\[Rule]", "5.072`*^6"}], ",", 
   RowBox[{"1712361600000", "\[Rule]", "4.99`*^6"}], ",", 
   RowBox[{"1712448000000", "\[Rule]", "5.035`*^6"}], ",", 
   RowBox[{"1712534400000", "\[Rule]", "5.016`*^6"}], ",", 
   RowBox[{"1712620800000", "\[Rule]", "5.`*^6"}], ",", 
   RowBox[{"1712707200000", "\[Rule]", "4.91`*^6"}], ",", 
   RowBox[{"1712793600000", "\[Rule]", "4.913`*^6"}], ",", 
   RowBox[{"1712880000000", "\[Rule]", "4.91`*^6"}], ",", 
   RowBox[{"1712966400000", "\[Rule]", "4.91`*^6"}], ",", 
   RowBox[{"1713052800000", "\[Rule]", "4.909`*^6"}], ",", 
   RowBox[{"1713139200000", "\[Rule]", "4.92`*^6"}], ",", 
   RowBox[{"1713225600000", "\[Rule]", "4.922`*^6"}], ",", 
   RowBox[{"1713312000000", "\[Rule]", "4.96`*^6"}], ",", 
   RowBox[{"1713398400000", "\[Rule]", "4.979`*^6"}], ",", 
   RowBox[{"1713484800000", "\[Rule]", "4.99`*^6"}], ",", 
   RowBox[{"1713571200000", "\[Rule]", "5.02`*^6"}], ",", 
   RowBox[{"1713657600000", "\[Rule]", "4.994`*^6"}], ",", 
   RowBox[{"1713744000000", "\[Rule]", "5.247`*^6"}], ",", 
   RowBox[{"1713830400000", "\[Rule]", "5.019`*^6"}], ",", 
   RowBox[{"1713916800000", "\[Rule]", "5.015`*^6"}], ",", 
   RowBox[{"1714003200000", "\[Rule]", "5.009`*^6"}], ",", 
   RowBox[{"1714089600000", "\[Rule]", "5.018`*^6"}], ",", 
   RowBox[{"1714176000000", "\[Rule]", "5.041`*^6"}], ",", 
   RowBox[{"1714262400000", "\[Rule]", "5.057`*^6"}], ",", 
   RowBox[{"1714348800000", "\[Rule]", "5.124`*^6"}], ",", 
   RowBox[{"1714435200000", "\[Rule]", "5.088`*^6"}], ",", 
   RowBox[{"1714521600000", "\[Rule]", "5.07`*^6"}], ",", 
   RowBox[{"1714608000000", "\[Rule]", "4.999`*^6"}], ",", 
   RowBox[{"1714694400000", "\[Rule]", "4.945`*^6"}], ",", 
   RowBox[{"1714780800000", "\[Rule]", "4.927`*^6"}], ",", 
   RowBox[{"1714867200000", "\[Rule]", "4.967`*^6"}], ",", 
   RowBox[{"1714953600000", "\[Rule]", "4.967`*^6"}], ",", 
   RowBox[{"1715040000000", "\[Rule]", "4.955`*^6"}], ",", 
   RowBox[{"1715126400000", "\[Rule]", "4.951`*^6"}], ",", 
   RowBox[{"1715212800000", "\[Rule]", "4.942`*^6"}], ",", 
   RowBox[{"1715299200000", "\[Rule]", "4.963`*^6"}], ",", 
   RowBox[{"1715385600000", "\[Rule]", "4.992`*^6"}], ",", 
   RowBox[{"1715472000000", "\[Rule]", "4.979`*^6"}], ",", 
   RowBox[{"1715558400000", "\[Rule]", "5.`*^6"}], ",", 
   RowBox[{"1715644800000", "\[Rule]", "4.999`*^6"}], ",", 
   RowBox[{"1715731200000", "\[Rule]", "5.025`*^6"}], ",", 
   RowBox[{"1715817600000", "\[Rule]", "4.998`*^6"}], ",", 
   RowBox[{"1715904000000", "\[Rule]", "5.002`*^6"}], ",", 
   RowBox[{"1715990400000", "\[Rule]", "5.008`*^6"}], ",", 
   RowBox[{"1716076800000", "\[Rule]", "5.011`*^6"}], ",", 
   RowBox[{"1716163200000", "\[Rule]", "5.021`*^6"}], ",", 
   RowBox[{"1716249600000", "\[Rule]", "5.071`*^6"}], ",", 
   RowBox[{"1716336000000", "\[Rule]", "5.076`*^6"}], ",", 
   RowBox[{"1716422400000", "\[Rule]", "5.12`*^6"}], ",", 
   RowBox[{"1716508800000", "\[Rule]", "5.085`*^6"}], ",", 
   RowBox[{"1716595200000", "\[Rule]", "5.077`*^6"}], ",", 
   RowBox[{"1716681600000", "\[Rule]", "5.093`*^6"}], ",", 
   RowBox[{"1716768000000", "\[Rule]", "5.139`*^6"}], ",", 
   RowBox[{"1716854400000", "\[Rule]", "5.103`*^6"}], ",", 
   RowBox[{"1716940800000", "\[Rule]", "5.064`*^6"}], ",", 
   RowBox[{"1717027200000", "\[Rule]", "5.073`*^6"}], ",", 
   RowBox[{"1717113600000", "\[Rule]", "5.05`*^6"}], ",", 
   RowBox[{"1717200000000", "\[Rule]", "5.05`*^6"}], ",", 
   RowBox[{"1717286400000", "\[Rule]", "5.087`*^6"}], ",", 
   RowBox[{"1717372800000", "\[Rule]", "5.102`*^6"}], ",", 
   RowBox[{"1717459200000", "\[Rule]", "5.11`*^6"}], ",", 
   RowBox[{"1717545600000", "\[Rule]", "5.127`*^6"}], ",", 
   RowBox[{"1717632000000", "\[Rule]", "5.103`*^6"}], ",", 
   RowBox[{"1717718400000", "\[Rule]", "5.112`*^6"}], ",", 
   RowBox[{"1717804800000", "\[Rule]", "5.12`*^6"}], ",", 
   RowBox[{"1717891200000", "\[Rule]", "5.183`*^6"}], ",", 
   RowBox[{"1717977600000", "\[Rule]", "5.174`*^6"}], ",", 
   RowBox[{"1718064000000", "\[Rule]", "5.16`*^6"}], ",", 
   RowBox[{"1718150400000", "\[Rule]", "5.088`*^6"}], ",", 
   RowBox[{"1718236800000", "\[Rule]", "5.`*^6"}], ",", 
   RowBox[{"1718323200000", "\[Rule]", "4.948`*^6"}], ",", 
   RowBox[{"1718409600000", "\[Rule]", "4.958`*^6"}], ",", 
   RowBox[{"1718496000000", "\[Rule]", "4.963`*^6"}], ",", 
   RowBox[{"1718582400000", "\[Rule]", "4.982`*^6"}], ",", 
   RowBox[{"1718668800000", "\[Rule]", "5.03`*^6"}], ",", 
   RowBox[{"1718755200000", "\[Rule]", "5.015`*^6"}], ",", 
   RowBox[{"1718841600000", "\[Rule]", "5.049`*^6"}], ",", 
   RowBox[{"1718928000000", "\[Rule]", "5.092`*^6"}], ",", 
   RowBox[{"1719014400000", "\[Rule]", "5.072`*^6"}], ",", 
   RowBox[{"1719100800000", "\[Rule]", "5.077`*^6"}], ",", 
   RowBox[{"1719187200000", "\[Rule]", "5.001`*^6"}], ",", 
   RowBox[{"1719273600000", "\[Rule]", "5.005`*^6"}], ",", 
   RowBox[{"1719360000000", "\[Rule]", "5.016`*^6"}], ",", 
   RowBox[{"1719446400000", "\[Rule]", "5.187`*^6"}], ",", 
   RowBox[{"1719532800000", "\[Rule]", "5.111`*^6"}], ",", 
   RowBox[{"1719619200000", "\[Rule]", "5.157`*^6"}], ",", 
   RowBox[{"1719705600000", "\[Rule]", "5.174`*^6"}], ",", 
   RowBox[{"1719792000000", "\[Rule]", "5.2`*^6"}], ",", 
   RowBox[{"1719878400000", "\[Rule]", "5.061`*^6"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.929038855279461*^9, 3.9290389499234943`*^9}, {
  3.929038997072117*^9, 3.9290390435207577`*^9}},
 CellLabel->
  "Out[1260]=",ExpressionUUID->"b47d5f63-2a97-be4a-acf2-ad50a0e71c0d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"List", " ", "of", " ", "Key"}], "-", 
     RowBox[{"value", " ", "pairs"}]}], ",", 
    RowBox[{
     RowBox[{"should", " ", "be", " ", "time"}], "->", 
     RowBox[{"stock", " ", "value"}]}]}], "*)"}], 
  RowBox[{
   RowBox[{"trainingData", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "->", "1.9"}], ",", 
      RowBox[{"2", "->", "4.1"}], ",", 
      RowBox[{"3", "->", "6.0"}], ",", 
      RowBox[{"4", "->", "8.1"}]}], "}"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"net", "=", 
    RowBox[{"NetChain", "[", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"ConstantArray", "[", 
        RowBox[{
         RowBox[{"ElementwiseLayer", "[", "\"\<ELU\>\"", "]"}], ",", "20"}], 
        "]"}], ",", " ", 
       RowBox[{"LinearLayer", "[", "]"}]}], "]"}], "]"}]}], "\n", 
   RowBox[{"net", "=", 
    RowBox[{"NetTrain", "[", 
     RowBox[{"net", ",", "trainingData"}], "]"}]}], "\[IndentingNewLine]", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Call", " ", "the", " ", "net", " ", "with", " ", "a", " ", "specific", 
      " ", "key"}], ",", 
     RowBox[{"predicts", " ", "value"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"net", "[", "1719532800000", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9290390537489185`*^9, 3.9290390585495434`*^9}, {
  3.9290392551698647`*^9, 3.929039255942869*^9}, {3.929039288054077*^9, 
  3.9290393515237083`*^9}},
 CellLabel->
  "In[1289]:=",ExpressionUUID->"2540d235-20af-3b4b-ba66-ed6dc3514db8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[Rule]", "1.9`"}], ",", 
   RowBox[{"2", "\[Rule]", "4.1`"}], ",", 
   RowBox[{"3", "\[Rule]", "6.`"}], ",", 
   RowBox[{"4", "\[Rule]", "8.1`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.929039059625471*^9, 3.92903910853055*^9, 3.9290392568599224`*^9, {
   3.9290393077940044`*^9, 3.929039354905733*^9}},
 CellLabel->
  "Out[1289]=",ExpressionUUID->"43793de4-f6df-414a-8336-beaaf602ac10"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NetChain",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            OverlayBox[{
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 GrayLevel[0.6], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{
                   Style[
                   "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                   10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 GrayLevel[0.6], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{
                   Style[
                   "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                   10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.84, 0.84, 0.84], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   GrayLevel[0.6], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.84, 0.84, 0.84], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   GrayLevel[0.6], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.84, 0.84, 0.84], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   GrayLevel[0.6], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   GrayLevel[0.6], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              StyleBox["uninitialized", 
               RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
               Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
               Scaled[0.0001]}], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"array\"", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"array\"", "SummaryItem"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            OverlayBox[{
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 GrayLevel[0.6], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{
                   Style[
                   "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                   10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 GrayLevel[0.6], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{
                   Style[
                   "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                   10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.84, 0.84, 0.84], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   GrayLevel[0.6], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.84, 0.84, 0.84], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   GrayLevel[0.6], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.84, 0.84, 0.84], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   GrayLevel[0.6], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   GrayLevel[0.6], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              StyleBox["uninitialized", 
               RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
               Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
               Scaled[0.0001]}], 
            GridBox[{{
               TagBox[
                
                DynamicModuleBox[{
                 NeuralNetworks`Private`NetChain`assoc3 = <|
                   "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>|>, 
                    "2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>|>, 
                    "3" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>|>, 
                    "4" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>|>, 
                    "5" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>|>, 
                    "6" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>|>, 
                    "7" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>|>, 
                    "8" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>|>, 
                    "9" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>|>, 
                    "10" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>|>, 
                    "11" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>|>, 
                    "12" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>|>, 
                    "13" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>|>, 
                    "14" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>|>, 
                    "15" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>|>, 
                    "16" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>|>, 
                    "17" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>|>, 
                    "18" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>|>, 
                    "19" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>|>, 
                    "20" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>|>, 
                    "21" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[2, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    "$OutputSize" -> NeuralNetworks`SizeT, "$InputSize" -> 
                    NeuralNetworks`SizeT, "$InputDimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "18", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "17", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "19", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "18", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "20", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "19", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "21", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "20", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "21", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>|>, 
                  NeuralNetworks`Private`NetChain`opart, 
                  NeuralNetworks`Private`NetChain`part, 
                  NeuralNetworks`Private`NetChain`selected = Null}, 
                 DynamicBox[
                  GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"12\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"13\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"14\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"15\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"16\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"17\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"18\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"19\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"20\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "20"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "20"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "20"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"21\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   GridFrameMargins -> {{0, 0}, {0, 0}}], 
                  TrackedSymbols :> {
                   NeuralNetworks`Private`NetChain`selected}], 
                 Initialization :> {NetChain}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  NetChain[<|
   "Type" -> "Chain", 
    "Nodes" -> <|
     "1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>|>, 
      "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>|>, 
      "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>|>, 
      "4" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>|>, 
      "5" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>|>, 
      "6" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>|>, 
      "7" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>|>, 
      "8" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>|>, 
      "9" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>|>, 
      "10" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>|>, 
      "11" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>|>, 
      "12" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>|>, 
      "13" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>|>, 
      "14" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>|>, 
      "15" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>|>, 
      "16" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>|>, 
      "17" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>|>, 
      "18" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>|>, 
      "19" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>|>, 
      "20" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>|>, 
      "21" -> <|"Type" -> "Linear", 
        "Arrays" -> <|"Weights" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[2, NeuralNetworks`SizeT], 
            NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
            NeuralNetworks`TensorT[
             NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
             NeuralNetworks`RealT]]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> 
          NeuralNetworks`ListT[NeuralNetworks`NaturalT, NeuralNetworks`SizeT],
           "$OutputSize" -> NeuralNetworks`SizeT, "$InputSize" -> 
          NeuralNetworks`SizeT, "$InputDimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`RealT]|>|>|>, 
    "Edges" -> {
     NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Inputs", "Input"], 
      NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "10", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "11", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "12", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "13", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "14", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "15", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "17", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "16", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "18", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "17", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "19", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "18", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "20", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "19", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "21", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "20", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Outputs", "Output"] -> 
      NeuralNetworks`NetPath["Nodes", "21", "Outputs", "Output"]}, 
    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
        NeuralNetworks`ListT[NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
        NeuralNetworks`AtomT]|>, 
    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
        NeuralNetworks`ListT[NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
        NeuralNetworks`RealT]|>|>, <|
   "Version" -> "14.0.2", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.929039059625471*^9, 3.92903910853055*^9, 3.9290392568599224`*^9, {
   3.9290393077940044`*^9, 3.92903935498872*^9}},
 CellLabel->
  "Out[1290]=",ExpressionUUID->"ff5cddce-9bf2-5f4e-b4d1-9ac2f6f380db"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NetChain",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                9.771662886600941, {0., 9.771662886600941}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.014925373134328358`], {
               RGBColor[0.729, 0.729, 0.729], 
               Thickness[0.018686567164179105`], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                CurveClosed -> {0}]}, {
               RGBColor[0.729, 0.729, 0.729], 
               Thickness[0.018686567164179105`], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                CurveClosed -> {0}]}, {
               FaceForm[{
                 RGBColor[0.631, 0.8160000000000001, 0.498], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
               FaceForm[{
                 RGBColor[0.40800000000000003`, 0.627, 0.196], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {15., 
                79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 103.}, {23.,
                 103.}}}]}, {
               FaceForm[{
                 RGBColor[0.38, 0.753, 0.89], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
               FaceForm[{
                 RGBColor[0.24300000000000002`, 0.608, 0.71], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {29., 
                79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 103.}, {37.,
                 103.}}}]}, {
               FaceForm[{
                 RGBColor[0.584, 0.51, 0.8390000000000001], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
               FaceForm[{
                 RGBColor[0.4, 0.396, 0.659], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {43., 
                79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 103.}, {51.,
                 103.}}}]}, {
               FaceForm[{
                 RGBColor[0.549, 0.549, 0.549], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25., 
                95.}, {25., 88.}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39., 
                95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
             ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"real\"", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"real\"", "SummaryItem"], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.014925373134328358`], {
               RGBColor[0.729, 0.729, 0.729], 
               Thickness[0.018686567164179105`], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                CurveClosed -> {0}]}, {
               RGBColor[0.729, 0.729, 0.729], 
               Thickness[0.018686567164179105`], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                CurveClosed -> {0}]}, {
               FaceForm[{
                 RGBColor[0.631, 0.8160000000000001, 0.498], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
               FaceForm[{
                 RGBColor[0.40800000000000003`, 0.627, 0.196], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {15., 
                79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 103.}, {23.,
                 103.}}}]}, {
               FaceForm[{
                 RGBColor[0.38, 0.753, 0.89], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
               FaceForm[{
                 RGBColor[0.24300000000000002`, 0.608, 0.71], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {29., 
                79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 103.}, {37.,
                 103.}}}]}, {
               FaceForm[{
                 RGBColor[0.584, 0.51, 0.8390000000000001], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
               FaceForm[{
                 RGBColor[0.4, 0.396, 0.659], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {43., 
                79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 103.}, {51.,
                 103.}}}]}, {
               FaceForm[{
                 RGBColor[0.549, 0.549, 0.549], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25., 
                95.}, {25., 88.}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39., 
                95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
             ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
            GridBox[{{
               TagBox[
                
                DynamicModuleBox[{
                 NeuralNetworks`Private`NetChain`assoc3 = <|
                   "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                    "3" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                    "4" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                    "5" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                    "6" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                    "7" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                    "8" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                    "9" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                    "10" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                    "11" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                    "12" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                    "13" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                    "14" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                    "15" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                    "16" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                    "17" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                    "18" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                    "19" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                    "20" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ExponentialLinearUnit"], "$Dimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                    "21" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {}, "$OutputSize" -> 1, 
                    "$InputSize" -> 1, "$InputDimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "18", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "17", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "19", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "18", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "20", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "19", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "21", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "20", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "21", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                  NeuralNetworks`Private`NetChain`opart, 
                  NeuralNetworks`Private`NetChain`part, 
                  NeuralNetworks`Private`NetChain`selected = Null}, 
                 DynamicBox[
                  GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"12\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"13\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"14\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"15\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"16\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"17\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"18\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"19\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"20\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "20"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "20"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "20"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"21\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   GridFrameMargins -> {{0, 0}, {0, 0}}], 
                  TrackedSymbols :> {
                   NeuralNetworks`Private`NetChain`selected}], 
                 Initialization :> {NetChain}], "SummaryItem"]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  NetChain[<|
   "Type" -> "Chain", 
    "Nodes" -> <|
     "1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> {}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
      "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> {}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
      "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> {}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
      "4" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> {}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
      "5" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> {}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
      "6" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> {}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
      "7" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> {}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
      "8" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> {}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
      "9" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> {}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
      "10" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> {}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
      "11" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> {}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
      "12" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> {}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
      "13" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> {}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
      "14" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> {}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
      "15" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> {}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
      "16" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> {}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
      "17" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> {}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
      "18" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> {}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
      "19" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> {}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
      "20" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter["ExponentialLinearUnit"], 
          "$Dimensions" -> {}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
      "21" -> <|"Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> RawArray["Real32",{{1.9568973779678345`}}], "Biases" -> 
          RawArray["Real32",{0.16596704721450806`}]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {}, "$OutputSize" -> 1, "$InputSize" -> 1, 
          "$InputDimensions" -> {}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>|>, 
    "Edges" -> {
     NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Inputs", "Input"], 
      NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "10", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "11", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "12", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "13", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "14", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "15", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "17", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "16", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "18", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "17", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "19", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "18", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "20", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "19", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "21", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "20", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Outputs", "Output"] -> 
      NeuralNetworks`NetPath["Nodes", "21", "Outputs", "Output"]}, 
    "Inputs" -> <|
     "Input" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
    "Outputs" -> <|
     "Output" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, <|
   "Version" -> "14.0.2", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.929039059625471*^9, 3.92903910853055*^9, 3.9290392568599224`*^9, {
   3.9290393077940044`*^9, 3.9290393732843723`*^9}},
 CellLabel->
  "Out[1291]=",ExpressionUUID->"839ffdb7-12f3-094c-bb28-0f8113cc8980"],

Cell[BoxData["3.364949065728`*^12"], "Output",
 CellChangeTimes->{
  3.929039059625471*^9, 3.92903910853055*^9, 3.9290392568599224`*^9, {
   3.9290393077940044`*^9, 3.9290393733446407`*^9}},
 CellLabel->
  "Out[1292]=",ExpressionUUID->"f6f5189c-b2e1-da47-96e2-4004b3bbff0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"net", "[", "i", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", " ", "1719532800000", ",", " ", "1819532800000"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.929039132613987*^9, 3.9290392057525673`*^9}},
 CellLabel->
  "In[1270]:=",ExpressionUUID->"7340e4a4-0f26-7948-b908-96bc000cf923"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1:eJwt0ntM01cUB/DflPHyCSgosFqqQYpTCVpgli7NAWQg8hRT1I2KG3aKkFnk
ucgPg8Dv/hARtCQjEIK8llkxQDcmGFGQ8JaQZtEhUkUxWoeAM264jN39Tv9o
2k/OPd9z7k09ktJiv1nGMMx++vn/e+2FpeC7H2cD/aluredghuksmLJ4jLoz
PaP3H4tnqZOP/BHkby1Y6d3AQde2CbhmcR31t4M/K3U2gpnyRg7u2qQGnrAT
XPtdMwfac492Oa4SbPK5Rvv7WyqX1mE9up2Dz6NL8pLdBbMznRzsEt2RN2/G
/IM9HKxWvE4p2ob7HB/iQFItlph8MW92nAP3yH0Rv+3BfpcJDriQ0fAmECx2
neZg59lDI/NhuF/FK3o/m8nehzGYr1/gIH9co5Qn4D6KRQ5uTkeUZaoxv+kj
Ag9CtsbHaDC/zY6Az0v7mvo03EfmQCB18tnhK5lYV20kINrgMqvOQ8d7ELC9
HGvVWIh5/V40T11wsbgU+yd9CDxJvV3z7AruowkgMDYyJ3lcjfXLSgK+2pzc
1gbM++ELAiMJq1SMXnC3czSByEu6H83teH63ioCdvTQvugvz+hMJ+A04Sct6
cL7sOIGwh3+GnhrC9whJI6DznnrVM47vNZhBYGD49rKO3/H83Fl6P8Nfs4VP
MW++kMD+qT2J919iv6aUgOMhbbBhHvtZHYG1zgb9ur/x/OoaAvkbosyRTI6w
f0YDvf/JqWpPW8EMqyegYbKNmWsEdy+1E3j83JZNdkGLbxEoXVnXMioSbPql
l8CN7Io2B0/BYukwgQ7/3E8XtguulRsJLPqlSCNkgpW9EwQkRXFVQYoc/D9P
E+j6pOLJ+hD0gplA2buJn45GoFPeEggXuZnDD+C8og8EFMXHrusPY/7G5Txc
DbDaa07C/PP2PLz5rCq27wS63JGH9O/l066n0etdeYgsy6qRo01+1F71hoQj
aLWK+tHQzrFqNFtFHey25ZZYi/M83Hhwurmy0jMd32uHOw+t7yfDfTOwvlfE
Q8kKN+s4tFJDnbxJdUeL7uaoXUPH/Q1o0zD1OV3floBMzIvbxEOMrOVfRRbu
kyjmwTvs9a9foZl8aqsvpWfy0GwddUfBVXO3xc+pxcbKB0HZOO+kBw+LL4wV
X6PVF6iNHxyizlvq16mLN5fc60Ob5qmT/AfYF2jWScJD4D7rQNscnC+jdk4M
eu+Frj1IPXeabQ1Di7Oo/wNAcbjL
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJwt0ntM01cUB/DflPHyCSgosFqqQYpTCVpgli7NAWQg8hRT1I2KG3aKkFnk
ucgPg8Dv/hARtCQjEIK8llkxQDcmGFGQ8JaQZtEhUkUxWoeAM264jN39Tv9o
2k/OPd9z7k09ktJiv1nGMMx++vn/e+2FpeC7H2cD/aluredghuksmLJ4jLoz
PaP3H4tnqZOP/BHkby1Y6d3AQde2CbhmcR31t4M/K3U2gpnyRg7u2qQGnrAT
XPtdMwfac492Oa4SbPK5Rvv7WyqX1mE9up2Dz6NL8pLdBbMznRzsEt2RN2/G
/IM9HKxWvE4p2ob7HB/iQFItlph8MW92nAP3yH0Rv+3BfpcJDriQ0fAmECx2
neZg59lDI/NhuF/FK3o/m8nehzGYr1/gIH9co5Qn4D6KRQ5uTkeUZaoxv+kj
Ag9CtsbHaDC/zY6Az0v7mvo03EfmQCB18tnhK5lYV20kINrgMqvOQ8d7ELC9
HGvVWIh5/V40T11wsbgU+yd9CDxJvV3z7AruowkgMDYyJ3lcjfXLSgK+2pzc
1gbM++ELAiMJq1SMXnC3czSByEu6H83teH63ioCdvTQvugvz+hMJ+A04Sct6
cL7sOIGwh3+GnhrC9whJI6DznnrVM47vNZhBYGD49rKO3/H83Fl6P8Nfs4VP
MW++kMD+qT2J919iv6aUgOMhbbBhHvtZHYG1zgb9ur/x/OoaAvkbosyRTI6w
f0YDvf/JqWpPW8EMqyegYbKNmWsEdy+1E3j83JZNdkGLbxEoXVnXMioSbPql
l8CN7Io2B0/BYukwgQ7/3E8XtguulRsJLPqlSCNkgpW9EwQkRXFVQYoc/D9P
E+j6pOLJ+hD0gplA2buJn45GoFPeEggXuZnDD+C8og8EFMXHrusPY/7G5Txc
DbDaa07C/PP2PLz5rCq27wS63JGH9O/l066n0etdeYgsy6qRo01+1F71hoQj
aLWK+tHQzrFqNFtFHey25ZZYi/M83Hhwurmy0jMd32uHOw+t7yfDfTOwvlfE
Q8kKN+s4tFJDnbxJdUeL7uaoXUPH/Q1o0zD1OV3floBMzIvbxEOMrOVfRRbu
kyjmwTvs9a9foZl8aqsvpWfy0GwddUfBVXO3xc+pxcbKB0HZOO+kBw+LL4wV
X6PVF6iNHxyizlvq16mLN5fc60Ob5qmT/AfYF2jWScJD4D7rQNscnC+jdk4M
eu+Frj1IPXeabQ1Di7Oo/wNAcbjL
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{1719532800000, 1819532800000}, {
             3.524394745856*^12, 3.729357275136*^12}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {1.719532800000004*^12, 3.524394745856008*^12}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{1719532800000, 1819532800000}, {3.524394745856*^12,
             3.729357275136*^12}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {1.719532800000004*^12, 3.524394745856008*^12}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJwt0ntM01cUB/DflPHyCSgosFqqQYpTCVpgli7NAWQg8hRT1I2KG3aKkFnk
ucgPg8Dv/hARtCQjEIK8llkxQDcmGFGQ8JaQZtEhUkUxWoeAM264jN39Tv9o
2k/OPd9z7k09ktJiv1nGMMx++vn/e+2FpeC7H2cD/aluredghuksmLJ4jLoz
PaP3H4tnqZOP/BHkby1Y6d3AQde2CbhmcR31t4M/K3U2gpnyRg7u2qQGnrAT
XPtdMwfac492Oa4SbPK5Rvv7WyqX1mE9up2Dz6NL8pLdBbMznRzsEt2RN2/G
/IM9HKxWvE4p2ob7HB/iQFItlph8MW92nAP3yH0Rv+3BfpcJDriQ0fAmECx2
neZg59lDI/NhuF/FK3o/m8nehzGYr1/gIH9co5Qn4D6KRQ5uTkeUZaoxv+kj
Ag9CtsbHaDC/zY6Az0v7mvo03EfmQCB18tnhK5lYV20kINrgMqvOQ8d7ELC9
HGvVWIh5/V40T11wsbgU+yd9CDxJvV3z7AruowkgMDYyJ3lcjfXLSgK+2pzc
1gbM++ELAiMJq1SMXnC3czSByEu6H83teH63ioCdvTQvugvz+hMJ+A04Sct6
cL7sOIGwh3+GnhrC9whJI6DznnrVM47vNZhBYGD49rKO3/H83Fl6P8Nfs4VP
MW++kMD+qT2J919iv6aUgOMhbbBhHvtZHYG1zgb9ur/x/OoaAvkbosyRTI6w
f0YDvf/JqWpPW8EMqyegYbKNmWsEdy+1E3j83JZNdkGLbxEoXVnXMioSbPql
l8CN7Io2B0/BYukwgQ7/3E8XtguulRsJLPqlSCNkgpW9EwQkRXFVQYoc/D9P
E+j6pOLJ+hD0gplA2buJn45GoFPeEggXuZnDD+C8og8EFMXHrusPY/7G5Txc
DbDaa07C/PP2PLz5rCq27wS63JGH9O/l066n0etdeYgsy6qRo01+1F71hoQj
aLWK+tHQzrFqNFtFHey25ZZYi/M83Hhwurmy0jMd32uHOw+t7yfDfTOwvlfE
Q8kKN+s4tFJDnbxJdUeL7uaoXUPH/Q1o0zD1OV3floBMzIvbxEOMrOVfRRbu
kyjmwTvs9a9foZl8aqsvpWfy0GwddUfBVXO3xc+pxcbKB0HZOO+kBw+LL4wV
X6PVF6iNHxyizlvq16mLN5fc60Ob5qmT/AfYF2jWScJD4D7rQNscnC+jdk4M
eu+Frj1IPXeabQ1Di7Oo/wNAcbjL
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{1719532800000, 1819532800000}, {3.524394745856*^12, 
         3.729357275136*^12}}, "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {1.719532800000004*^12, 3.524394745856008*^12}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.719532800000004*^12, 3.524394745856008*^12},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1719532800000, 1819532800000}, {3.524394745856*^12, 
    3.729357275136*^12}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.929039196635271*^9, 3.9290392062217903`*^9}},
 CellLabel->
  "Out[1270]=",ExpressionUUID->"15e36409-542e-e94e-8f44-7f0bbb6878f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "filename", "=", 
   "\"\<C:\\\\Users\\\\chris\\\\Downloads\\\\market_groups.json\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"d", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"Association", "/@", 
    RowBox[{"Import", "[", "filename", "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.929039446810713*^9, 3.9290394888205013`*^9}, {
   3.92903955700441*^9, 3.9290395606828785`*^9}, 3.929039855397972*^9},
 CellLabel->
  "In[1321]:=",ExpressionUUID->"8873faf9-6cce-974d-b407-949d222e0d3b"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> 
         TypeSystem`CacheKey[
          5804802142803846546554854224644107834577063586918500065384], 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "marketGroupID"} -> 
            1, {All, "parentGroupID"} -> 1, {All, "marketGroupName"} -> 
            1, {All, "description"} -> 1, {All, "iconID"} -> 
            1, {All, "hasTypes"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "marketGroupID" -> TypeSystem`PackageScope`AtomShape[34], 
                "parentGroupID" -> 
                TypeSystem`PackageScope`UnknownShape[False], 
                "marketGroupName" -> TypeSystem`PackageScope`AtomShape[369.6],
                 "description" -> TypeSystem`PackageScope`AtomShape[560.], 
                "iconID" -> TypeSystem`PackageScope`UnknownShape[False], 
                "hasTypes" -> TypeSystem`PackageScope`AtomShape[34]|>], 
              DirectedInfinity[1], 6, {All}]], 20, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "marketGroupID", "parentGroupID", "marketGroupName", 
             "description", "iconID", "hasTypes"}, {
             TypeSystem`Atom[Integer], TypeSystem`AnyType, 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], TypeSystem`AnyType, 
             TypeSystem`Atom[Integer]}], 2008], "Meta" -> <||>, "RowTarget" -> 
         20, "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "marketGroupID"} -> 
            1, {All, "parentGroupID"} -> 1, {All, "marketGroupName"} -> 
            1, {All, "description"} -> 1, {All, "iconID"} -> 
            1, {All, "hasTypes"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "marketGroupID" -> TypeSystem`PackageScope`AtomShape[34], 
                "parentGroupID" -> 
                TypeSystem`PackageScope`UnknownShape[False], 
                "marketGroupName" -> TypeSystem`PackageScope`AtomShape[369.6],
                 "description" -> TypeSystem`PackageScope`AtomShape[560.], 
                "iconID" -> TypeSystem`PackageScope`UnknownShape[False], 
                "hasTypes" -> TypeSystem`PackageScope`AtomShape[34]|>], 
              DirectedInfinity[1], 6, {All}]], 20, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "marketGroupID", "parentGroupID", "marketGroupName", 
             "description", "iconID", "hasTypes"}, {
             TypeSystem`Atom[Integer], TypeSystem`AnyType, 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], TypeSystem`AnyType, 
             TypeSystem`Atom[Integer]}], 2008], "Path" -> {}, 
         "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 6, 
         "DataRowCount" -> 2008, "DataColumnCount" -> 6, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1889, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["marketGroupID", 
                    Style[
                    "marketGroupID", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "marketGroupID"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "marketGroupID"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["parentGroupID", 
                    Style[
                    "parentGroupID", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "parentGroupID"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "parentGroupID"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["marketGroupName", 
                    Style[
                    "marketGroupName", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "marketGroupName"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "marketGroupName"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["description", 
                    Style[
                    "description", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "description"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "description"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["iconID", 
                    Style[
                    "iconID", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "iconID"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "iconID"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["hasTypes", 
                    Style[
                    "hasTypes", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "hasTypes"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "hasTypes"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2742"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1889, 
                    Key["marketGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2741"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1889, 
                    Key["parentGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1889, 
                    Key["marketGroupName"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{369.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1889, 
                    Key["description"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["24464"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1889, 
                    Key["iconID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1889, 
                    Key["hasTypes"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2743"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1890, 
                    Key["marketGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2741"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1890, 
                    Key["parentGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1890, 
                    Key["marketGroupName"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{369.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1890, 
                    Key["description"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["24465"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1890, 
                    Key["iconID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1890, 
                    Key["hasTypes"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2744"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1891, 
                    Key["marketGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2741"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1891, 
                    Key["parentGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1891, 
                    Key["marketGroupName"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{369.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1891, 
                    Key["description"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["24466"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1891, 
                    Key["iconID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1891, 
                    Key["hasTypes"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2747"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1892, 
                    Key["marketGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2456"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1892, 
                    Key["parentGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Proving Ground Filaments", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1892, 
                    Key["marketGroupName"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{369.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "Filaments that connect to the Abyssal Proving Grounds for \
limited time PVP events.", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1892, 
                    Key["description"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["21925"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1892, 
                    Key["iconID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1892, 
                    Key["hasTypes"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2749"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1893, 
                    Key["marketGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2202"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1893, 
                    Key["parentGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Quantum Cores", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1893, 
                    Key["marketGroupName"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{369.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "Quantum Cores are FTL communications facillities vital to \
the efficient operation of Upwell structures.", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1893, 
                    Key["description"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["21729"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1893, 
                    Key["iconID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1893, 
                    Key["hasTypes"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2750"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1894, 
                    Key["marketGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2439"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1894, 
                    Key["parentGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Capital Astronautic Mutaplasmids", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1894, 
                    Key["marketGroupName"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{369.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Capital Astronautic Mutaplasmids", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1894, 
                    Key["description"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["Null", FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1894, 
                    Key["iconID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1894, 
                    Key["hasTypes"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2751"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1895, 
                    Key["marketGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2437"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1895, 
                    Key["parentGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Capital Armor Mutaplasmids", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1895, 
                    Key["marketGroupName"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{369.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Capital Armor Mutaplasmids", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1895, 
                    Key["description"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["Null", FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1895, 
                    Key["iconID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1895, 
                    Key["hasTypes"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2752"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1896, 
                    Key["marketGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2438"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1896, 
                    Key["parentGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Capital Shield Mutaplasmids", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1896, 
                    Key["marketGroupName"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{369.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Capital Shield Mutaplasmids", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1896, 
                    Key["description"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["Null", FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1896, 
                    Key["iconID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1896, 
                    Key["hasTypes"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2753"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1897, 
                    Key["marketGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2440"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1897, 
                    Key["parentGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Capital Engineering Mutaplasmids", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1897, 
                    Key["marketGroupName"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{369.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Capital Engineering Mutaplasmids", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1897, 
                    Key["description"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["Null", FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1897, 
                    Key["iconID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1897, 
                    Key["hasTypes"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2754"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1898, 
                    Key["marketGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2512"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1898, 
                    Key["parentGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Siege Module Mutaplasmids", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1898, 
                    Key["marketGroupName"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{369.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Siege Module Mutaplasmids", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1898, 
                    Key["description"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["Null", FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1898, 
                    Key["iconID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1898, 
                    Key["hasTypes"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2756"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1899, 
                    Key["marketGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2456"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1899, 
                    Key["parentGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Triglavian Space Outbound", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1899, 
                    Key["marketGroupName"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{369.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "Filaments that jump users out of the Triglavian Region \
Pochven", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1899, 
                    Key["description"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["24530"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1899, 
                    Key["iconID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1899, 
                    Key["hasTypes"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2757"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1900, 
                    Key["marketGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2456"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1900, 
                    Key["parentGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Triglavian Space Inbound", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1900, 
                    Key["marketGroupName"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{369.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "Filaments that jump users into the Triglavian Region \
Pochven", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1900, 
                    Key["description"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["24530"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1900, 
                    Key["iconID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1900, 
                    Key["hasTypes"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2760"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1901, 
                    Key["marketGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1659"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1901, 
                    Key["parentGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Special Edition Deployable Structures", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1901, 
                    Key["marketGroupName"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{369.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Special Edition Deployable Structures", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1901, 
                    Key["description"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["16"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1901, 
                    Key["iconID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1901, 
                    Key["hasTypes"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2761"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1902, 
                    Key["marketGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["977"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1902, 
                    Key["parentGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Clone Mappers", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1902, 
                    Key["marketGroupName"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{369.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "Boosters used in reconfiguration of clone mapping to allow \
the use of Tactical Capsuleer Recloners", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1902, 
                    Key["description"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["10144"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1902, 
                    Key["iconID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1902, 
                    Key["hasTypes"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2763"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1903, 
                    Key["marketGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["404"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1903, 
                    Key["parentGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Mobile Cynosural Beacons", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1903, 
                    Key["marketGroupName"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{369.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1903, 
                    Key["description"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["16"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1903, 
                    Key["iconID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1903, 
                    Key["hasTypes"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2764"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1904, 
                    Key["marketGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["406"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1904, 
                    Key["parentGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Mobile Cynosural Beacons", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1904, 
                    Key["marketGroupName"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{369.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1904, 
                    Key["description"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2703"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1904, 
                    Key["iconID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1904, 
                    Key["hasTypes"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2765"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1905, 
                    Key["marketGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["533"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1905, 
                    Key["parentGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Advanced Protective Technology", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1905, 
                    Key["marketGroupName"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{369.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1905, 
                    Key["description"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["24608"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1905, 
                    Key["iconID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1905, 
                    Key["hasTypes"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2766"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1906, 
                    Key["marketGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["533"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1906, 
                    Key["parentGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Molecular-Forging Tools", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1906, 
                    Key["marketGroupName"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{369.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1906, 
                    Key["description"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["24623"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1906, 
                    Key["iconID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1906, 
                    Key["hasTypes"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2767"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1907, 
                    Key["marketGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1034"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1907, 
                    Key["parentGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Molecular-Forged Materials", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1907, 
                    Key["marketGroupName"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{369.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1907, 
                    Key["description"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["24619"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1907, 
                    Key["iconID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1907, 
                    Key["hasTypes"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2768"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1908, 
                    Key["marketGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1035"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1908, 
                    Key["parentGroupID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Protective Components", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1908, 
                    Key["marketGroupName"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{369.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1908, 
                    Key["description"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["24638"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1908, 
                    Key["iconID"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1908, 
                    Key["hasTypes"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 2008, 1], {1, 2008 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 2008, 1], {1, 2008 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1889, "\[Dash]", 1908, " of ", 
                    Style[2008, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1889, "\[Dash]", 1908, " of ", 
                    Style[2008, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 2008, 1], {1, 2008 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 2008, 1], {1, 2008 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                   ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {
         1261.9000000000005`, {282.4206298828126, 287.57937011718764`}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {
        1261.9000000000005`, {282.4206298828126, 287.57937011718764`}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 5804802142803846546554854224644107834577063586918500065384,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.929039855843895*^9},
 CellLabel->
  "Out[1322]=",ExpressionUUID->"03319be0-5eff-e644-89f6-de8b28b1a50b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"marketGroupName", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"d", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "3"}], "]"}], "]"}], "//", "Normal"}], ")"}], 
   "[", 
   RowBox[{"[", 
    RowBox[{";;", "20"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"marketGroupID", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"d", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], "//", "Normal"}], ")"}], 
   "[", 
   RowBox[{"[", 
    RowBox[{";;", "20"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"marketGoupAssociation", "=", 
  RowBox[{"AssociationThread", "[", 
   RowBox[{"marketGroupName", ",", " ", "marketGroupID"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.9290394912780285`*^9, 3.929039516395111*^9}, {
  3.929039565373171*^9, 3.9290395838050003`*^9}, {3.929039635718092*^9, 
  3.929039657111408*^9}, {3.929039810882536*^9, 3.929039933803318*^9}, {
  3.929039977618059*^9, 
  3.929039979705393*^9}},ExpressionUUID->"ea3b8c8f-2f06-0d43-b161-\
98c9ab16746f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Blueprints & Reactions\"\>", ",", "\<\"Ships\"\>", 
   ",", "\<\"Standard Frigates\"\>", ",", "\<\"Standard Cruisers\"\>", 
   ",", "\<\"Standard Battleships\"\>", ",", "\<\"Standard Haulers\"\>", 
   ",", "\<\"Ship Equipment\"\>", ",", "\<\"Turrets & Launchers\"\>", 
   ",", "\<\"Ammunition & Charges\"\>", ",", "\<\"Hull & Armor\"\>", 
   ",", "\<\"Trade Goods\"\>", ",", "\<\"Industrial Goods\"\>", 
   ",", "\<\"Radioactive Goods\"\>", ",", "\<\"Passengers\"\>", 
   ",", "\<\"Implants & Boosters\"\>", ",", "\<\"Implants\"\>", 
   ",", "\<\"Propulsion\"\>", ",", "\<\"Standard Ores\"\>", 
   ",", "\<\"Caldari\"\>", ",", "\<\"Minmatar\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.929039493399786*^9, 3.9290395167698936`*^9}, {
   3.9290395626795197`*^9, 3.9290395846607876`*^9}, {3.9290396426060905`*^9, 
   3.9290396574667015`*^9}, {3.929039816529894*^9, 3.9290398311261444`*^9}, 
   3.92903988548794*^9, 3.9290399351281834`*^9},
 CellLabel->
  "Out[1325]=",ExpressionUUID->"ad4aeed1-4ac9-134d-a998-497350ecf5d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%1325", " ", "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.9290411094240284`*^9, 3.929041115692154*^9}},
 CellLabel->
  "In[1544]:=",ExpressionUUID->"24b00262-82aa-d245-a953-4a78080e4221"],

Cell["\<\
{\"Blueprints & Reactions\", \"Ships\", \"Standard Frigates\", \"Standard \
Cruisers\", \"Standard Battleships\", \"Standard Haulers\", \"Ship \
Equipment\", 
 \"Turrets & Launchers\", \"Ammunition & Charges\", \"Hull & Armor\", \"Trade \
Goods\", \"Industrial Goods\", \"Radioactive Goods\", \"Passengers\", 
 \"Implants & Boosters\", \"Implants\", \"Propulsion\", \"Standard Ores\", \
\"Caldari\", \"Minmatar\"}\
\>", "Output",
 CellChangeTimes->{{3.929039493399786*^9, 3.9290395167698936`*^9}, {
   3.9290395626795197`*^9, 3.9290395846607876`*^9}, {3.9290396426060905`*^9, 
   3.9290396574667015`*^9}, {3.929039816529894*^9, 3.9290398311261444`*^9}, 
   3.92903988548794*^9, 3.9290399351684246`*^9, 3.9290411160488567`*^9},
 CellLabel->
  "Out[1544]//InputForm=",ExpressionUUID->"cf23200b-4678-2a4a-a465-\
677b446d2c07"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
  "Import", "[", 
   "\"\<https://evetycoon.com/api/v1/market/history/10000002/44992\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.929040018734892*^9, 3.9290400617676506`*^9}, {
   3.929040142511572*^9, 3.9290401683218727`*^9}, 
   3.929040344255619*^9},ExpressionUUID->"c4cd9a29-a7bd-4948-be3d-\
8bef8ecb439a"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"\"date\"", "\[Rule]", "1572566400000"}], ",", 
             RowBox[{"\"regionId\"", "\[Rule]", "10000002"}], ",", 
             RowBox[{"\"typeId\"", "\[Rule]", "44992"}], ",", 
             RowBox[{"\"average\"", "\[Rule]", "3.47012`*^6"}], ",", 
             RowBox[{"\"highest\"", "\[Rule]", "3.59011217`*^6"}], ",", 
             RowBox[{"\"lowest\"", "\[Rule]", "3.461404`*^6"}], ",", 
             RowBox[{"\"orderCount\"", "\[Rule]", "2168"}], ",", 
             RowBox[{"\"volume\"", "\[Rule]", "1153189"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"\"date\"", "\[Rule]", "1572652800000"}], ",", 
             RowBox[{"\"regionId\"", "\[Rule]", "10000002"}], ",", 
             RowBox[{"\"typeId\"", "\[Rule]", "44992"}], ",", 
             RowBox[{"\"average\"", "\[Rule]", "3.45600099`*^6"}], ",", 
             RowBox[{"\"highest\"", "\[Rule]", "3.57878389`*^6"}], ",", 
             RowBox[{"\"lowest\"", "\[Rule]", "3.449501`*^6"}], ",", 
             RowBox[{"\"orderCount\"", "\[Rule]", "2319"}], ",", 
             RowBox[{"\"volume\"", "\[Rule]", "1318155"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"\"date\"", "\[Rule]", "1572739200000"}], ",", 
             RowBox[{"\"regionId\"", "\[Rule]", "10000002"}], ",", 
             RowBox[{"\"typeId\"", "\[Rule]", "44992"}], ",", 
             RowBox[{"\"average\"", "\[Rule]", "3.44944399`*^6"}], ",", 
             RowBox[{"\"highest\"", "\[Rule]", "3.54999994`*^6"}], ",", 
             RowBox[{"\"lowest\"", "\[Rule]", "3.44207401`*^6"}], ",", 
             RowBox[{"\"orderCount\"", "\[Rule]", "2150"}], ",", 
             RowBox[{"\"volume\"", "\[Rule]", "1143092"}]}], "}"}], ",", 
         TemplateBox[{"1699"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"\"date\"", "\[Rule]", "1719792000000"}], ",", 
             RowBox[{"\"regionId\"", "\[Rule]", "10000002"}], ",", 
             RowBox[{"\"typeId\"", "\[Rule]", "44992"}], ",", 
             RowBox[{"\"average\"", "\[Rule]", "5.2`*^6"}], ",", 
             RowBox[{"\"highest\"", "\[Rule]", "5.325`*^6"}], ",", 
             RowBox[{"\"lowest\"", "\[Rule]", "5.1`*^6"}], ",", 
             RowBox[{"\"orderCount\"", "\[Rule]", "1966"}], ",", 
             RowBox[{"\"volume\"", "\[Rule]", "1035302"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"\"date\"", "\[Rule]", "1719878400000"}], ",", 
             RowBox[{"\"regionId\"", "\[Rule]", "10000002"}], ",", 
             RowBox[{"\"typeId\"", "\[Rule]", "44992"}], ",", 
             RowBox[{"\"average\"", "\[Rule]", "5.061`*^6"}], ",", 
             RowBox[{"\"highest\"", "\[Rule]", "5.287`*^6"}], ",", 
             RowBox[{"\"lowest\"", "\[Rule]", "5.05`*^6"}], ",", 
             RowBox[{"\"orderCount\"", "\[Rule]", "1415"}], ",", 
             RowBox[{"\"volume\"", "\[Rule]", "666152"}]}], "}"}]}], "}"}], 
     Short[#, 8]& ], "line" -> 1344, "sessionID" -> 17058780316267577655, 
   "byteCount" -> 1636032, "size" -> 8, "stored" -> False, "expr" -> 
   Missing["NotStored"], "wrap" -> OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{{3.9290400194407196`*^9, 3.929040062149618*^9}, {
  3.9290401432144737`*^9, 3.9290401687319546`*^9}},
 CellLabel->
  "Out[1344]=",ExpressionUUID->"52f89e6f-cdbd-874b-9b39-699f26a5b33f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"GOODGROUPID", "=", 
  RowBox[{"{", "1923", "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TYPEID", "=", 
   RowBox[{"{", 
    RowBox[{
    "44992", ",", " ", "33697", ",", " ", "21587", ",", " ", "23153", ",", 
     " ", "23154", ",", " ", "23155", ",", " ", "23156", ",", " ", "23157", 
     ",", " ", "23163", ",", " ", "20110", ",", " ", "21073", ",", " ", 
     "21568", ",", " ", "21570"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"mGroupID", "=", "1902"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"i", "=", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"a", "=", 
  RowBox[{"Import", "[", 
   RowBox[{"\"\<https://evetycoon.com/api/v1/market/groups/\>\"", "<>", 
    RowBox[{"ToString", "[", "mGroupID", "]"}], "<>", "\"\</types\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"a", "[", 
    RowBox[{"[", "i", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"a", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"a", "//", "Values"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"c", "=", 
  RowBox[{"Import", "[", 
   RowBox[{"\"\<https://evetycoon.com/api/v1/market/history/10000002/\>\"", "<>", 
    RowBox[{"ToString", "[", "%", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"values", "=", 
  RowBox[{"Values", "[", "c", "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.9290403477544327`*^9, 3.929040423446699*^9}, 
   3.9290404673866177`*^9, {3.929040504808161*^9, 3.929040761584072*^9}, {
   3.929040791918707*^9, 3.9290408840550537`*^9}, {3.929040967339657*^9, 
   3.9290410675543785`*^9}, {3.9290412763747196`*^9, 
   3.9290414444669685`*^9}, {3.929041546684944*^9, 3.929041642702471*^9}, {
   3.929042587107582*^9, 3.9290425983935413`*^9}},
 CellLabel->
  "In[1815]:=",ExpressionUUID->"07da3841-71d7-ce4f-a384-e29fc899ed90"],

Cell[BoxData[
 RowBox[{"{", "1923", "}"}]], "Output",
 CellChangeTimes->{{3.9290403741413918`*^9, 3.9290404237927303`*^9}, 
   3.929040467880924*^9, {3.929040506874361*^9, 3.9290406093612633`*^9}, {
   3.929040784894949*^9, 3.9290408844335384`*^9}, {3.9290409677579975`*^9, 
   3.9290409765922165`*^9}, {3.929041013022789*^9, 3.929041068156704*^9}, {
   3.92904128405855*^9, 3.9290413043478184`*^9}, {3.9290413898198376`*^9, 
   3.929041445319626*^9}, {3.9290415496687355`*^9, 3.9290416437773285`*^9}, {
   3.929042584964243*^9, 3.929042598907997*^9}},
 CellLabel->
  "Out[1815]=",ExpressionUUID->"95ba1a38-1be2-1d43-a45f-b56065bc85b7"],

Cell[BoxData["1902"], "Output",
 CellChangeTimes->{{3.9290403741413918`*^9, 3.9290404237927303`*^9}, 
   3.929040467880924*^9, {3.929040506874361*^9, 3.9290406093612633`*^9}, {
   3.929040784894949*^9, 3.9290408844335384`*^9}, {3.9290409677579975`*^9, 
   3.9290409765922165`*^9}, {3.929041013022789*^9, 3.929041068156704*^9}, {
   3.92904128405855*^9, 3.9290413043478184`*^9}, {3.9290413898198376`*^9, 
   3.929041445319626*^9}, {3.9290415496687355`*^9, 3.9290416437773285`*^9}, {
   3.929042584964243*^9, 3.929042598961479*^9}},
 CellLabel->
  "Out[1817]=",ExpressionUUID->"33996408-5fd2-4044-9584-3d7e1c17b8c6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"typeID\"\>", "\[Rule]", "20110"}], ",", 
     RowBox[{"\<\"groupID\"\>", "\[Rule]", "530"}], ",", 
     RowBox[{"\<\"typeName\"\>", 
      "\[Rule]", "\<\"Sleeper Foundation Block\"\>"}], ",", 
     RowBox[{"\<\"iconID\"\>", "\[Rule]", "2890"}], ",", 
     RowBox[{"\<\"marketGroupID\"\>", "\[Rule]", "1902"}], ",", 
     RowBox[{"\<\"description\"\>", 
      "\[Rule]", "\<\"Alloys and special materials used in the manufacture of \
modules based on Ancient technology.\"\>"}], ",", 
     RowBox[{"\<\"published\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"volume\"\>", "\[Rule]", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"typeID\"\>", "\[Rule]", "21073"}], ",", 
     RowBox[{"\<\"groupID\"\>", "\[Rule]", "530"}], ",", 
     RowBox[{"\<\"typeName\"\>", "\[Rule]", "\<\"Sleeper Split Cables\"\>"}], 
     ",", 
     RowBox[{"\<\"iconID\"\>", "\[Rule]", "2890"}], ",", 
     RowBox[{"\<\"marketGroupID\"\>", "\[Rule]", "1902"}], ",", 
     RowBox[{"\<\"description\"\>", 
      "\[Rule]", "\<\"Alloys and special materials used in the manufacture of \
modules based on Ancient technology.\"\>"}], ",", 
     RowBox[{"\<\"published\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"volume\"\>", "\[Rule]", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"typeID\"\>", "\[Rule]", "21568"}], ",", 
     RowBox[{"\<\"groupID\"\>", "\[Rule]", "732"}], ",", 
     RowBox[{"\<\"typeName\"\>", 
      "\[Rule]", "\<\"Sleeper Data Interface Protocol\"\>"}], ",", 
     RowBox[{"\<\"iconID\"\>", "\[Rule]", "2886"}], ",", 
     RowBox[{"\<\"marketGroupID\"\>", "\[Rule]", "1902"}], ",", 
     RowBox[{"\<\"description\"\>", "\[Rule]", "\<\"\"\>"}], ",", 
     RowBox[{"\<\"published\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"volume\"\>", "\[Rule]", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"typeID\"\>", "\[Rule]", "21569"}], ",", 
     RowBox[{"\<\"groupID\"\>", "\[Rule]", "732"}], ",", 
     RowBox[{"\<\"typeName\"\>", 
      "\[Rule]", "\<\"Sleeper Profound Research Notes\"\>"}], ",", 
     RowBox[{"\<\"iconID\"\>", "\[Rule]", "2886"}], ",", 
     RowBox[{"\<\"marketGroupID\"\>", "\[Rule]", "1902"}], ",", 
     RowBox[{"\<\"description\"\>", "\[Rule]", "\<\"\"\>"}], ",", 
     RowBox[{"\<\"published\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"volume\"\>", "\[Rule]", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"typeID\"\>", "\[Rule]", "21570"}], ",", 
     RowBox[{"\<\"groupID\"\>", "\[Rule]", "732"}], ",", 
     RowBox[{"\<\"typeName\"\>", "\[Rule]", "\<\"Sleeper Manuscripts\"\>"}], 
     ",", 
     RowBox[{"\<\"iconID\"\>", "\[Rule]", "2886"}], ",", 
     RowBox[{"\<\"marketGroupID\"\>", "\[Rule]", "1902"}], ",", 
     RowBox[{"\<\"description\"\>", "\[Rule]", "\<\"\"\>"}], ",", 
     RowBox[{"\<\"published\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"volume\"\>", "\[Rule]", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"typeID\"\>", "\[Rule]", "21571"}], ",", 
     RowBox[{"\<\"groupID\"\>", "\[Rule]", "732"}], ",", 
     RowBox[{"\<\"typeName\"\>", 
      "\[Rule]", "\<\"Sleeper Technical Schematics\"\>"}], ",", 
     RowBox[{"\<\"iconID\"\>", "\[Rule]", "2886"}], ",", 
     RowBox[{"\<\"marketGroupID\"\>", "\[Rule]", "1902"}], ",", 
     RowBox[{"\<\"description\"\>", "\[Rule]", "\<\"\"\>"}], ",", 
     RowBox[{"\<\"published\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"volume\"\>", "\[Rule]", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"typeID\"\>", "\[Rule]", "21572"}], ",", 
     RowBox[{"\<\"groupID\"\>", "\[Rule]", "732"}], ",", 
     RowBox[{"\<\"typeName\"\>", "\[Rule]", "\<\"Sleeper Data Crystals\"\>"}],
      ",", 
     RowBox[{"\<\"iconID\"\>", "\[Rule]", "2886"}], ",", 
     RowBox[{"\<\"marketGroupID\"\>", "\[Rule]", "1902"}], ",", 
     RowBox[{"\<\"description\"\>", "\[Rule]", "\<\"\"\>"}], ",", 
     RowBox[{"\<\"published\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"volume\"\>", "\[Rule]", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"typeID\"\>", "\[Rule]", "21584"}], ",", 
     RowBox[{"\<\"groupID\"\>", "\[Rule]", "530"}], ",", 
     RowBox[{"\<\"typeName\"\>", 
      "\[Rule]", "\<\"Sleeper Micro Circuits\"\>"}], ",", 
     RowBox[{"\<\"iconID\"\>", "\[Rule]", "2890"}], ",", 
     RowBox[{"\<\"marketGroupID\"\>", "\[Rule]", "1902"}], ",", 
     RowBox[{"\<\"description\"\>", 
      "\[Rule]", "\<\"Alloys and special materials used in the manufacture of \
modules based on Ancient technology.\"\>"}], ",", 
     RowBox[{"\<\"published\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"volume\"\>", "\[Rule]", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"typeID\"\>", "\[Rule]", "21585"}], ",", 
     RowBox[{"\<\"groupID\"\>", "\[Rule]", "530"}], ",", 
     RowBox[{"\<\"typeName\"\>", 
      "\[Rule]", "\<\"Sleeper Cryo Batteries\"\>"}], ",", 
     RowBox[{"\<\"iconID\"\>", "\[Rule]", "2890"}], ",", 
     RowBox[{"\<\"marketGroupID\"\>", "\[Rule]", "1902"}], ",", 
     RowBox[{"\<\"description\"\>", 
      "\[Rule]", "\<\"Alloys and special materials used in the manufacture of \
modules based on Ancient technology.\"\>"}], ",", 
     RowBox[{"\<\"published\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"volume\"\>", "\[Rule]", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"typeID\"\>", "\[Rule]", "21586"}], ",", 
     RowBox[{"\<\"groupID\"\>", "\[Rule]", "530"}], ",", 
     RowBox[{"\<\"typeName\"\>", 
      "\[Rule]", "\<\"Sleeper Virtual Energizer\"\>"}], ",", 
     RowBox[{"\<\"iconID\"\>", "\[Rule]", "2890"}], ",", 
     RowBox[{"\<\"marketGroupID\"\>", "\[Rule]", "1902"}], ",", 
     RowBox[{"\<\"description\"\>", 
      "\[Rule]", "\<\"Alloys and special materials used in the manufacture of \
modules based on Ancient technology.\"\>"}], ",", 
     RowBox[{"\<\"published\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"volume\"\>", "\[Rule]", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"typeID\"\>", "\[Rule]", "21719"}], ",", 
     RowBox[{"\<\"groupID\"\>", "\[Rule]", "528"}], ",", 
     RowBox[{"\<\"typeName\"\>", "\[Rule]", "\<\"Sleeper Hyperbooster\"\>"}], 
     ",", 
     RowBox[{"\<\"iconID\"\>", "\[Rule]", "2889"}], ",", 
     RowBox[{"\<\"marketGroupID\"\>", "\[Rule]", "1902"}], ",", 
     RowBox[{"\<\"description\"\>", "\[Rule]", "\<\"\"\>"}], ",", 
     RowBox[{"\<\"published\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"volume\"\>", "\[Rule]", "0.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"typeID\"\>", "\[Rule]", "21720"}], ",", 
     RowBox[{"\<\"groupID\"\>", "\[Rule]", "528"}], ",", 
     RowBox[{"\<\"typeName\"\>", 
      "\[Rule]", "\<\"Sleeper Thermal Regulator\"\>"}], ",", 
     RowBox[{"\<\"iconID\"\>", "\[Rule]", "2889"}], ",", 
     RowBox[{"\<\"marketGroupID\"\>", "\[Rule]", "1902"}], ",", 
     RowBox[{"\<\"description\"\>", "\[Rule]", "\<\"\"\>"}], ",", 
     RowBox[{"\<\"published\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"volume\"\>", "\[Rule]", "0.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"typeID\"\>", "\[Rule]", "21721"}], ",", 
     RowBox[{"\<\"groupID\"\>", "\[Rule]", "528"}], ",", 
     RowBox[{"\<\"typeName\"\>", 
      "\[Rule]", "\<\"Sleeper Heat Nullifying Coil\"\>"}], ",", 
     RowBox[{"\<\"iconID\"\>", "\[Rule]", "2889"}], ",", 
     RowBox[{"\<\"marketGroupID\"\>", "\[Rule]", "1902"}], ",", 
     RowBox[{"\<\"description\"\>", "\[Rule]", "\<\"\"\>"}], ",", 
     RowBox[{"\<\"published\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"volume\"\>", "\[Rule]", "0.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"typeID\"\>", "\[Rule]", "21722"}], ",", 
     RowBox[{"\<\"groupID\"\>", "\[Rule]", "528"}], ",", 
     RowBox[{"\<\"typeName\"\>", 
      "\[Rule]", "\<\"Sleeper Nanite Cluster\"\>"}], ",", 
     RowBox[{"\<\"iconID\"\>", "\[Rule]", "2889"}], ",", 
     RowBox[{"\<\"marketGroupID\"\>", "\[Rule]", "1902"}], ",", 
     RowBox[{"\<\"description\"\>", "\[Rule]", "\<\"\"\>"}], ",", 
     RowBox[{"\<\"published\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"volume\"\>", "\[Rule]", "0.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"typeID\"\>", "\[Rule]", "21723"}], ",", 
     RowBox[{"\<\"groupID\"\>", "\[Rule]", "528"}], ",", 
     RowBox[{"\<\"typeName\"\>", 
      "\[Rule]", "\<\"Sleeper Reintegration Control\"\>"}], ",", 
     RowBox[{"\<\"iconID\"\>", "\[Rule]", "2889"}], ",", 
     RowBox[{"\<\"marketGroupID\"\>", "\[Rule]", "1902"}], ",", 
     RowBox[{"\<\"description\"\>", "\[Rule]", "\<\"\"\>"}], ",", 
     RowBox[{"\<\"published\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"volume\"\>", "\[Rule]", "0.1`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9290403741413918`*^9, 3.9290404237927303`*^9}, 
   3.929040467880924*^9, {3.929040506874361*^9, 3.9290406093612633`*^9}, {
   3.929040784894949*^9, 3.9290408844335384`*^9}, {3.9290409677579975`*^9, 
   3.9290409765922165`*^9}, {3.929041013022789*^9, 3.929041068156704*^9}, {
   3.92904128405855*^9, 3.9290413043478184`*^9}, {3.9290413898198376`*^9, 
   3.929041445319626*^9}, {3.9290415496687355`*^9, 3.9290416437773285`*^9}, {
   3.929042584964243*^9, 3.9290425990285816`*^9}},
 CellLabel->
  "Out[1819]=",ExpressionUUID->"a6ad9819-ff2b-5a4c-b4bb-ad8802314c4b"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"\"date\"", "\[Rule]", "1572566400000"}], ",", 
             RowBox[{"\"regionId\"", "\[Rule]", "10000002"}], ",", 
             RowBox[{"\"typeId\"", "\[Rule]", "20110"}], ",", 
             RowBox[{"\"average\"", "\[Rule]", "1.35909068`*^6"}], ",", 
             RowBox[{"\"highest\"", "\[Rule]", "2.75`*^6"}], ",", 
             RowBox[{"\"lowest\"", "\[Rule]", "574999.61`"}], ",", 
             RowBox[{"\"orderCount\"", "\[Rule]", "9"}], ",", 
             RowBox[{"\"volume\"", "\[Rule]", "22"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"\"date\"", "\[Rule]", "1572652800000"}], ",", 
             RowBox[{"\"regionId\"", "\[Rule]", "10000002"}], ",", 
             RowBox[{"\"typeId\"", "\[Rule]", "20110"}], ",", 
             RowBox[{"\"average\"", "\[Rule]", "985683.85`"}], ",", 
             RowBox[{"\"highest\"", "\[Rule]", "3.`*^6"}], ",", 
             RowBox[{"\"lowest\"", "\[Rule]", "579999.82`"}], ",", 
             RowBox[{"\"orderCount\"", "\[Rule]", "11"}], ",", 
             RowBox[{"\"volume\"", "\[Rule]", "19"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"\"date\"", "\[Rule]", "1572739200000"}], ",", 
             RowBox[{"\"regionId\"", "\[Rule]", "10000002"}], ",", 
             RowBox[{"\"typeId\"", "\[Rule]", "20110"}], ",", 
             RowBox[{"\"average\"", "\[Rule]", "2.91227088`*^6"}], ",", 
             RowBox[{"\"highest\"", "\[Rule]", "3.44799595`*^6"}], ",", 
             RowBox[{"\"lowest\"", "\[Rule]", "1.50000001`*^6"}], ",", 
             RowBox[{"\"orderCount\"", "\[Rule]", "11"}], ",", 
             RowBox[{"\"volume\"", "\[Rule]", "22"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"\"date\"", "\[Rule]", "1572825600000"}], ",", 
             RowBox[{"\"regionId\"", "\[Rule]", "10000002"}], ",", 
             RowBox[{"\"typeId\"", "\[Rule]", "20110"}], ",", 
             RowBox[{"\"average\"", "\[Rule]", "1.92301078`*^6"}], ",", 
             RowBox[{"\"highest\"", "\[Rule]", "2.55000002`*^6"}], ",", 
             RowBox[{"\"lowest\"", "\[Rule]", "602000.14`"}], ",", 
             RowBox[{"\"orderCount\"", "\[Rule]", "8"}], ",", 
             RowBox[{"\"volume\"", "\[Rule]", "16"}]}], "}"}], ",", 
         TemplateBox[{"1697"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"\"date\"", "\[Rule]", "1719705600000"}], ",", 
             RowBox[{"\"regionId\"", "\[Rule]", "10000002"}], ",", 
             RowBox[{"\"typeId\"", "\[Rule]", "20110"}], ",", 
             RowBox[{"\"average\"", "\[Rule]", "761060.47`"}], ",", 
             RowBox[{"\"highest\"", "\[Rule]", "886800.`"}], ",", 
             RowBox[{"\"lowest\"", "\[Rule]", "602400.`"}], ",", 
             RowBox[{"\"orderCount\"", "\[Rule]", "16"}], ",", 
             RowBox[{"\"volume\"", "\[Rule]", "43"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"\"date\"", "\[Rule]", "1719792000000"}], ",", 
             RowBox[{"\"regionId\"", "\[Rule]", "10000002"}], ",", 
             RowBox[{"\"typeId\"", "\[Rule]", "20110"}], ",", 
             RowBox[{"\"average\"", "\[Rule]", "730944.74`"}], ",", 
             RowBox[{"\"highest\"", "\[Rule]", "885700.`"}], ",", 
             RowBox[{"\"lowest\"", "\[Rule]", "605700.`"}], ",", 
             RowBox[{"\"orderCount\"", "\[Rule]", "18"}], ",", 
             RowBox[{"\"volume\"", "\[Rule]", "38"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"\"date\"", "\[Rule]", "1719878400000"}], ",", 
             RowBox[{"\"regionId\"", "\[Rule]", "10000002"}], ",", 
             RowBox[{"\"typeId\"", "\[Rule]", "20110"}], ",", 
             RowBox[{"\"average\"", "\[Rule]", "696667.24`"}], ",", 
             RowBox[{"\"highest\"", "\[Rule]", "885600.`"}], ",", 
             RowBox[{"\"lowest\"", "\[Rule]", "605800.`"}], ",", 
             RowBox[{"\"orderCount\"", "\[Rule]", "21"}], ",", 
             RowBox[{"\"volume\"", "\[Rule]", "58"}]}], "}"}]}], "}"}], 
     Short[#, 8]& ], "line" -> 1823, "sessionID" -> 17058780316267577655, 
   "byteCount" -> 1636032, "size" -> 8, "stored" -> False, "expr" -> 
   Missing["NotStored"], "wrap" -> OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{{3.9290403741413918`*^9, 3.9290404237927303`*^9}, 
   3.929040467880924*^9, {3.929040506874361*^9, 3.9290406093612633`*^9}, {
   3.929040784894949*^9, 3.9290408844335384`*^9}, {3.9290409677579975`*^9, 
   3.9290409765922165`*^9}, {3.929041013022789*^9, 3.929041068156704*^9}, {
   3.92904128405855*^9, 3.9290413043478184`*^9}, {3.9290413898198376`*^9, 
   3.929041445319626*^9}, {3.9290415496687355`*^9, 3.9290416437773285`*^9}, {
   3.929042584964243*^9, 3.9290425991544037`*^9}},
 CellLabel->
  "Out[1823]=",ExpressionUUID->"71f63795-9b2a-7a41-b610-83f9adb2423c"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"1572566400000", ",", "10000002", ",", "20110", ",", 
             "1.35909068`*^6", ",", "2.75`*^6", ",", "574999.61`", ",", "9", 
             ",", "22"}], "}"}], ",", 
         RowBox[{"{", 
           
           RowBox[{"1572652800000", ",", "10000002", ",", "20110", ",", 
             "985683.85`", ",", "3.`*^6", ",", "579999.82`", ",", "11", ",", 
             "19"}], "}"}], ",", 
         RowBox[{"{", 
           
           RowBox[{"1572739200000", ",", "10000002", ",", "20110", ",", 
             "2.91227088`*^6", ",", "3.44799595`*^6", ",", "1.50000001`*^6", 
             ",", "11", ",", "22"}], "}"}], ",", 
         RowBox[{"{", 
           
           RowBox[{"1572825600000", ",", "10000002", ",", "20110", ",", 
             "1.92301078`*^6", ",", "2.55000002`*^6", ",", "602000.14`", ",", 
             "8", ",", "16"}], "}"}], ",", 
         RowBox[{"{", 
           
           RowBox[{"1572912000000", ",", "10000002", ",", "20110", ",", 
             "1.04704252`*^6", ",", "3.39999886`*^6", ",", "602011.02`", ",", 
             "13", ",", "25"}], "}"}], ",", 
         RowBox[{"{", 
           
           RowBox[{"1572998400000", ",", "10000002", ",", "20110", ",", 
             "1.38484204`*^6", ",", "3.33944094`*^6", ",", "603004.07`", ",", 
             "8", ",", "14"}], "}"}], ",", 
         RowBox[{"{", 
           
           RowBox[{"1573084800000", ",", "10000002", ",", "20110", ",", 
             "2.71147055`*^6", ",", "3.33888033`*^6", ",", "603004.55`", ",", 
             "13", ",", "26"}], "}"}], ",", 
         TemplateBox[{"1690"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"{", 
           
           RowBox[{"1719360000000", ",", "10000002", ",", "20110", ",", 
             "811625.`", ",", "886900.`", ",", "609000.`", ",", "11", ",", 
             "48"}], "}"}], ",", 
         RowBox[{"{", 
           
           RowBox[{"1719446400000", ",", "10000002", ",", "20110", ",", 
             "632038.89`", ",", "870000.`", ",", "610300.`", ",", "16", ",", 
             "36"}], "}"}], ",", 
         RowBox[{"{", 
           
           RowBox[{"1719532800000", ",", "10000002", ",", "20110", ",", 
             "742885.29`", ",", "886600.`", ",", "610800.`", ",", "24", ",", 
             "34"}], "}"}], ",", 
         RowBox[{"{", 
           
           RowBox[{"1719619200000", ",", "10000002", ",", "20110", ",", 
             "610200.`", ",", "610800.`", ",", "608000.`", ",", "22", ",", 
             "234"}], "}"}], ",", 
         RowBox[{"{", 
           
           RowBox[{"1719705600000", ",", "10000002", ",", "20110", ",", 
             "761060.47`", ",", "886800.`", ",", "602400.`", ",", "16", ",", 
             "43"}], "}"}], ",", 
         RowBox[{"{", 
           
           RowBox[{"1719792000000", ",", "10000002", ",", "20110", ",", 
             "730944.74`", ",", "885700.`", ",", "605700.`", ",", "18", ",", 
             "38"}], "}"}], ",", 
         RowBox[{"{", 
           
           RowBox[{"1719878400000", ",", "10000002", ",", "20110", ",", 
             "696667.24`", ",", "885600.`", ",", "605800.`", ",", "21", ",", 
             "58"}], "}"}]}], "}"}], Short[#, 8]& ], "line" -> 1824, 
   "sessionID" -> 17058780316267577655, "byteCount" -> 409152, "size" -> 8, 
   "stored" -> False, "expr" -> Missing["NotStored"], "wrap" -> 
   OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{{3.9290403741413918`*^9, 3.9290404237927303`*^9}, 
   3.929040467880924*^9, {3.929040506874361*^9, 3.9290406093612633`*^9}, {
   3.929040784894949*^9, 3.9290408844335384`*^9}, {3.9290409677579975`*^9, 
   3.9290409765922165`*^9}, {3.929041013022789*^9, 3.929041068156704*^9}, {
   3.92904128405855*^9, 3.9290413043478184`*^9}, {3.9290413898198376`*^9, 
   3.929041445319626*^9}, {3.9290415496687355`*^9, 3.9290416437773285`*^9}, {
   3.929042584964243*^9, 3.9290425992582607`*^9}},
 CellLabel->
  "Out[1824]=",ExpressionUUID->"3bba9077-cd5a-dc46-9fc0-25c66affaddc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"userChoice", "=", "\"\<Blueprints & Reactions\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"marketGroupName", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"d", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "3"}], "]"}], "]"}], "//", "Normal"}], ")"}],
     "[", 
    RowBox[{"[", 
     RowBox[{";;", "20"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"marketGroupID", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"d", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], "//", "Normal"}], ")"}],
     "[", 
    RowBox[{"[", 
     RowBox[{";;", "20"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"marketGoupAssociation", "=", 
    RowBox[{"AssociationThread", "[", 
     RowBox[{"marketGroupName", ",", " ", "marketGroupID"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"mGroupID", "=", 
  RowBox[{
   RowBox[{"Key", "[", "userChoice", "]"}], "[", "marketGoupAssociation", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.9290411474159565`*^9, 3.929041211018364*^9}, {
  3.929041244184305*^9, 3.929041247659914*^9}},
 CellLabel->
  "In[1551]:=",ExpressionUUID->"11afa352-f2ae-af4b-8416-eddf0c8788c9"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.929041164077957*^9, 3.9290412123887653`*^9, 
  3.9290412479573536`*^9},
 CellLabel->
  "Out[1555]=",ExpressionUUID->"74549927-392e-4046-a539-66905ded07f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  "\"\<https://evetycoon.com/api/v1/market/stats/10000002/44992\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.929041538846035*^9, 3.929041538846035*^9}},
 CellLabel->
  "In[1611]:=",ExpressionUUID->"2ab292a0-d6ad-9343-837a-0780fa737560"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"buyVolume\"\>", "\[Rule]", "501725"}], ",", 
   RowBox[{"\<\"sellVolume\"\>", "\[Rule]", "384228"}], ",", 
   RowBox[{"\<\"buyOrders\"\>", "\[Rule]", "351"}], ",", 
   RowBox[{"\<\"sellOrders\"\>", "\[Rule]", "168"}], ",", 
   RowBox[{"\<\"buyOutliers\"\>", "\[Rule]", "99"}], ",", 
   RowBox[{"\<\"sellOutliers\"\>", "\[Rule]", "8"}], ",", 
   RowBox[{"\<\"buyThreshold\"\>", "\[Rule]", "503400.`"}], ",", 
   RowBox[{"\<\"sellThreshold\"\>", "\[Rule]", "5.184`*^7"}], ",", 
   RowBox[{"\<\"buyAvgFivePercent\"\>", "\[Rule]", "5.014049469823807`*^6"}], 
   ",", 
   RowBox[{"\<\"sellAvgFivePercent\"\>", "\[Rule]", "5.20688600281089`*^6"}], 
   ",", 
   RowBox[{"\<\"maxBuy\"\>", "\[Rule]", "5.034`*^6"}], ",", 
   RowBox[{"\<\"minSell\"\>", "\[Rule]", "5.184`*^6"}]}], "}"}]], "Output",
 CellChangeTimes->{3.929041539749111*^9},
 CellLabel->
  "Out[1611]=",ExpressionUUID->"43c72a8b-f862-8648-a5a5-e2196f8b0e7f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dataFromFuncIDIndex", "[", "i_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"typeID", ",", "FullData"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"typeID", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "44992", ",", " ", "33697", ",", " ", "21587", ",", " ", "23153", 
          ",", " ", "23154", ",", " ", "23155", ",", " ", "23156", ",", " ", 
          "23157", ",", " ", "23163", ",", " ", "20110", ",", " ", "21073", 
          ",", " ", "21568"}], "}"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"FullData", "=", 
       RowBox[{"Import", "[", 
        RowBox[{
        "\"\<https://evetycoon.com/api/v1/market/history/10000002/\>\"", "<>", 
         RowBox[{"ToString", "[", "typeID", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Values", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "->", 
         RowBox[{"Values", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "4", "]"}], "]"}], "]"}]}], "&"}], "/@", 
       "FullData"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataFromFuncIDIndex", "[", "1", "]"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Can", " ", "be", " ", "from", " ", "1"}], " ", "-", " ", "12"}], 
   " ", "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.9290416725693073`*^9, 
  3.9290418873390846`*^9}},ExpressionUUID->"68029645-f20c-1041-b165-\
f5f971cc98fc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1572566400000", "\[Rule]", "3.47012`*^6"}], ",", 
   RowBox[{"1572652800000", "\[Rule]", "3.45600099`*^6"}], ",", 
   RowBox[{"1572739200000", "\[Rule]", "3.44944399`*^6"}], ",", 
   RowBox[{"1572825600000", "\[Rule]", "3.47000073`*^6"}], ",", 
   RowBox[{"1572912000000", "\[Rule]", "3.457305`*^6"}], ",", 
   RowBox[{"1572998400000", "\[Rule]", "3.460001`*^6"}], ",", 
   RowBox[{"1573084800000", "\[Rule]", "3.465`*^6"}], ",", 
   RowBox[{"1573171200000", "\[Rule]", "3.46033`*^6"}], ",", 
   RowBox[{"1573257600000", "\[Rule]", "3.45030803`*^6"}], ",", 
   RowBox[{"1573344000000", "\[Rule]", "3.43166999`*^6"}], ",", 
   RowBox[{"1573430400000", "\[Rule]", "3.44089025`*^6"}], ",", 
   RowBox[{"1573516800000", "\[Rule]", "3.54284998`*^6"}], ",", 
   RowBox[{"1573603200000", "\[Rule]", "3.437804`*^6"}], ",", 
   RowBox[{"1573689600000", "\[Rule]", "3.43273722`*^6"}], ",", 
   RowBox[{"1573776000000", "\[Rule]", "3.43030301`*^6"}], ",", 
   RowBox[{"1573862400000", "\[Rule]", "3.41201409`*^6"}], ",", 
   RowBox[{"1573948800000", "\[Rule]", "3.404005`*^6"}], ",", 
   RowBox[{"1574035200000", "\[Rule]", "3.40369701`*^6"}], ",", 
   RowBox[{"1574121600000", "\[Rule]", "3.402331`*^6"}], ",", 
   RowBox[{"1574208000000", "\[Rule]", "3.382001`*^6"}], ",", 
   RowBox[{"1574294400000", "\[Rule]", "3.392`*^6"}], ",", 
   RowBox[{"1574380800000", "\[Rule]", "3.37703`*^6"}], ",", 
   RowBox[{"1574467200000", "\[Rule]", "3.36062`*^6"}], ",", 
   RowBox[{"1574553600000", "\[Rule]", "3.34620017`*^6"}], ",", 
   RowBox[{"1574640000000", "\[Rule]", "3.37499999`*^6"}], ",", 
   RowBox[{"1574726400000", "\[Rule]", "3.35000001`*^6"}], ",", 
   RowBox[{"1574812800000", "\[Rule]", "3.44697101`*^6"}], ",", 
   RowBox[{"1574899200000", "\[Rule]", "3.29999999`*^6"}], ",", 
   RowBox[{"1574985600000", "\[Rule]", "3.21315`*^6"}], ",", 
   RowBox[{"1575072000000", "\[Rule]", "3.252`*^6"}], ",", 
   RowBox[{"1575158400000", "\[Rule]", "3.2935`*^6"}], ",", 
   RowBox[{"1575244800000", "\[Rule]", "3.27519722`*^6"}], ",", 
   RowBox[{"1575331200000", "\[Rule]", "3.305901`*^6"}], ",", 
   RowBox[{"1575417600000", "\[Rule]", "3.30730306`*^6"}], ",", 
   RowBox[{"1575504000000", "\[Rule]", "3.301015`*^6"}], ",", 
   RowBox[{"1575590400000", "\[Rule]", "3.28301608`*^6"}], ",", 
   RowBox[{"1575676800000", "\[Rule]", "3.27840041`*^6"}], ",", 
   RowBox[{"1575763200000", "\[Rule]", "3.27207207`*^6"}], ",", 
   RowBox[{"1575849600000", "\[Rule]", "3.31001001`*^6"}], ",", 
   RowBox[{"1575936000000", "\[Rule]", "3.36370037`*^6"}], ",", 
   RowBox[{"1576022400000", "\[Rule]", "3.36020206`*^6"}], ",", 
   RowBox[{"1576108800000", "\[Rule]", "3.31700004`*^6"}], ",", 
   RowBox[{"1576195200000", "\[Rule]", "3.307606`*^6"}], ",", 
   RowBox[{"1576281600000", "\[Rule]", "3.29101`*^6"}], ",", 
   RowBox[{"1576368000000", "\[Rule]", "3.26815003`*^6"}], ",", 
   RowBox[{"1576454400000", "\[Rule]", "3.25`*^6"}], ",", 
   RowBox[{"1576540800000", "\[Rule]", "3.243101`*^6"}], ",", 
   RowBox[{"1576627200000", "\[Rule]", "3.24009`*^6"}], ",", 
   RowBox[{"1576713600000", "\[Rule]", "3.21016`*^6"}], ",", 
   RowBox[{"1576800000000", "\[Rule]", "3.20460205`*^6"}], ",", 
   RowBox[{"1576886400000", "\[Rule]", "3.171`*^6"}], ",", 
   RowBox[{"1576972800000", "\[Rule]", "3.1669`*^6"}], ",", 
   RowBox[{"1577059200000", "\[Rule]", "3.18`*^6"}], ",", 
   RowBox[{"1577145600000", "\[Rule]", "3.2102`*^6"}], ",", 
   RowBox[{"1577232000000", "\[Rule]", "3.399978`*^6"}], ",", 
   RowBox[{"1577318400000", "\[Rule]", "3.41126995`*^6"}], ",", 
   RowBox[{"1577404800000", "\[Rule]", "3.371304`*^6"}], ",", 
   RowBox[{"1577491200000", "\[Rule]", "3.28`*^6"}], ",", 
   RowBox[{"1577577600000", "\[Rule]", "3.252091`*^6"}], ",", 
   RowBox[{"1577664000000", "\[Rule]", "3.25`*^6"}], ",", 
   RowBox[{"1577750400000", "\[Rule]", "3.230061`*^6"}], ",", 
   RowBox[{"1577836800000", "\[Rule]", "3.2101`*^6"}], ",", 
   RowBox[{"1577923200000", "\[Rule]", "3.18622203`*^6"}], ",", 
   RowBox[{"1578009600000", "\[Rule]", "3.200012`*^6"}], ",", 
   RowBox[{"1578096000000", "\[Rule]", "3.19930599`*^6"}], ",", 
   RowBox[{"1578182400000", "\[Rule]", "3.192202`*^6"}], ",", 
   RowBox[{"1578268800000", "\[Rule]", "3.18540005`*^6"}], ",", 
   RowBox[{"1578355200000", "\[Rule]", "3.20000001`*^6"}], ",", 
   RowBox[{"1578441600000", "\[Rule]", "3.20500003`*^6"}], ",", 
   RowBox[{"1578528000000", "\[Rule]", "3.20120802`*^6"}], ",", 
   RowBox[{"1578614400000", "\[Rule]", "3.20199001`*^6"}], ",", 
   RowBox[{"1578700800000", "\[Rule]", "3.19170702`*^6"}], ",", 
   RowBox[{"1578787200000", "\[Rule]", "3.20000004`*^6"}], ",", 
   RowBox[{"1578873600000", "\[Rule]", "3.19500102`*^6"}], ",", 
   RowBox[{"1578960000000", "\[Rule]", "3.19210572`*^6"}], ",", 
   RowBox[{"1579046400000", "\[Rule]", "3.19720228`*^6"}], ",", 
   RowBox[{"1579132800000", "\[Rule]", "3.19420195`*^6"}], ",", 
   RowBox[{"1579219200000", "\[Rule]", "3.1931`*^6"}], ",", 
   RowBox[{"1579305600000", "\[Rule]", "3.19103998`*^6"}], ",", 
   RowBox[{"1579392000000", "\[Rule]", "3.19635`*^6"}], ",", 
   RowBox[{"1579478400000", "\[Rule]", "3.20405`*^6"}], ",", 
   RowBox[{"1579564800000", "\[Rule]", "3.202`*^6"}], ",", 
   RowBox[{"1579651200000", "\[Rule]", "3.20762`*^6"}], ",", 
   RowBox[{"1579737600000", "\[Rule]", "3.212077`*^6"}], ",", 
   RowBox[{"1579824000000", "\[Rule]", "3.22593911`*^6"}], ",", 
   RowBox[{"1579910400000", "\[Rule]", "3.28000259`*^6"}], ",", 
   RowBox[{"1579996800000", "\[Rule]", "3.27401107`*^6"}], ",", 
   RowBox[{"1580083200000", "\[Rule]", "3.27621`*^6"}], ",", 
   RowBox[{"1580169600000", "\[Rule]", "3.29000201`*^6"}], ",", 
   RowBox[{"1580256000000", "\[Rule]", "3.297202`*^6"}], ",", 
   RowBox[{"1580342400000", "\[Rule]", "3.295251`*^6"}], ",", 
   RowBox[{"1580428800000", "\[Rule]", "3.2965`*^6"}], ",", 
   RowBox[{"1580515200000", "\[Rule]", "3.280606`*^6"}], ",", 
   RowBox[{"1580601600000", "\[Rule]", "3.28022`*^6"}], ",", 
   RowBox[{"1580688000000", "\[Rule]", "3.27955`*^6"}], ",", 
   RowBox[{"1580774400000", "\[Rule]", "3.27105`*^6"}], ",", 
   RowBox[{"1580860800000", "\[Rule]", "3.28603001`*^6"}], ",", 
   RowBox[{"1580947200000", "\[Rule]", "3.276`*^6"}], ",", 
   RowBox[{"1581033600000", "\[Rule]", "3.26830528`*^6"}], ",", 
   RowBox[{"1581120000000", "\[Rule]", "3.26403`*^6"}], ",", 
   RowBox[{"1581206400000", "\[Rule]", "3.25849989`*^6"}], ",", 
   RowBox[{"1581292800000", "\[Rule]", "3.25614001`*^6"}], ",", 
   RowBox[{"1581379200000", "\[Rule]", "3.2630001`*^6"}], ",", 
   RowBox[{"1581465600000", "\[Rule]", "3.30000501`*^6"}], ",", 
   RowBox[{"1581552000000", "\[Rule]", "3.280505`*^6"}], ",", 
   RowBox[{"1581638400000", "\[Rule]", "3.275044`*^6"}], ",", 
   RowBox[{"1581724800000", "\[Rule]", "3.28471`*^6"}], ",", 
   RowBox[{"1581811200000", "\[Rule]", "3.27606`*^6"}], ",", 
   RowBox[{"1581897600000", "\[Rule]", "3.27814`*^6"}], ",", 
   RowBox[{"1581984000000", "\[Rule]", "3.28501`*^6"}], ",", 
   RowBox[{"1582070400000", "\[Rule]", "3.28312101`*^6"}], ",", 
   RowBox[{"1582156800000", "\[Rule]", "3.284504`*^6"}], ",", 
   RowBox[{"1582243200000", "\[Rule]", "3.2803029`*^6"}], ",", 
   RowBox[{"1582329600000", "\[Rule]", "3.25652102`*^6"}], ",", 
   RowBox[{"1582416000000", "\[Rule]", "3.24601`*^6"}], ",", 
   RowBox[{"1582502400000", "\[Rule]", "3.35008`*^6"}], ",", 
   RowBox[{"1582588800000", "\[Rule]", "3.295006`*^6"}], ",", 
   RowBox[{"1582675200000", "\[Rule]", "3.286066`*^6"}], ",", 
   RowBox[{"1582761600000", "\[Rule]", "3.28606`*^6"}], ",", 
   RowBox[{"1582848000000", "\[Rule]", "3.20012101`*^6"}], ",", 
   RowBox[{"1582934400000", "\[Rule]", "3.19002442`*^6"}], ",", 
   RowBox[{"1583020800000", "\[Rule]", "3.18501`*^6"}], ",", 
   RowBox[{"1583107200000", "\[Rule]", "3.19340648`*^6"}], ",", 
   RowBox[{"1583193600000", "\[Rule]", "3.206`*^6"}], ",", 
   RowBox[{"1583280000000", "\[Rule]", "3.222505`*^6"}], ",", 
   RowBox[{"1583366400000", "\[Rule]", "3.21706`*^6"}], ",", 
   RowBox[{"1583452800000", "\[Rule]", "3.19815402`*^6"}], ",", 
   RowBox[{"1583539200000", "\[Rule]", "3.200252`*^6"}], ",", 
   RowBox[{"1583625600000", "\[Rule]", "3.204042`*^6"}], ",", 
   RowBox[{"1583712000000", "\[Rule]", "3.22016241`*^6"}], ",", 
   RowBox[{"1583798400000", "\[Rule]", "3.227032`*^6"}], ",", 
   RowBox[{"1583884800000", "\[Rule]", "3.219`*^6"}], ",", 
   RowBox[{"1583971200000", "\[Rule]", "3.221`*^6"}], ",", 
   RowBox[{"1584057600000", "\[Rule]", "3.22`*^6"}], ",", 
   RowBox[{"1584144000000", "\[Rule]", "3.21200005`*^6"}], ",", 
   RowBox[{"1584230400000", "\[Rule]", "3.20600011`*^6"}], ",", 
   RowBox[{"1584316800000", "\[Rule]", "3.201`*^6"}], ",", 
   RowBox[{"1584403200000", "\[Rule]", "3.196`*^6"}], ",", 
   RowBox[{"1584489600000", "\[Rule]", "3.186`*^6"}], ",", 
   RowBox[{"1584576000000", "\[Rule]", "3.176`*^6"}], ",", 
   RowBox[{"1584662400000", "\[Rule]", "3.151`*^6"}], ",", 
   RowBox[{"1584748800000", "\[Rule]", "3.101`*^6"}], ",", 
   RowBox[{"1584835200000", "\[Rule]", "3.124`*^6"}], ",", 
   RowBox[{"1584921600000", "\[Rule]", "3.15`*^6"}], ",", 
   RowBox[{"1585008000000", "\[Rule]", "3.15`*^6"}], ",", 
   RowBox[{"1585094400000", "\[Rule]", "3.136`*^6"}], ",", 
   RowBox[{"1585180800000", "\[Rule]", "3.135`*^6"}], ",", 
   RowBox[{"1585267200000", "\[Rule]", "3.126`*^6"}], ",", 
   RowBox[{"1585353600000", "\[Rule]", "3.093`*^6"}], ",", 
   RowBox[{"1585440000000", "\[Rule]", "3.099`*^6"}], ",", 
   RowBox[{"1585526400000", "\[Rule]", "3.074`*^6"}], ",", 
   RowBox[{"1585612800000", "\[Rule]", "3.056`*^6"}], ",", 
   RowBox[{"1585699200000", "\[Rule]", "3.013`*^6"}], ",", 
   RowBox[{"1585785600000", "\[Rule]", "2.913`*^6"}], ",", 
   RowBox[{"1585872000000", "\[Rule]", "2.9`*^6"}], ",", 
   RowBox[{"1585958400000", "\[Rule]", "2.958`*^6"}], ",", 
   RowBox[{"1586044800000", "\[Rule]", "2.977`*^6"}], ",", 
   RowBox[{"1586131200000", "\[Rule]", "2.962`*^6"}], ",", 
   RowBox[{"1586217600000", "\[Rule]", "2.915`*^6"}], ",", 
   RowBox[{"1586304000000", "\[Rule]", "2.903`*^6"}], ",", 
   RowBox[{"1586390400000", "\[Rule]", "2.887`*^6"}], ",", 
   RowBox[{"1586476800000", "\[Rule]", "3.135`*^6"}], ",", 
   RowBox[{"1586563200000", "\[Rule]", "3.173`*^6"}], ",", 
   RowBox[{"1586649600000", "\[Rule]", "3.075`*^6"}], ",", 
   RowBox[{"1586736000000", "\[Rule]", "2.971`*^6"}], ",", 
   RowBox[{"1586822400000", "\[Rule]", "2.949`*^6"}], ",", 
   RowBox[{"1586908800000", "\[Rule]", "2.871`*^6"}], ",", 
   RowBox[{"1586995200000", "\[Rule]", "2.778`*^6"}], ",", 
   RowBox[{"1587081600000", "\[Rule]", "2.74`*^6"}], ",", 
   RowBox[{"1587168000000", "\[Rule]", "2.72`*^6"}], ",", 
   RowBox[{"1587254400000", "\[Rule]", "2.716`*^6"}], ",", 
   RowBox[{"1587340800000", "\[Rule]", "2.745`*^6"}], ",", 
   RowBox[{"1587427200000", "\[Rule]", "2.779`*^6"}], ",", 
   RowBox[{"1587513600000", "\[Rule]", "2.796`*^6"}], ",", 
   RowBox[{"1587600000000", "\[Rule]", "2.768`*^6"}], ",", 
   RowBox[{"1587686400000", "\[Rule]", "2.73`*^6"}], ",", 
   RowBox[{"1587772800000", "\[Rule]", "2.681`*^6"}], ",", 
   RowBox[{"1587859200000", "\[Rule]", "2.672`*^6"}], ",", 
   RowBox[{"1587945600000", "\[Rule]", "2.66`*^6"}], ",", 
   RowBox[{"1588032000000", "\[Rule]", "2.644`*^6"}], ",", 
   RowBox[{"1588118400000", "\[Rule]", "2.608`*^6"}], ",", 
   RowBox[{"1588204800000", "\[Rule]", "2.58`*^6"}], ",", 
   RowBox[{"1588291200000", "\[Rule]", "2.573`*^6"}], ",", 
   RowBox[{"1588377600000", "\[Rule]", "2.593`*^6"}], ",", 
   RowBox[{"1588464000000", "\[Rule]", "2.583`*^6"}], ",", 
   RowBox[{"1588550400000", "\[Rule]", "2.575`*^6"}], ",", 
   RowBox[{"1588636800000", "\[Rule]", "2.608`*^6"}], ",", 
   RowBox[{"1588723200000", "\[Rule]", "2.594`*^6"}], ",", 
   RowBox[{"1588809600000", "\[Rule]", "2.592`*^6"}], ",", 
   RowBox[{"1588896000000", "\[Rule]", "2.579`*^6"}], ",", 
   RowBox[{"1588982400000", "\[Rule]", "2.55`*^6"}], ",", 
   RowBox[{"1589068800000", "\[Rule]", "2.556`*^6"}], ",", 
   RowBox[{"1589155200000", "\[Rule]", "2.578`*^6"}], ",", 
   RowBox[{"1589241600000", "\[Rule]", "2.564`*^6"}], ",", 
   RowBox[{"1589328000000", "\[Rule]", "2.547`*^6"}], ",", 
   RowBox[{"1589414400000", "\[Rule]", "2.526`*^6"}], ",", 
   RowBox[{"1589500800000", "\[Rule]", "2.535`*^6"}], ",", 
   RowBox[{"1589587200000", "\[Rule]", "2.5`*^6"}], ",", 
   RowBox[{"1589673600000", "\[Rule]", "2.465`*^6"}], ",", 
   RowBox[{"1589760000000", "\[Rule]", "2.451`*^6"}], ",", 
   RowBox[{"1589846400000", "\[Rule]", "2.468`*^6"}], ",", 
   RowBox[{"1589932800000", "\[Rule]", "2.476`*^6"}], ",", 
   RowBox[{"1590019200000", "\[Rule]", "2.49`*^6"}], ",", 
   RowBox[{"1590105600000", "\[Rule]", "2.498`*^6"}], ",", 
   RowBox[{"1590192000000", "\[Rule]", "2.478`*^6"}], ",", 
   RowBox[{"1590278400000", "\[Rule]", "2.481`*^6"}], ",", 
   RowBox[{"1590364800000", "\[Rule]", "2.609`*^6"}], ",", 
   RowBox[{"1590451200000", "\[Rule]", "2.806`*^6"}], ",", 
   RowBox[{"1590537600000", "\[Rule]", "2.673`*^6"}], ",", 
   RowBox[{"1590624000000", "\[Rule]", "2.648`*^6"}], ",", 
   RowBox[{"1590710400000", "\[Rule]", "2.516`*^6"}], ",", 
   RowBox[{"1590796800000", "\[Rule]", "2.492`*^6"}], ",", 
   RowBox[{"1590883200000", "\[Rule]", "2.506`*^6"}], ",", 
   RowBox[{"1590969600000", "\[Rule]", "2.526`*^6"}], ",", 
   RowBox[{"1591056000000", "\[Rule]", "2.531`*^6"}], ",", 
   RowBox[{"1591142400000", "\[Rule]", "2.542`*^6"}], ",", 
   RowBox[{"1591228800000", "\[Rule]", "2.542`*^6"}], ",", 
   RowBox[{"1591315200000", "\[Rule]", "2.531`*^6"}], ",", 
   RowBox[{"1591401600000", "\[Rule]", "2.521`*^6"}], ",", 
   RowBox[{"1591488000000", "\[Rule]", "2.516`*^6"}], ",", 
   RowBox[{"1591574400000", "\[Rule]", "2.545`*^6"}], ",", 
   RowBox[{"1591660800000", "\[Rule]", "2.545`*^6"}], ",", 
   RowBox[{"1591747200000", "\[Rule]", "2.553`*^6"}], ",", 
   RowBox[{"1591833600000", "\[Rule]", "2.558`*^6"}], ",", 
   RowBox[{"1591920000000", "\[Rule]", "2.705`*^6"}], ",", 
   RowBox[{"1592006400000", "\[Rule]", "2.752`*^6"}], ",", 
   RowBox[{"1592092800000", "\[Rule]", "2.757`*^6"}], ",", 
   RowBox[{"1592179200000", "\[Rule]", "2.612`*^6"}], ",", 
   RowBox[{"1592265600000", "\[Rule]", "2.61`*^6"}], ",", 
   RowBox[{"1592352000000", "\[Rule]", "2.571`*^6"}], ",", 
   RowBox[{"1592438400000", "\[Rule]", "2.581`*^6"}], ",", 
   RowBox[{"1592524800000", "\[Rule]", "2.583`*^6"}], ",", 
   RowBox[{"1592611200000", "\[Rule]", "2.567`*^6"}], ",", 
   RowBox[{"1592697600000", "\[Rule]", "2.567`*^6"}], ",", 
   RowBox[{"1592784000000", "\[Rule]", "2.563`*^6"}], ",", 
   RowBox[{"1592870400000", "\[Rule]", "2.55`*^6"}], ",", 
   RowBox[{"1592956800000", "\[Rule]", "2.558`*^6"}], ",", 
   RowBox[{"1593043200000", "\[Rule]", "2.555`*^6"}], ",", 
   RowBox[{"1593129600000", "\[Rule]", "2.55`*^6"}], ",", 
   RowBox[{"1593216000000", "\[Rule]", "2.554`*^6"}], ",", 
   RowBox[{"1593302400000", "\[Rule]", "2.544`*^6"}], ",", 
   RowBox[{"1593388800000", "\[Rule]", "2.551`*^6"}], ",", 
   RowBox[{"1593475200000", "\[Rule]", "2.523`*^6"}], ",", 
   RowBox[{"1593561600000", "\[Rule]", "2.511`*^6"}], ",", 
   RowBox[{"1593648000000", "\[Rule]", "2.51`*^6"}], ",", 
   RowBox[{"1593734400000", "\[Rule]", "2.503`*^6"}], ",", 
   RowBox[{"1593820800000", "\[Rule]", "2.479`*^6"}], ",", 
   RowBox[{"1593907200000", "\[Rule]", "2.451`*^6"}], ",", 
   RowBox[{"1593993600000", "\[Rule]", "2.477`*^6"}], ",", 
   RowBox[{"1594080000000", "\[Rule]", "2.46`*^6"}], ",", 
   RowBox[{"1594166400000", "\[Rule]", "2.463`*^6"}], ",", 
   RowBox[{"1594252800000", "\[Rule]", "2.477`*^6"}], ",", 
   RowBox[{"1594339200000", "\[Rule]", "2.48`*^6"}], ",", 
   RowBox[{"1594425600000", "\[Rule]", "2.487`*^6"}], ",", 
   RowBox[{"1594512000000", "\[Rule]", "2.489`*^6"}], ",", 
   RowBox[{"1594598400000", "\[Rule]", "2.486`*^6"}], ",", 
   RowBox[{"1594684800000", "\[Rule]", "2.49`*^6"}], ",", 
   RowBox[{"1594771200000", "\[Rule]", "2.49`*^6"}], ",", 
   RowBox[{"1594857600000", "\[Rule]", "2.48`*^6"}], ",", 
   RowBox[{"1594944000000", "\[Rule]", "2.48`*^6"}], ",", 
   RowBox[{"1595030400000", "\[Rule]", "2.483`*^6"}], ",", 
   RowBox[{"1595116800000", "\[Rule]", "2.485`*^6"}], ",", 
   RowBox[{"1595203200000", "\[Rule]", "2.495`*^6"}], ",", 
   RowBox[{"1595289600000", "\[Rule]", "2.492`*^6"}], ",", 
   RowBox[{"1595376000000", "\[Rule]", "2.495`*^6"}], ",", 
   RowBox[{"1595462400000", "\[Rule]", "2.492`*^6"}], ",", 
   RowBox[{"1595548800000", "\[Rule]", "2.491`*^6"}], ",", 
   RowBox[{"1595635200000", "\[Rule]", "2.494`*^6"}], ",", 
   RowBox[{"1595721600000", "\[Rule]", "2.494`*^6"}], ",", 
   RowBox[{"1595808000000", "\[Rule]", "2.5`*^6"}], ",", 
   RowBox[{"1595894400000", "\[Rule]", "2.496`*^6"}], ",", 
   RowBox[{"1595980800000", "\[Rule]", "2.504`*^6"}], ",", 
   RowBox[{"1596067200000", "\[Rule]", "2.503`*^6"}], ",", 
   RowBox[{"1596153600000", "\[Rule]", "2.495`*^6"}], ",", 
   RowBox[{"1596240000000", "\[Rule]", "2.491`*^6"}], ",", 
   RowBox[{"1596326400000", "\[Rule]", "2.496`*^6"}], ",", 
   RowBox[{"1596412800000", "\[Rule]", "2.5`*^6"}], ",", 
   RowBox[{"1596499200000", "\[Rule]", "2.495`*^6"}], ",", 
   RowBox[{"1596585600000", "\[Rule]", "2.5`*^6"}], ",", 
   RowBox[{"1596672000000", "\[Rule]", "2.495`*^6"}], ",", 
   RowBox[{"1596758400000", "\[Rule]", "2.499`*^6"}], ",", 
   RowBox[{"1596844800000", "\[Rule]", "2.499`*^6"}], ",", 
   RowBox[{"1596931200000", "\[Rule]", "2.515`*^6"}], ",", 
   RowBox[{"1597017600000", "\[Rule]", "2.508`*^6"}], ",", 
   RowBox[{"1597104000000", "\[Rule]", "2.513`*^6"}], ",", 
   RowBox[{"1597190400000", "\[Rule]", "2.531`*^6"}], ",", 
   RowBox[{"1597276800000", "\[Rule]", "2.523`*^6"}], ",", 
   RowBox[{"1597363200000", "\[Rule]", "2.533`*^6"}], ",", 
   RowBox[{"1597449600000", "\[Rule]", "2.534`*^6"}], ",", 
   RowBox[{"1597536000000", "\[Rule]", "2.541`*^6"}], ",", 
   RowBox[{"1597622400000", "\[Rule]", "2.543`*^6"}], ",", 
   RowBox[{"1597708800000", "\[Rule]", "2.544`*^6"}], ",", 
   RowBox[{"1597795200000", "\[Rule]", "2.552`*^6"}], ",", 
   RowBox[{"1597881600000", "\[Rule]", "2.556`*^6"}], ",", 
   RowBox[{"1597968000000", "\[Rule]", "2.548`*^6"}], ",", 
   RowBox[{"1598054400000", "\[Rule]", "2.544`*^6"}], ",", 
   RowBox[{"1598140800000", "\[Rule]", "2.554`*^6"}], ",", 
   RowBox[{"1598227200000", "\[Rule]", "2.557`*^6"}], ",", 
   RowBox[{"1598313600000", "\[Rule]", "2.57`*^6"}], ",", 
   RowBox[{"1598400000000", "\[Rule]", "2.582`*^6"}], ",", 
   RowBox[{"1598486400000", "\[Rule]", "2.597`*^6"}], ",", 
   RowBox[{"1598572800000", "\[Rule]", "2.799`*^6"}], ",", 
   RowBox[{"1598659200000", "\[Rule]", "2.73`*^6"}], ",", 
   RowBox[{"1598745600000", "\[Rule]", "2.728`*^6"}], ",", 
   RowBox[{"1598832000000", "\[Rule]", "2.632`*^6"}], ",", 
   RowBox[{"1598918400000", "\[Rule]", "2.615`*^6"}], ",", 
   RowBox[{"1599004800000", "\[Rule]", "2.631`*^6"}], ",", 
   RowBox[{"1599091200000", "\[Rule]", "2.628`*^6"}], ",", 
   RowBox[{"1599177600000", "\[Rule]", "2.626`*^6"}], ",", 
   RowBox[{"1599264000000", "\[Rule]", "2.623`*^6"}], ",", 
   RowBox[{"1599350400000", "\[Rule]", "2.613`*^6"}], ",", 
   RowBox[{"1599436800000", "\[Rule]", "2.618`*^6"}], ",", 
   RowBox[{"1599523200000", "\[Rule]", "2.615`*^6"}], ",", 
   RowBox[{"1599609600000", "\[Rule]", "2.61`*^6"}], ",", 
   RowBox[{"1599696000000", "\[Rule]", "2.602`*^6"}], ",", 
   RowBox[{"1599782400000", "\[Rule]", "2.6`*^6"}], ",", 
   RowBox[{"1599868800000", "\[Rule]", "2.6`*^6"}], ",", 
   RowBox[{"1599955200000", "\[Rule]", "2.612`*^6"}], ",", 
   RowBox[{"1600041600000", "\[Rule]", "2.617`*^6"}], ",", 
   RowBox[{"1600128000000", "\[Rule]", "2.626`*^6"}], ",", 
   RowBox[{"1600214400000", "\[Rule]", "2.615`*^6"}], ",", 
   RowBox[{"1600300800000", "\[Rule]", "2.612`*^6"}], ",", 
   RowBox[{"1600387200000", "\[Rule]", "2.611`*^6"}], ",", 
   RowBox[{"1600473600000", "\[Rule]", "2.607`*^6"}], ",", 
   RowBox[{"1600560000000", "\[Rule]", "2.608`*^6"}], ",", 
   RowBox[{"1600646400000", "\[Rule]", "2.623`*^6"}], ",", 
   RowBox[{"1600732800000", "\[Rule]", "2.612`*^6"}], ",", 
   RowBox[{"1600819200000", "\[Rule]", "2.607`*^6"}], ",", 
   RowBox[{"1600905600000", "\[Rule]", "2.61`*^6"}], ",", 
   RowBox[{"1600992000000", "\[Rule]", "2.607`*^6"}], ",", 
   RowBox[{"1601078400000", "\[Rule]", "2.611`*^6"}], ",", 
   RowBox[{"1601164800000", "\[Rule]", "2.607`*^6"}], ",", 
   RowBox[{"1601251200000", "\[Rule]", "2.613`*^6"}], ",", 
   RowBox[{"1601337600000", "\[Rule]", "2.614`*^6"}], ",", 
   RowBox[{"1601424000000", "\[Rule]", "2.618`*^6"}], ",", 
   RowBox[{"1601510400000", "\[Rule]", "2.615`*^6"}], ",", 
   RowBox[{"1601596800000", "\[Rule]", "2.625`*^6"}], ",", 
   RowBox[{"1601683200000", "\[Rule]", "2.626`*^6"}], ",", 
   RowBox[{"1601769600000", "\[Rule]", "2.634`*^6"}], ",", 
   RowBox[{"1601856000000", "\[Rule]", "2.66`*^6"}], ",", 
   RowBox[{"1601942400000", "\[Rule]", "2.67`*^6"}], ",", 
   RowBox[{"1602028800000", "\[Rule]", "2.726`*^6"}], ",", 
   RowBox[{"1602115200000", "\[Rule]", "2.762`*^6"}], ",", 
   RowBox[{"1602201600000", "\[Rule]", "2.787`*^6"}], ",", 
   RowBox[{"1602288000000", "\[Rule]", "2.72`*^6"}], ",", 
   RowBox[{"1602374400000", "\[Rule]", "2.688`*^6"}], ",", 
   RowBox[{"1602460800000", "\[Rule]", "2.692`*^6"}], ",", 
   RowBox[{"1602547200000", "\[Rule]", "2.689`*^6"}], ",", 
   RowBox[{"1602633600000", "\[Rule]", "2.698`*^6"}], ",", 
   RowBox[{"1602720000000", "\[Rule]", "2.696`*^6"}], ",", 
   RowBox[{"1602806400000", "\[Rule]", "2.699`*^6"}], ",", 
   RowBox[{"1602892800000", "\[Rule]", "2.697`*^6"}], ",", 
   RowBox[{"1602979200000", "\[Rule]", "2.693`*^6"}], ",", 
   RowBox[{"1603065600000", "\[Rule]", "2.694`*^6"}], ",", 
   RowBox[{"1603152000000", "\[Rule]", "2.707`*^6"}], ",", 
   RowBox[{"1603238400000", "\[Rule]", "2.7`*^6"}], ",", 
   RowBox[{"1603324800000", "\[Rule]", "2.701`*^6"}], ",", 
   RowBox[{"1603411200000", "\[Rule]", "2.713`*^6"}], ",", 
   RowBox[{"1603497600000", "\[Rule]", "2.706`*^6"}], ",", 
   RowBox[{"1603584000000", "\[Rule]", "2.707`*^6"}], ",", 
   RowBox[{"1603670400000", "\[Rule]", "2.705`*^6"}], ",", 
   RowBox[{"1603756800000", "\[Rule]", "2.71`*^6"}], ",", 
   RowBox[{"1603843200000", "\[Rule]", "2.709`*^6"}], ",", 
   RowBox[{"1603929600000", "\[Rule]", "2.706`*^6"}], ",", 
   RowBox[{"1604016000000", "\[Rule]", "2.713`*^6"}], ",", 
   RowBox[{"1604102400000", "\[Rule]", "2.687`*^6"}], ",", 
   RowBox[{"1604188800000", "\[Rule]", "2.691`*^6"}], ",", 
   RowBox[{"1604275200000", "\[Rule]", "2.693`*^6"}], ",", 
   RowBox[{"1604361600000", "\[Rule]", "2.696`*^6"}], ",", 
   RowBox[{"1604448000000", "\[Rule]", "2.706`*^6"}], ",", 
   RowBox[{"1604534400000", "\[Rule]", "2.697`*^6"}], ",", 
   RowBox[{"1604620800000", "\[Rule]", "2.694`*^6"}], ",", 
   RowBox[{"1604707200000", "\[Rule]", "2.692`*^6"}], ",", 
   RowBox[{"1604793600000", "\[Rule]", "2.693`*^6"}], ",", 
   RowBox[{"1604880000000", "\[Rule]", "2.697`*^6"}], ",", 
   RowBox[{"1604966400000", "\[Rule]", "2.7`*^6"}], ",", 
   RowBox[{"1605052800000", "\[Rule]", "2.7`*^6"}], ",", 
   RowBox[{"1605139200000", "\[Rule]", "2.709`*^6"}], ",", 
   RowBox[{"1605225600000", "\[Rule]", "2.703`*^6"}], ",", 
   RowBox[{"1605312000000", "\[Rule]", "2.702`*^6"}], ",", 
   RowBox[{"1605398400000", "\[Rule]", "2.7`*^6"}], ",", 
   RowBox[{"1605484800000", "\[Rule]", "2.704`*^6"}], ",", 
   RowBox[{"1605571200000", "\[Rule]", "2.706`*^6"}], ",", 
   RowBox[{"1605657600000", "\[Rule]", "2.718`*^6"}], ",", 
   RowBox[{"1605744000000", "\[Rule]", "2.72`*^6"}], ",", 
   RowBox[{"1605830400000", "\[Rule]", "2.716`*^6"}], ",", 
   RowBox[{"1605916800000", "\[Rule]", "2.709`*^6"}], ",", 
   RowBox[{"1606003200000", "\[Rule]", "2.717`*^6"}], ",", 
   RowBox[{"1606089600000", "\[Rule]", "2.726`*^6"}], ",", 
   RowBox[{"1606176000000", "\[Rule]", "2.751`*^6"}], ",", 
   RowBox[{"1606262400000", "\[Rule]", "2.748`*^6"}], ",", 
   RowBox[{"1606348800000", "\[Rule]", "2.63`*^6"}], ",", 
   RowBox[{"1606435200000", "\[Rule]", "2.64`*^6"}], ",", 
   RowBox[{"1606521600000", "\[Rule]", "2.688`*^6"}], ",", 
   RowBox[{"1606608000000", "\[Rule]", "2.686`*^6"}], ",", 
   RowBox[{"1606694400000", "\[Rule]", "2.711`*^6"}], ",", 
   RowBox[{"1606780800000", "\[Rule]", "2.708`*^6"}], ",", 
   RowBox[{"1606867200000", "\[Rule]", "2.696`*^6"}], ",", 
   RowBox[{"1606953600000", "\[Rule]", "2.696`*^6"}], ",", 
   RowBox[{"1607040000000", "\[Rule]", "2.691`*^6"}], ",", 
   RowBox[{"1607126400000", "\[Rule]", "2.686`*^6"}], ",", 
   RowBox[{"1607212800000", "\[Rule]", "2.682`*^6"}], ",", 
   RowBox[{"1607299200000", "\[Rule]", "2.688`*^6"}], ",", 
   RowBox[{"1607385600000", "\[Rule]", "2.683`*^6"}], ",", 
   RowBox[{"1607472000000", "\[Rule]", "2.68`*^6"}], ",", 
   RowBox[{"1607558400000", "\[Rule]", "2.697`*^6"}], ",", 
   RowBox[{"1607644800000", "\[Rule]", "2.679`*^6"}], ",", 
   RowBox[{"1607731200000", "\[Rule]", "2.672`*^6"}], ",", 
   RowBox[{"1607817600000", "\[Rule]", "2.674`*^6"}], ",", 
   RowBox[{"1607904000000", "\[Rule]", "2.672`*^6"}], ",", 
   RowBox[{"1607990400000", "\[Rule]", "2.664`*^6"}], ",", 
   RowBox[{"1608076800000", "\[Rule]", "2.666`*^6"}], ",", 
   RowBox[{"1608163200000", "\[Rule]", "2.661`*^6"}], ",", 
   RowBox[{"1608249600000", "\[Rule]", "2.664`*^6"}], ",", 
   RowBox[{"1608336000000", "\[Rule]", "2.657`*^6"}], ",", 
   RowBox[{"1608422400000", "\[Rule]", "2.642`*^6"}], ",", 
   RowBox[{"1608508800000", "\[Rule]", "2.642`*^6"}], ",", 
   RowBox[{"1608595200000", "\[Rule]", "2.65`*^6"}], ",", 
   RowBox[{"1608681600000", "\[Rule]", "2.646`*^6"}], ",", 
   RowBox[{"1608768000000", "\[Rule]", "2.8`*^6"}], ",", 
   RowBox[{"1608854400000", "\[Rule]", "2.819`*^6"}], ",", 
   RowBox[{"1608940800000", "\[Rule]", "2.77`*^6"}], ",", 
   RowBox[{"1609027200000", "\[Rule]", "2.657`*^6"}], ",", 
   RowBox[{"1609113600000", "\[Rule]", "2.651`*^6"}], ",", 
   RowBox[{"1609200000000", "\[Rule]", "2.647`*^6"}], ",", 
   RowBox[{"1609286400000", "\[Rule]", "2.643`*^6"}], ",", 
   RowBox[{"1609372800000", "\[Rule]", "2.638`*^6"}], ",", 
   RowBox[{"1609459200000", "\[Rule]", "2.606`*^6"}], ",", 
   RowBox[{"1609545600000", "\[Rule]", "2.56`*^6"}], ",", 
   RowBox[{"1609632000000", "\[Rule]", "2.552`*^6"}], ",", 
   RowBox[{"1609718400000", "\[Rule]", "2.559`*^6"}], ",", 
   RowBox[{"1609804800000", "\[Rule]", "2.557`*^6"}], ",", 
   RowBox[{"1609891200000", "\[Rule]", "2.546`*^6"}], ",", 
   RowBox[{"1609977600000", "\[Rule]", "2.541`*^6"}], ",", 
   RowBox[{"1610064000000", "\[Rule]", "2.533`*^6"}], ",", 
   RowBox[{"1610150400000", "\[Rule]", "2.492`*^6"}], ",", 
   RowBox[{"1610236800000", "\[Rule]", "2.49`*^6"}], ",", 
   RowBox[{"1610323200000", "\[Rule]", "2.512`*^6"}], ",", 
   RowBox[{"1610409600000", "\[Rule]", "2.5`*^6"}], ",", 
   RowBox[{"1610496000000", "\[Rule]", "2.531`*^6"}], ",", 
   RowBox[{"1610582400000", "\[Rule]", "2.508`*^6"}], ",", 
   RowBox[{"1610668800000", "\[Rule]", "2.501`*^6"}], ",", 
   RowBox[{"1610755200000", "\[Rule]", "2.499`*^6"}], ",", 
   RowBox[{"1610841600000", "\[Rule]", "2.503`*^6"}], ",", 
   RowBox[{"1610928000000", "\[Rule]", "2.505`*^6"}], ",", 
   RowBox[{"1611014400000", "\[Rule]", "2.5`*^6"}], ",", 
   RowBox[{"1611100800000", "\[Rule]", "2.501`*^6"}], ",", 
   RowBox[{"1611187200000", "\[Rule]", "2.498`*^6"}], ",", 
   RowBox[{"1611273600000", "\[Rule]", "2.49`*^6"}], ",", 
   RowBox[{"1611360000000", "\[Rule]", "2.486`*^6"}], ",", 
   RowBox[{"1611446400000", "\[Rule]", "2.481`*^6"}], ",", 
   RowBox[{"1611532800000", "\[Rule]", "2.481`*^6"}], ",", 
   RowBox[{"1611619200000", "\[Rule]", "2.484`*^6"}], ",", 
   RowBox[{"1611705600000", "\[Rule]", "2.473`*^6"}], ",", 
   RowBox[{"1611792000000", "\[Rule]", "2.472`*^6"}], ",", 
   RowBox[{"1611878400000", "\[Rule]", "2.471`*^6"}], ",", 
   RowBox[{"1611964800000", "\[Rule]", "2.466`*^6"}], ",", 
   RowBox[{"1612051200000", "\[Rule]", "2.455`*^6"}], ",", 
   RowBox[{"1612137600000", "\[Rule]", "2.475`*^6"}], ",", 
   RowBox[{"1612224000000", "\[Rule]", "2.459`*^6"}], ",", 
   RowBox[{"1612310400000", "\[Rule]", "2.455`*^6"}], ",", 
   RowBox[{"1612396800000", "\[Rule]", "2.446`*^6"}], ",", 
   RowBox[{"1612483200000", "\[Rule]", "2.442`*^6"}], ",", 
   RowBox[{"1612569600000", "\[Rule]", "2.439`*^6"}], ",", 
   RowBox[{"1612656000000", "\[Rule]", "2.438`*^6"}], ",", 
   RowBox[{"1612742400000", "\[Rule]", "2.46`*^6"}], ",", 
   RowBox[{"1612828800000", "\[Rule]", "2.445`*^6"}], ",", 
   RowBox[{"1612915200000", "\[Rule]", "2.444`*^6"}], ",", 
   RowBox[{"1613001600000", "\[Rule]", "2.441`*^6"}], ",", 
   RowBox[{"1613088000000", "\[Rule]", "2.438`*^6"}], ",", 
   RowBox[{"1613174400000", "\[Rule]", "2.43`*^6"}], ",", 
   RowBox[{"1613260800000", "\[Rule]", "2.427`*^6"}], ",", 
   RowBox[{"1613347200000", "\[Rule]", "2.414`*^6"}], ",", 
   RowBox[{"1613433600000", "\[Rule]", "2.413`*^6"}], ",", 
   RowBox[{"1613520000000", "\[Rule]", "2.412`*^6"}], ",", 
   RowBox[{"1613606400000", "\[Rule]", "2.41`*^6"}], ",", 
   RowBox[{"1613692800000", "\[Rule]", "2.41`*^6"}], ",", 
   RowBox[{"1613779200000", "\[Rule]", "2.4`*^6"}], ",", 
   RowBox[{"1613865600000", "\[Rule]", "2.408`*^6"}], ",", 
   RowBox[{"1613952000000", "\[Rule]", "2.415`*^6"}], ",", 
   RowBox[{"1614038400000", "\[Rule]", "2.418`*^6"}], ",", 
   RowBox[{"1614124800000", "\[Rule]", "2.421`*^6"}], ",", 
   RowBox[{"1614211200000", "\[Rule]", "2.42`*^6"}], ",", 
   RowBox[{"1614297600000", "\[Rule]", "2.402`*^6"}], ",", 
   RowBox[{"1614384000000", "\[Rule]", "2.362`*^6"}], ",", 
   RowBox[{"1614470400000", "\[Rule]", "2.335`*^6"}], ",", 
   RowBox[{"1614556800000", "\[Rule]", "2.334`*^6"}], ",", 
   RowBox[{"1614643200000", "\[Rule]", "2.338`*^6"}], ",", 
   RowBox[{"1614729600000", "\[Rule]", "2.337`*^6"}], ",", 
   RowBox[{"1614816000000", "\[Rule]", "2.341`*^6"}], ",", 
   RowBox[{"1614902400000", "\[Rule]", "2.343`*^6"}], ",", 
   RowBox[{"1614988800000", "\[Rule]", "2.331`*^6"}], ",", 
   RowBox[{"1615075200000", "\[Rule]", "2.322`*^6"}], ",", 
   RowBox[{"1615161600000", "\[Rule]", "2.33`*^6"}], ",", 
   RowBox[{"1615248000000", "\[Rule]", "2.324`*^6"}], ",", 
   RowBox[{"1615334400000", "\[Rule]", "2.318`*^6"}], ",", 
   RowBox[{"1615420800000", "\[Rule]", "2.317`*^6"}], ",", 
   RowBox[{"1615507200000", "\[Rule]", "2.315`*^6"}], ",", 
   RowBox[{"1615593600000", "\[Rule]", "2.301`*^6"}], ",", 
   RowBox[{"1615680000000", "\[Rule]", "2.298`*^6"}], ",", 
   RowBox[{"1615766400000", "\[Rule]", "2.305`*^6"}], ",", 
   RowBox[{"1615852800000", "\[Rule]", "2.304`*^6"}], ",", 
   RowBox[{"1615939200000", "\[Rule]", "2.291`*^6"}], ",", 
   RowBox[{"1616025600000", "\[Rule]", "2.245`*^6"}], ",", 
   RowBox[{"1616112000000", "\[Rule]", "2.223`*^6"}], ",", 
   RowBox[{"1616198400000", "\[Rule]", "2.201`*^6"}], ",", 
   RowBox[{"1616284800000", "\[Rule]", "2.199`*^6"}], ",", 
   RowBox[{"1616371200000", "\[Rule]", "2.204`*^6"}], ",", 
   RowBox[{"1616457600000", "\[Rule]", "2.209`*^6"}], ",", 
   RowBox[{"1616544000000", "\[Rule]", "2.24`*^6"}], ",", 
   RowBox[{"1616630400000", "\[Rule]", "2.244`*^6"}], ",", 
   RowBox[{"1616716800000", "\[Rule]", "2.225`*^6"}], ",", 
   RowBox[{"1616803200000", "\[Rule]", "2.198`*^6"}], ",", 
   RowBox[{"1616889600000", "\[Rule]", "2.195`*^6"}], ",", 
   RowBox[{"1616976000000", "\[Rule]", "2.195`*^6"}], ",", 
   RowBox[{"1617062400000", "\[Rule]", "2.208`*^6"}], ",", 
   RowBox[{"1617148800000", "\[Rule]", "2.219`*^6"}], ",", 
   RowBox[{"1617235200000", "\[Rule]", "2.2`*^6"}], ",", 
   RowBox[{"1617321600000", "\[Rule]", "2.2`*^6"}], ",", 
   RowBox[{"1617408000000", "\[Rule]", "2.197`*^6"}], ",", 
   RowBox[{"1617494400000", "\[Rule]", "2.208`*^6"}], ",", 
   RowBox[{"1617580800000", "\[Rule]", "2.239`*^6"}], ",", 
   RowBox[{"1617667200000", "\[Rule]", "2.22`*^6"}], ",", 
   RowBox[{"1617753600000", "\[Rule]", "2.237`*^6"}], ",", 
   RowBox[{"1617840000000", "\[Rule]", "2.255`*^6"}], ",", 
   RowBox[{"1617926400000", "\[Rule]", "2.264`*^6"}], ",", 
   RowBox[{"1618012800000", "\[Rule]", "2.3`*^6"}], ",", 
   RowBox[{"1618099200000", "\[Rule]", "2.3`*^6"}], ",", 
   RowBox[{"1618185600000", "\[Rule]", "2.326`*^6"}], ",", 
   RowBox[{"1618272000000", "\[Rule]", "2.361`*^6"}], ",", 
   RowBox[{"1618358400000", "\[Rule]", "2.405`*^6"}], ",", 
   RowBox[{"1618444800000", "\[Rule]", "2.394`*^6"}], ",", 
   RowBox[{"1618531200000", "\[Rule]", "2.386`*^6"}], ",", 
   RowBox[{"1618617600000", "\[Rule]", "2.37`*^6"}], ",", 
   RowBox[{"1618704000000", "\[Rule]", "2.332`*^6"}], ",", 
   RowBox[{"1618790400000", "\[Rule]", "2.406`*^6"}], ",", 
   RowBox[{"1618876800000", "\[Rule]", "2.388`*^6"}], ",", 
   RowBox[{"1618963200000", "\[Rule]", "2.367`*^6"}], ",", 
   RowBox[{"1619049600000", "\[Rule]", "2.366`*^6"}], ",", 
   RowBox[{"1619136000000", "\[Rule]", "2.346`*^6"}], ",", 
   RowBox[{"1619222400000", "\[Rule]", "2.298`*^6"}], ",", 
   RowBox[{"1619308800000", "\[Rule]", "2.297`*^6"}], ",", 
   RowBox[{"1619395200000", "\[Rule]", "2.296`*^6"}], ",", 
   RowBox[{"1619481600000", "\[Rule]", "2.3`*^6"}], ",", 
   RowBox[{"1619568000000", "\[Rule]", "2.304`*^6"}], ",", 
   RowBox[{"1619654400000", "\[Rule]", "2.308`*^6"}], ",", 
   RowBox[{"1619740800000", "\[Rule]", "2.305`*^6"}], ",", 
   RowBox[{"1619827200000", "\[Rule]", "2.301`*^6"}], ",", 
   RowBox[{"1619913600000", "\[Rule]", "2.309`*^6"}], ",", 
   RowBox[{"1620000000000", "\[Rule]", "2.298`*^6"}], ",", 
   RowBox[{"1620086400000", "\[Rule]", "2.296`*^6"}], ",", 
   RowBox[{"1620172800000", "\[Rule]", "2.293`*^6"}], ",", 
   RowBox[{"1620259200000", "\[Rule]", "2.306`*^6"}], ",", 
   RowBox[{"1620345600000", "\[Rule]", "2.31`*^6"}], ",", 
   RowBox[{"1620432000000", "\[Rule]", "2.314`*^6"}], ",", 
   RowBox[{"1620518400000", "\[Rule]", "2.313`*^6"}], ",", 
   RowBox[{"1620604800000", "\[Rule]", "2.38`*^6"}], ",", 
   RowBox[{"1620691200000", "\[Rule]", "2.401`*^6"}], ",", 
   RowBox[{"1620777600000", "\[Rule]", "2.411`*^6"}], ",", 
   RowBox[{"1620864000000", "\[Rule]", "2.438`*^6"}], ",", 
   RowBox[{"1620950400000", "\[Rule]", "2.398`*^6"}], ",", 
   RowBox[{"1621036800000", "\[Rule]", "2.341`*^6"}], ",", 
   RowBox[{"1621123200000", "\[Rule]", "2.377`*^6"}], ",", 
   RowBox[{"1621209600000", "\[Rule]", "2.406`*^6"}], ",", 
   RowBox[{"1621296000000", "\[Rule]", "2.421`*^6"}], ",", 
   RowBox[{"1621382400000", "\[Rule]", "2.405`*^6"}], ",", 
   RowBox[{"1621468800000", "\[Rule]", "2.374`*^6"}], ",", 
   RowBox[{"1621555200000", "\[Rule]", "2.366`*^6"}], ",", 
   RowBox[{"1621641600000", "\[Rule]", "2.346`*^6"}], ",", 
   RowBox[{"1621728000000", "\[Rule]", "2.375`*^6"}], ",", 
   RowBox[{"1621814400000", "\[Rule]", "2.386`*^6"}], ",", 
   RowBox[{"1621900800000", "\[Rule]", "2.382`*^6"}], ",", 
   RowBox[{"1621987200000", "\[Rule]", "2.365`*^6"}], ",", 
   RowBox[{"1622073600000", "\[Rule]", "2.385`*^6"}], ",", 
   RowBox[{"1622160000000", "\[Rule]", "2.381`*^6"}], ",", 
   RowBox[{"1622246400000", "\[Rule]", "2.417`*^6"}], ",", 
   RowBox[{"1622332800000", "\[Rule]", "2.39`*^6"}], ",", 
   RowBox[{"1622419200000", "\[Rule]", "2.392`*^6"}], ",", 
   RowBox[{"1622505600000", "\[Rule]", "2.402`*^6"}], ",", 
   RowBox[{"1622592000000", "\[Rule]", "2.397`*^6"}], ",", 
   RowBox[{"1622678400000", "\[Rule]", "2.391`*^6"}], ",", 
   RowBox[{"1622764800000", "\[Rule]", "2.39`*^6"}], ",", 
   RowBox[{"1622851200000", "\[Rule]", "2.397`*^6"}], ",", 
   RowBox[{"1622937600000", "\[Rule]", "2.405`*^6"}], ",", 
   RowBox[{"1623024000000", "\[Rule]", "2.415`*^6"}], ",", 
   RowBox[{"1623110400000", "\[Rule]", "2.451`*^6"}], ",", 
   RowBox[{"1623196800000", "\[Rule]", "2.441`*^6"}], ",", 
   RowBox[{"1623283200000", "\[Rule]", "2.504`*^6"}], ",", 
   RowBox[{"1623369600000", "\[Rule]", "2.497`*^6"}], ",", 
   RowBox[{"1623456000000", "\[Rule]", "2.504`*^6"}], ",", 
   RowBox[{"1623542400000", "\[Rule]", "2.472`*^6"}], ",", 
   RowBox[{"1623628800000", "\[Rule]", "2.476`*^6"}], ",", 
   RowBox[{"1623715200000", "\[Rule]", "2.489`*^6"}], ",", 
   RowBox[{"1623801600000", "\[Rule]", "2.479`*^6"}], ",", 
   RowBox[{"1623888000000", "\[Rule]", "2.484`*^6"}], ",", 
   RowBox[{"1623974400000", "\[Rule]", "2.478`*^6"}], ",", 
   RowBox[{"1624060800000", "\[Rule]", "2.472`*^6"}], ",", 
   RowBox[{"1624147200000", "\[Rule]", "2.474`*^6"}], ",", 
   RowBox[{"1624233600000", "\[Rule]", "2.481`*^6"}], ",", 
   RowBox[{"1624320000000", "\[Rule]", "2.491`*^6"}], ",", 
   RowBox[{"1624406400000", "\[Rule]", "2.5`*^6"}], ",", 
   RowBox[{"1624492800000", "\[Rule]", "2.502`*^6"}], ",", 
   RowBox[{"1624579200000", "\[Rule]", "2.49999999`*^6"}], ",", 
   RowBox[{"1624665600000", "\[Rule]", "2.51`*^6"}], ",", 
   RowBox[{"1624752000000", "\[Rule]", "2.56`*^6"}], ",", 
   RowBox[{"1624838400000", "\[Rule]", "2.548`*^6"}], ",", 
   RowBox[{"1624924800000", "\[Rule]", "2.552`*^6"}], ",", 
   RowBox[{"1625011200000", "\[Rule]", "2.566`*^6"}], ",", 
   RowBox[{"1625097600000", "\[Rule]", "2.57`*^6"}], ",", 
   RowBox[{"1625184000000", "\[Rule]", "2.564`*^6"}], ",", 
   RowBox[{"1625270400000", "\[Rule]", "2.559`*^6"}], ",", 
   RowBox[{"1625356800000", "\[Rule]", "2.602`*^6"}], ",", 
   RowBox[{"1625443200000", "\[Rule]", "2.621`*^6"}], ",", 
   RowBox[{"1625529600000", "\[Rule]", "2.613`*^6"}], ",", 
   RowBox[{"1625616000000", "\[Rule]", "2.726`*^6"}], ",", 
   RowBox[{"1625702400000", "\[Rule]", "2.693`*^6"}], ",", 
   RowBox[{"1625788800000", "\[Rule]", "2.689`*^6"}], ",", 
   RowBox[{"1625875200000", "\[Rule]", "2.664`*^6"}], ",", 
   RowBox[{"1625961600000", "\[Rule]", "2.649`*^6"}], ",", 
   RowBox[{"1626048000000", "\[Rule]", "2.7`*^6"}], ",", 
   RowBox[{"1626134400000", "\[Rule]", "2.71`*^6"}], ",", 
   RowBox[{"1626220800000", "\[Rule]", "2.698`*^6"}], ",", 
   RowBox[{"1626307200000", "\[Rule]", "2.7`*^6"}], ",", 
   RowBox[{"1626393600000", "\[Rule]", "2.696`*^6"}], ",", 
   RowBox[{"1626480000000", "\[Rule]", "2.686`*^6"}], ",", 
   RowBox[{"1626566400000", "\[Rule]", "2.693`*^6"}], ",", 
   RowBox[{"1626652800000", "\[Rule]", "2.687`*^6"}], ",", 
   RowBox[{"1626739200000", "\[Rule]", "2.667`*^6"}], ",", 
   RowBox[{"1626825600000", "\[Rule]", "2.673`*^6"}], ",", 
   RowBox[{"1626912000000", "\[Rule]", "2.65`*^6"}], ",", 
   RowBox[{"1626998400000", "\[Rule]", "2.634`*^6"}], ",", 
   RowBox[{"1627084800000", "\[Rule]", "2.618`*^6"}], ",", 
   RowBox[{"1627171200000", "\[Rule]", "2.581`*^6"}], ",", 
   RowBox[{"1627257600000", "\[Rule]", "2.613`*^6"}], ",", 
   RowBox[{"1627344000000", "\[Rule]", "2.72`*^6"}], ",", 
   RowBox[{"1627430400000", "\[Rule]", "2.72`*^6"}], ",", 
   RowBox[{"1627516800000", "\[Rule]", "2.721`*^6"}], ",", 
   RowBox[{"1627603200000", "\[Rule]", "2.72`*^6"}], ",", 
   RowBox[{"1627689600000", "\[Rule]", "2.644`*^6"}], ",", 
   RowBox[{"1627776000000", "\[Rule]", "2.691`*^6"}], ",", 
   RowBox[{"1627862400000", "\[Rule]", "2.696`*^6"}], ",", 
   RowBox[{"1627948800000", "\[Rule]", "2.71`*^6"}], ",", 
   RowBox[{"1628035200000", "\[Rule]", "2.688`*^6"}], ",", 
   RowBox[{"1628121600000", "\[Rule]", "2.681`*^6"}], ",", 
   RowBox[{"1628208000000", "\[Rule]", "2.665`*^6"}], ",", 
   RowBox[{"1628294400000", "\[Rule]", "2.633`*^6"}], ",", 
   RowBox[{"1628380800000", "\[Rule]", "2.626`*^6"}], ",", 
   RowBox[{"1628467200000", "\[Rule]", "2.636`*^6"}], ",", 
   RowBox[{"1628553600000", "\[Rule]", "2.631`*^6"}], ",", 
   RowBox[{"1628640000000", "\[Rule]", "2.616`*^6"}], ",", 
   RowBox[{"1628726400000", "\[Rule]", "2.616`*^6"}], ",", 
   RowBox[{"1628812800000", "\[Rule]", "2.599`*^6"}], ",", 
   RowBox[{"1628899200000", "\[Rule]", "2.589`*^6"}], ",", 
   RowBox[{"1628985600000", "\[Rule]", "2.561`*^6"}], ",", 
   RowBox[{"1629072000000", "\[Rule]", "2.591`*^6"}], ",", 
   RowBox[{"1629158400000", "\[Rule]", "2.575`*^6"}], ",", 
   RowBox[{"1629244800000", "\[Rule]", "2.565`*^6"}], ",", 
   RowBox[{"1629331200000", "\[Rule]", "2.551`*^6"}], ",", 
   RowBox[{"1629417600000", "\[Rule]", "2.556`*^6"}], ",", 
   RowBox[{"1629504000000", "\[Rule]", "2.559`*^6"}], ",", 
   RowBox[{"1629590400000", "\[Rule]", "2.58`*^6"}], ",", 
   RowBox[{"1629676800000", "\[Rule]", "2.592`*^6"}], ",", 
   RowBox[{"1629763200000", "\[Rule]", "2.563`*^6"}], ",", 
   RowBox[{"1629849600000", "\[Rule]", "2.587`*^6"}], ",", 
   RowBox[{"1629936000000", "\[Rule]", "2.59`*^6"}], ",", 
   RowBox[{"1630022400000", "\[Rule]", "2.586`*^6"}], ",", 
   RowBox[{"1630108800000", "\[Rule]", "2.58`*^6"}], ",", 
   RowBox[{"1630195200000", "\[Rule]", "2.579`*^6"}], ",", 
   RowBox[{"1630281600000", "\[Rule]", "2.579`*^6"}], ",", 
   RowBox[{"1630368000000", "\[Rule]", "2.587`*^6"}], ",", 
   RowBox[{"1630454400000", "\[Rule]", "2.588`*^6"}], ",", 
   RowBox[{"1630540800000", "\[Rule]", "2.591`*^6"}], ",", 
   RowBox[{"1630627200000", "\[Rule]", "2.585`*^6"}], ",", 
   RowBox[{"1630713600000", "\[Rule]", "2.59`*^6"}], ",", 
   RowBox[{"1630800000000", "\[Rule]", "2.592`*^6"}], ",", 
   RowBox[{"1630886400000", "\[Rule]", "2.598`*^6"}], ",", 
   RowBox[{"1630972800000", "\[Rule]", "2.615`*^6"}], ",", 
   RowBox[{"1631059200000", "\[Rule]", "2.621`*^6"}], ",", 
   RowBox[{"1631145600000", "\[Rule]", "2.633`*^6"}], ",", 
   RowBox[{"1631232000000", "\[Rule]", "2.641`*^6"}], ",", 
   RowBox[{"1631318400000", "\[Rule]", "2.637`*^6"}], ",", 
   RowBox[{"1631404800000", "\[Rule]", "2.634`*^6"}], ",", 
   RowBox[{"1631491200000", "\[Rule]", "2.643`*^6"}], ",", 
   RowBox[{"1631577600000", "\[Rule]", "2.654`*^6"}], ",", 
   RowBox[{"1631664000000", "\[Rule]", "2.656`*^6"}], ",", 
   RowBox[{"1631750400000", "\[Rule]", "2.662`*^6"}], ",", 
   RowBox[{"1631836800000", "\[Rule]", "2.698`*^6"}], ",", 
   RowBox[{"1631923200000", "\[Rule]", "2.694`*^6"}], ",", 
   RowBox[{"1632009600000", "\[Rule]", "2.7`*^6"}], ",", 
   RowBox[{"1632096000000", "\[Rule]", "2.71`*^6"}], ",", 
   RowBox[{"1632182400000", "\[Rule]", "2.746`*^6"}], ",", 
   RowBox[{"1632268800000", "\[Rule]", "2.743`*^6"}], ",", 
   RowBox[{"1632355200000", "\[Rule]", "2.729`*^6"}], ",", 
   RowBox[{"1632441600000", "\[Rule]", "2.731`*^6"}], ",", 
   RowBox[{"1632528000000", "\[Rule]", "2.726`*^6"}], ",", 
   RowBox[{"1632614400000", "\[Rule]", "2.737`*^6"}], ",", 
   RowBox[{"1632700800000", "\[Rule]", "2.757`*^6"}], ",", 
   RowBox[{"1632787200000", "\[Rule]", "2.771`*^6"}], ",", 
   RowBox[{"1632873600000", "\[Rule]", "2.791`*^6"}], ",", 
   RowBox[{"1632960000000", "\[Rule]", "2.794`*^6"}], ",", 
   RowBox[{"1633046400000", "\[Rule]", "2.802`*^6"}], ",", 
   RowBox[{"1633132800000", "\[Rule]", "2.778`*^6"}], ",", 
   RowBox[{"1633219200000", "\[Rule]", "2.79`*^6"}], ",", 
   RowBox[{"1633305600000", "\[Rule]", "2.796`*^6"}], ",", 
   RowBox[{"1633392000000", "\[Rule]", "2.763`*^6"}], ",", 
   RowBox[{"1633478400000", "\[Rule]", "2.771`*^6"}], ",", 
   RowBox[{"1633564800000", "\[Rule]", "2.779`*^6"}], ",", 
   RowBox[{"1633651200000", "\[Rule]", "2.78`*^6"}], ",", 
   RowBox[{"1633737600000", "\[Rule]", "2.776`*^6"}], ",", 
   RowBox[{"1633824000000", "\[Rule]", "2.783`*^6"}], ",", 
   RowBox[{"1633910400000", "\[Rule]", "2.793`*^6"}], ",", 
   RowBox[{"1633996800000", "\[Rule]", "2.808`*^6"}], ",", 
   RowBox[{"1634083200000", "\[Rule]", "2.835`*^6"}], ",", 
   RowBox[{"1634169600000", "\[Rule]", "2.829`*^6"}], ",", 
   RowBox[{"1634256000000", "\[Rule]", "2.83`*^6"}], ",", 
   RowBox[{"1634342400000", "\[Rule]", "2.83`*^6"}], ",", 
   RowBox[{"1634428800000", "\[Rule]", "2.832`*^6"}], ",", 
   RowBox[{"1634515200000", "\[Rule]", "2.832`*^6"}], ",", 
   RowBox[{"1634601600000", "\[Rule]", "2.846`*^6"}], ",", 
   RowBox[{"1634688000000", "\[Rule]", "2.891`*^6"}], ",", 
   RowBox[{"1634774400000", "\[Rule]", "2.945`*^6"}], ",", 
   RowBox[{"1634860800000", "\[Rule]", "2.93`*^6"}], ",", 
   RowBox[{"1634947200000", "\[Rule]", "2.952`*^6"}], ",", 
   RowBox[{"1635033600000", "\[Rule]", "2.955`*^6"}], ",", 
   RowBox[{"1635120000000", "\[Rule]", "2.94`*^6"}], ",", 
   RowBox[{"1635206400000", "\[Rule]", "2.943`*^6"}], ",", 
   RowBox[{"1635292800000", "\[Rule]", "2.938`*^6"}], ",", 
   RowBox[{"1635379200000", "\[Rule]", "2.942`*^6"}], ",", 
   RowBox[{"1635465600000", "\[Rule]", "2.924`*^6"}], ",", 
   RowBox[{"1635552000000", "\[Rule]", "2.855`*^6"}], ",", 
   RowBox[{"1635638400000", "\[Rule]", "2.845`*^6"}], ",", 
   RowBox[{"1635724800000", "\[Rule]", "2.84`*^6"}], ",", 
   RowBox[{"1635811200000", "\[Rule]", "2.841`*^6"}], ",", 
   RowBox[{"1635897600000", "\[Rule]", "2.882`*^6"}], ",", 
   RowBox[{"1635984000000", "\[Rule]", "2.91`*^6"}], ",", 
   RowBox[{"1636070400000", "\[Rule]", "2.871`*^6"}], ",", 
   RowBox[{"1636156800000", "\[Rule]", "2.9`*^6"}], ",", 
   RowBox[{"1636243200000", "\[Rule]", "2.906`*^6"}], ",", 
   RowBox[{"1636329600000", "\[Rule]", "2.907`*^6"}], ",", 
   RowBox[{"1636416000000", "\[Rule]", "2.98`*^6"}], ",", 
   RowBox[{"1636502400000", "\[Rule]", "2.953`*^6"}], ",", 
   RowBox[{"1636588800000", "\[Rule]", "2.951`*^6"}], ",", 
   RowBox[{"1636675200000", "\[Rule]", "2.932`*^6"}], ",", 
   RowBox[{"1636761600000", "\[Rule]", "2.929`*^6"}], ",", 
   RowBox[{"1636848000000", "\[Rule]", "2.914`*^6"}], ",", 
   RowBox[{"1636934400000", "\[Rule]", "2.926`*^6"}], ",", 
   RowBox[{"1637020800000", "\[Rule]", "2.908`*^6"}], ",", 
   RowBox[{"1637107200000", "\[Rule]", "2.895`*^6"}], ",", 
   RowBox[{"1637193600000", "\[Rule]", "2.891`*^6"}], ",", 
   RowBox[{"1637280000000", "\[Rule]", "2.857`*^6"}], ",", 
   RowBox[{"1637366400000", "\[Rule]", "2.848`*^6"}], ",", 
   RowBox[{"1637452800000", "\[Rule]", "2.851`*^6"}], ",", 
   RowBox[{"1637539200000", "\[Rule]", "2.857`*^6"}], ",", 
   RowBox[{"1637625600000", "\[Rule]", "2.856`*^6"}], ",", 
   RowBox[{"1637712000000", "\[Rule]", "2.857`*^6"}], ",", 
   RowBox[{"1637798400000", "\[Rule]", "2.802`*^6"}], ",", 
   RowBox[{"1637884800000", "\[Rule]", "2.755`*^6"}], ",", 
   RowBox[{"1637971200000", "\[Rule]", "2.781`*^6"}], ",", 
   RowBox[{"1638057600000", "\[Rule]", "2.801`*^6"}], ",", 
   RowBox[{"1638144000000", "\[Rule]", "2.794`*^6"}], ",", 
   RowBox[{"1638230400000", "\[Rule]", "2.786`*^6"}], ",", 
   RowBox[{"1638316800000", "\[Rule]", "2.778`*^6"}], ",", 
   RowBox[{"1638403200000", "\[Rule]", "2.784`*^6"}], ",", 
   RowBox[{"1638489600000", "\[Rule]", "2.802`*^6"}], ",", 
   RowBox[{"1638576000000", "\[Rule]", "2.78`*^6"}], ",", 
   RowBox[{"1638662400000", "\[Rule]", "2.781`*^6"}], ",", 
   RowBox[{"1638748800000", "\[Rule]", "2.792`*^6"}], ",", 
   RowBox[{"1638835200000", "\[Rule]", "2.767`*^6"}], ",", 
   RowBox[{"1638921600000", "\[Rule]", "2.785`*^6"}], ",", 
   RowBox[{"1639008000000", "\[Rule]", "2.767`*^6"}], ",", 
   RowBox[{"1639094400000", "\[Rule]", "2.768`*^6"}], ",", 
   RowBox[{"1639180800000", "\[Rule]", "2.764`*^6"}], ",", 
   RowBox[{"1639267200000", "\[Rule]", "2.78`*^6"}], ",", 
   RowBox[{"1639353600000", "\[Rule]", "2.767`*^6"}], ",", 
   RowBox[{"1639440000000", "\[Rule]", "2.76`*^6"}], ",", 
   RowBox[{"1639526400000", "\[Rule]", "2.759`*^6"}], ",", 
   RowBox[{"1639612800000", "\[Rule]", "2.766`*^6"}], ",", 
   RowBox[{"1639699200000", "\[Rule]", "2.76`*^6"}], ",", 
   RowBox[{"1639785600000", "\[Rule]", "2.752`*^6"}], ",", 
   RowBox[{"1639872000000", "\[Rule]", "2.751`*^6"}], ",", 
   RowBox[{"1639958400000", "\[Rule]", "2.775`*^6"}], ",", 
   RowBox[{"1640044800000", "\[Rule]", "2.768`*^6"}], ",", 
   RowBox[{"1640131200000", "\[Rule]", "2.929`*^6"}], ",", 
   RowBox[{"1640217600000", "\[Rule]", "2.913`*^6"}], ",", 
   RowBox[{"1640304000000", "\[Rule]", "2.809`*^6"}], ",", 
   RowBox[{"1640390400000", "\[Rule]", "2.786`*^6"}], ",", 
   RowBox[{"1640476800000", "\[Rule]", "2.763`*^6"}], ",", 
   RowBox[{"1640563200000", "\[Rule]", "2.775`*^6"}], ",", 
   RowBox[{"1640649600000", "\[Rule]", "2.777`*^6"}], ",", 
   RowBox[{"1640736000000", "\[Rule]", "2.767`*^6"}], ",", 
   RowBox[{"1640822400000", "\[Rule]", "2.765`*^6"}], ",", 
   RowBox[{"1640908800000", "\[Rule]", "2.758`*^6"}], ",", 
   RowBox[{"1640995200000", "\[Rule]", "2.752`*^6"}], ",", 
   RowBox[{"1641081600000", "\[Rule]", "2.746`*^6"}], ",", 
   RowBox[{"1641168000000", "\[Rule]", "2.781`*^6"}], ",", 
   RowBox[{"1641254400000", "\[Rule]", "2.776`*^6"}], ",", 
   RowBox[{"1641340800000", "\[Rule]", "2.756`*^6"}], ",", 
   RowBox[{"1641427200000", "\[Rule]", "2.754`*^6"}], ",", 
   RowBox[{"1641513600000", "\[Rule]", "2.759`*^6"}], ",", 
   RowBox[{"1641600000000", "\[Rule]", "2.735`*^6"}], ",", 
   RowBox[{"1641686400000", "\[Rule]", "2.739`*^6"}], ",", 
   RowBox[{"1641772800000", "\[Rule]", "2.748`*^6"}], ",", 
   RowBox[{"1641859200000", "\[Rule]", "2.739`*^6"}], ",", 
   RowBox[{"1641945600000", "\[Rule]", "2.736`*^6"}], ",", 
   RowBox[{"1642032000000", "\[Rule]", "2.742`*^6"}], ",", 
   RowBox[{"1642118400000", "\[Rule]", "2.752`*^6"}], ",", 
   RowBox[{"1642204800000", "\[Rule]", "2.746`*^6"}], ",", 
   RowBox[{"1642291200000", "\[Rule]", "2.75`*^6"}], ",", 
   RowBox[{"1642377600000", "\[Rule]", "2.747`*^6"}], ",", 
   RowBox[{"1642464000000", "\[Rule]", "2.751`*^6"}], ",", 
   RowBox[{"1642550400000", "\[Rule]", "2.754`*^6"}], ",", 
   RowBox[{"1642636800000", "\[Rule]", "2.75`*^6"}], ",", 
   RowBox[{"1642723200000", "\[Rule]", "2.749`*^6"}], ",", 
   RowBox[{"1642809600000", "\[Rule]", "2.75`*^6"}], ",", 
   RowBox[{"1642896000000", "\[Rule]", "2.75`*^6"}], ",", 
   RowBox[{"1642982400000", "\[Rule]", "2.747`*^6"}], ",", 
   RowBox[{"1643068800000", "\[Rule]", "2.755`*^6"}], ",", 
   RowBox[{"1643155200000", "\[Rule]", "2.755`*^6"}], ",", 
   RowBox[{"1643241600000", "\[Rule]", "2.749`*^6"}], ",", 
   RowBox[{"1643328000000", "\[Rule]", "2.743`*^6"}], ",", 
   RowBox[{"1643414400000", "\[Rule]", "2.817`*^6"}], ",", 
   RowBox[{"1643500800000", "\[Rule]", "2.785`*^6"}], ",", 
   RowBox[{"1643587200000", "\[Rule]", "2.8`*^6"}], ",", 
   RowBox[{"1643673600000", "\[Rule]", "2.786`*^6"}], ",", 
   RowBox[{"1643760000000", "\[Rule]", "2.785`*^6"}], ",", 
   RowBox[{"1643846400000", "\[Rule]", "2.768`*^6"}], ",", 
   RowBox[{"1643932800000", "\[Rule]", "2.763`*^6"}], ",", 
   RowBox[{"1644019200000", "\[Rule]", "2.758`*^6"}], ",", 
   RowBox[{"1644105600000", "\[Rule]", "2.753`*^6"}], ",", 
   RowBox[{"1644192000000", "\[Rule]", "2.776`*^6"}], ",", 
   RowBox[{"1644278400000", "\[Rule]", "2.759`*^6"}], ",", 
   RowBox[{"1644364800000", "\[Rule]", "2.762`*^6"}], ",", 
   RowBox[{"1644451200000", "\[Rule]", "2.771`*^6"}], ",", 
   RowBox[{"1644537600000", "\[Rule]", "2.766`*^6"}], ",", 
   RowBox[{"1644624000000", "\[Rule]", "2.78`*^6"}], ",", 
   RowBox[{"1644710400000", "\[Rule]", "2.785`*^6"}], ",", 
   RowBox[{"1644796800000", "\[Rule]", "2.784`*^6"}], ",", 
   RowBox[{"1644883200000", "\[Rule]", "2.795`*^6"}], ",", 
   RowBox[{"1644969600000", "\[Rule]", "2.797`*^6"}], ",", 
   RowBox[{"1645056000000", "\[Rule]", "2.796`*^6"}], ",", 
   RowBox[{"1645142400000", "\[Rule]", "2.805`*^6"}], ",", 
   RowBox[{"1645228800000", "\[Rule]", "2.816`*^6"}], ",", 
   RowBox[{"1645315200000", "\[Rule]", "2.816`*^6"}], ",", 
   RowBox[{"1645401600000", "\[Rule]", "2.808`*^6"}], ",", 
   RowBox[{"1645488000000", "\[Rule]", "2.804`*^6"}], ",", 
   RowBox[{"1645574400000", "\[Rule]", "2.81`*^6"}], ",", 
   RowBox[{"1645660800000", "\[Rule]", "2.796`*^6"}], ",", 
   RowBox[{"1645747200000", "\[Rule]", "2.786`*^6"}], ",", 
   RowBox[{"1645833600000", "\[Rule]", "2.92`*^6"}], ",", 
   RowBox[{"1645920000000", "\[Rule]", "2.982`*^6"}], ",", 
   RowBox[{"1646006400000", "\[Rule]", "2.98`*^6"}], ",", 
   RowBox[{"1646092800000", "\[Rule]", "2.867`*^6"}], ",", 
   RowBox[{"1646179200000", "\[Rule]", "2.802`*^6"}], ",", 
   RowBox[{"1646265600000", "\[Rule]", "2.802`*^6"}], ",", 
   RowBox[{"1646352000000", "\[Rule]", "2.999`*^6"}], ",", 
   RowBox[{"1646438400000", "\[Rule]", "3.064`*^6"}], ",", 
   RowBox[{"1646524800000", "\[Rule]", "3.01`*^6"}], ",", 
   RowBox[{"1646611200000", "\[Rule]", "2.902`*^6"}], ",", 
   RowBox[{"1646697600000", "\[Rule]", "2.946`*^6"}], ",", 
   RowBox[{"1646784000000", "\[Rule]", "2.928`*^6"}], ",", 
   RowBox[{"1646870400000", "\[Rule]", "2.898`*^6"}], ",", 
   RowBox[{"1646956800000", "\[Rule]", "2.894`*^6"}], ",", 
   RowBox[{"1647043200000", "\[Rule]", "2.87`*^6"}], ",", 
   RowBox[{"1647129600000", "\[Rule]", "2.905`*^6"}], ",", 
   RowBox[{"1647216000000", "\[Rule]", "2.907`*^6"}], ",", 
   RowBox[{"1647302400000", "\[Rule]", "2.927`*^6"}], ",", 
   RowBox[{"1647388800000", "\[Rule]", "2.972`*^6"}], ",", 
   RowBox[{"1647475200000", "\[Rule]", "2.991`*^6"}], ",", 
   RowBox[{"1647561600000", "\[Rule]", "2.99`*^6"}], ",", 
   RowBox[{"1647648000000", "\[Rule]", "2.966`*^6"}], ",", 
   RowBox[{"1647734400000", "\[Rule]", "2.98`*^6"}], ",", 
   RowBox[{"1647820800000", "\[Rule]", "2.999`*^6"}], ",", 
   RowBox[{"1647907200000", "\[Rule]", "3.095`*^6"}], ",", 
   RowBox[{"1647993600000", "\[Rule]", "3.008`*^6"}], ",", 
   RowBox[{"1648080000000", "\[Rule]", "3.007`*^6"}], ",", 
   RowBox[{"1648166400000", "\[Rule]", "3.006`*^6"}], ",", 
   RowBox[{"1648252800000", "\[Rule]", "3.012`*^6"}], ",", 
   RowBox[{"1648339200000", "\[Rule]", "3.008`*^6"}], ",", 
   RowBox[{"1648425600000", "\[Rule]", "3.005`*^6"}], ",", 
   RowBox[{"1648512000000", "\[Rule]", "3.005`*^6"}], ",", 
   RowBox[{"1648598400000", "\[Rule]", "2.995`*^6"}], ",", 
   RowBox[{"1648684800000", "\[Rule]", "2.977`*^6"}], ",", 
   RowBox[{"1648771200000", "\[Rule]", "2.931`*^6"}], ",", 
   RowBox[{"1648857600000", "\[Rule]", "2.91`*^6"}], ",", 
   RowBox[{"1648944000000", "\[Rule]", "2.911`*^6"}], ",", 
   RowBox[{"1649030400000", "\[Rule]", "2.906`*^6"}], ",", 
   RowBox[{"1649116800000", "\[Rule]", "2.918`*^6"}], ",", 
   RowBox[{"1649203200000", "\[Rule]", "2.907`*^6"}], ",", 
   RowBox[{"1649289600000", "\[Rule]", "2.956`*^6"}], ",", 
   RowBox[{"1649376000000", "\[Rule]", "2.903`*^6"}], ",", 
   RowBox[{"1649462400000", "\[Rule]", "2.901`*^6"}], ",", 
   RowBox[{"1649548800000", "\[Rule]", "2.904`*^6"}], ",", 
   RowBox[{"1649635200000", "\[Rule]", "2.911`*^6"}], ",", 
   RowBox[{"1649721600000", "\[Rule]", "2.889`*^6"}], ",", 
   RowBox[{"1649808000000", "\[Rule]", "2.9`*^6"}], ",", 
   RowBox[{"1649894400000", "\[Rule]", "2.902`*^6"}], ",", 
   RowBox[{"1649980800000", "\[Rule]", "2.894`*^6"}], ",", 
   RowBox[{"1650067200000", "\[Rule]", "2.9`*^6"}], ",", 
   RowBox[{"1650153600000", "\[Rule]", "2.9`*^6"}], ",", 
   RowBox[{"1650240000000", "\[Rule]", "2.897`*^6"}], ",", 
   RowBox[{"1650326400000", "\[Rule]", "2.892`*^6"}], ",", 
   RowBox[{"1650412800000", "\[Rule]", "2.904`*^6"}], ",", 
   RowBox[{"1650499200000", "\[Rule]", "2.95`*^6"}], ",", 
   RowBox[{"1650585600000", "\[Rule]", "3.447`*^6"}], ",", 
   RowBox[{"1650672000000", "\[Rule]", "3.545`*^6"}], ",", 
   RowBox[{"1650758400000", "\[Rule]", "3.37`*^6"}], ",", 
   RowBox[{"1650844800000", "\[Rule]", "3.4`*^6"}], ",", 
   RowBox[{"1650931200000", "\[Rule]", "3.3`*^6"}], ",", 
   RowBox[{"1651017600000", "\[Rule]", "3.182`*^6"}], ",", 
   RowBox[{"1651104000000", "\[Rule]", "3.1`*^6"}], ",", 
   RowBox[{"1651190400000", "\[Rule]", "3.085`*^6"}], ",", 
   RowBox[{"1651276800000", "\[Rule]", "3.09`*^6"}], ",", 
   RowBox[{"1651363200000", "\[Rule]", "3.087`*^6"}], ",", 
   RowBox[{"1651449600000", "\[Rule]", "3.101`*^6"}], ",", 
   RowBox[{"1651536000000", "\[Rule]", "3.225`*^6"}], ",", 
   RowBox[{"1651622400000", "\[Rule]", "3.206`*^6"}], ",", 
   RowBox[{"1651708800000", "\[Rule]", "3.215`*^6"}], ",", 
   RowBox[{"1651795200000", "\[Rule]", "3.216`*^6"}], ",", 
   RowBox[{"1651881600000", "\[Rule]", "3.26`*^6"}], ",", 
   RowBox[{"1651968000000", "\[Rule]", "3.398`*^6"}], ",", 
   RowBox[{"1652054400000", "\[Rule]", "3.321`*^6"}], ",", 
   RowBox[{"1652140800000", "\[Rule]", "3.336`*^6"}], ",", 
   RowBox[{"1652227200000", "\[Rule]", "3.326`*^6"}], ",", 
   RowBox[{"1652313600000", "\[Rule]", "3.366`*^6"}], ",", 
   RowBox[{"1652400000000", "\[Rule]", "3.45`*^6"}], ",", 
   RowBox[{"1652486400000", "\[Rule]", "3.402`*^6"}], ",", 
   RowBox[{"1652572800000", "\[Rule]", "3.449`*^6"}], ",", 
   RowBox[{"1652659200000", "\[Rule]", "3.425`*^6"}], ",", 
   RowBox[{"1652745600000", "\[Rule]", "3.513`*^6"}], ",", 
   RowBox[{"1652832000000", "\[Rule]", "3.552`*^6"}], ",", 
   RowBox[{"1652918400000", "\[Rule]", "3.577`*^6"}], ",", 
   RowBox[{"1653004800000", "\[Rule]", "3.596`*^6"}], ",", 
   RowBox[{"1653091200000", "\[Rule]", "3.569`*^6"}], ",", 
   RowBox[{"1653177600000", "\[Rule]", "3.684`*^6"}], ",", 
   RowBox[{"1653264000000", "\[Rule]", "3.63`*^6"}], ",", 
   RowBox[{"1653350400000", "\[Rule]", "3.797`*^6"}], ",", 
   RowBox[{"1653436800000", "\[Rule]", "3.632`*^6"}], ",", 
   RowBox[{"1653523200000", "\[Rule]", "3.642`*^6"}], ",", 
   RowBox[{"1653609600000", "\[Rule]", "3.644`*^6"}], ",", 
   RowBox[{"1653696000000", "\[Rule]", "3.562`*^6"}], ",", 
   RowBox[{"1653782400000", "\[Rule]", "3.531`*^6"}], ",", 
   RowBox[{"1653868800000", "\[Rule]", "3.572`*^6"}], ",", 
   RowBox[{"1653955200000", "\[Rule]", "3.525`*^6"}], ",", 
   RowBox[{"1654041600000", "\[Rule]", "3.515`*^6"}], ",", 
   RowBox[{"1654128000000", "\[Rule]", "3.474`*^6"}], ",", 
   RowBox[{"1654214400000", "\[Rule]", "3.47`*^6"}], ",", 
   RowBox[{"1654300800000", "\[Rule]", "3.462`*^6"}], ",", 
   RowBox[{"1654387200000", "\[Rule]", "3.461`*^6"}], ",", 
   RowBox[{"1654473600000", "\[Rule]", "3.475`*^6"}], ",", 
   RowBox[{"1654560000000", "\[Rule]", "3.799`*^6"}], ",", 
   RowBox[{"1654646400000", "\[Rule]", "3.864`*^6"}], ",", 
   RowBox[{"1654732800000", "\[Rule]", "3.802`*^6"}], ",", 
   RowBox[{"1654819200000", "\[Rule]", "3.812`*^6"}], ",", 
   RowBox[{"1654905600000", "\[Rule]", "3.845`*^6"}], ",", 
   RowBox[{"1654992000000", "\[Rule]", "3.89`*^6"}], ",", 
   RowBox[{"1655078400000", "\[Rule]", "3.93`*^6"}], ",", 
   RowBox[{"1655164800000", "\[Rule]", "3.786`*^6"}], ",", 
   RowBox[{"1655251200000", "\[Rule]", "3.645`*^6"}], ",", 
   RowBox[{"1655337600000", "\[Rule]", "3.652`*^6"}], ",", 
   RowBox[{"1655424000000", "\[Rule]", "3.615`*^6"}], ",", 
   RowBox[{"1655510400000", "\[Rule]", "3.653`*^6"}], ",", 
   RowBox[{"1655596800000", "\[Rule]", "3.616`*^6"}], ",", 
   RowBox[{"1655683200000", "\[Rule]", "3.694`*^6"}], ",", 
   RowBox[{"1655769600000", "\[Rule]", "3.692`*^6"}], ",", 
   RowBox[{"1655856000000", "\[Rule]", "3.666`*^6"}], ",", 
   RowBox[{"1655942400000", "\[Rule]", "3.722`*^6"}], ",", 
   RowBox[{"1656028800000", "\[Rule]", "3.7`*^6"}], ",", 
   RowBox[{"1656115200000", "\[Rule]", "3.686`*^6"}], ",", 
   RowBox[{"1656201600000", "\[Rule]", "3.659`*^6"}], ",", 
   RowBox[{"1656288000000", "\[Rule]", "3.645`*^6"}], ",", 
   RowBox[{"1656374400000", "\[Rule]", "3.677`*^6"}], ",", 
   RowBox[{"1656460800000", "\[Rule]", "3.665`*^6"}], ",", 
   RowBox[{"1656547200000", "\[Rule]", "3.649`*^6"}], ",", 
   RowBox[{"1656633600000", "\[Rule]", "3.634`*^6"}], ",", 
   RowBox[{"1656720000000", "\[Rule]", "3.648`*^6"}], ",", 
   RowBox[{"1656806400000", "\[Rule]", "3.655`*^6"}], ",", 
   RowBox[{"1656892800000", "\[Rule]", "3.665`*^6"}], ",", 
   RowBox[{"1656979200000", "\[Rule]", "3.721`*^6"}], ",", 
   RowBox[{"1657065600000", "\[Rule]", "3.688`*^6"}], ",", 
   RowBox[{"1657152000000", "\[Rule]", "3.705`*^6"}], ",", 
   RowBox[{"1657238400000", "\[Rule]", "3.681`*^6"}], ",", 
   RowBox[{"1657324800000", "\[Rule]", "3.689`*^6"}], ",", 
   RowBox[{"1657411200000", "\[Rule]", "3.7`*^6"}], ",", 
   RowBox[{"1657497600000", "\[Rule]", "3.75`*^6"}], ",", 
   RowBox[{"1657584000000", "\[Rule]", "3.92`*^6"}], ",", 
   RowBox[{"1657670400000", "\[Rule]", "3.778`*^6"}], ",", 
   RowBox[{"1657756800000", "\[Rule]", "3.78`*^6"}], ",", 
   RowBox[{"1657843200000", "\[Rule]", "3.78`*^6"}], ",", 
   RowBox[{"1657929600000", "\[Rule]", "3.766`*^6"}], ",", 
   RowBox[{"1658016000000", "\[Rule]", "3.801`*^6"}], ",", 
   RowBox[{"1658102400000", "\[Rule]", "3.816`*^6"}], ",", 
   RowBox[{"1658188800000", "\[Rule]", "3.8`*^6"}], ",", 
   RowBox[{"1658275200000", "\[Rule]", "3.81`*^6"}], ",", 
   RowBox[{"1658361600000", "\[Rule]", "3.808`*^6"}], ",", 
   RowBox[{"1658448000000", "\[Rule]", "3.833`*^6"}], ",", 
   RowBox[{"1658534400000", "\[Rule]", "3.821`*^6"}], ",", 
   RowBox[{"1658620800000", "\[Rule]", "3.855`*^6"}], ",", 
   RowBox[{"1658707200000", "\[Rule]", "3.877`*^6"}], ",", 
   RowBox[{"1658793600000", "\[Rule]", "3.952`*^6"}], ",", 
   RowBox[{"1658880000000", "\[Rule]", "3.929`*^6"}], ",", 
   RowBox[{"1658966400000", "\[Rule]", "3.91`*^6"}], ",", 
   RowBox[{"1659052800000", "\[Rule]", "3.911`*^6"}], ",", 
   RowBox[{"1659139200000", "\[Rule]", "3.954`*^6"}], ",", 
   RowBox[{"1659225600000", "\[Rule]", "3.95`*^6"}], ",", 
   RowBox[{"1659312000000", "\[Rule]", "3.931`*^6"}], ",", 
   RowBox[{"1659398400000", "\[Rule]", "3.961`*^6"}], ",", 
   RowBox[{"1659484800000", "\[Rule]", "4.002`*^6"}], ",", 
   RowBox[{"1659571200000", "\[Rule]", "4.087`*^6"}], ",", 
   RowBox[{"1659657600000", "\[Rule]", "4.082`*^6"}], ",", 
   RowBox[{"1659744000000", "\[Rule]", "4.069`*^6"}], ",", 
   RowBox[{"1659830400000", "\[Rule]", "4.114`*^6"}], ",", 
   RowBox[{"1659916800000", "\[Rule]", "4.116`*^6"}], ",", 
   RowBox[{"1660003200000", "\[Rule]", "4.12`*^6"}], ",", 
   RowBox[{"1660089600000", "\[Rule]", "4.131`*^6"}], ",", 
   RowBox[{"1660176000000", "\[Rule]", "4.146`*^6"}], ",", 
   RowBox[{"1660262400000", "\[Rule]", "4.134`*^6"}], ",", 
   RowBox[{"1660348800000", "\[Rule]", "4.17`*^6"}], ",", 
   RowBox[{"1660435200000", "\[Rule]", "4.162`*^6"}], ",", 
   RowBox[{"1660521600000", "\[Rule]", "4.183`*^6"}], ",", 
   RowBox[{"1660608000000", "\[Rule]", "4.212`*^6"}], ",", 
   RowBox[{"1660694400000", "\[Rule]", "4.184`*^6"}], ",", 
   RowBox[{"1660780800000", "\[Rule]", "4.207`*^6"}], ",", 
   RowBox[{"1660867200000", "\[Rule]", "4.216`*^6"}], ",", 
   RowBox[{"1660953600000", "\[Rule]", "4.5`*^6"}], ",", 
   RowBox[{"1661040000000", "\[Rule]", "4.604`*^6"}], ",", 
   RowBox[{"1661126400000", "\[Rule]", "4.507`*^6"}], ",", 
   RowBox[{"1661212800000", "\[Rule]", "4.459`*^6"}], ",", 
   RowBox[{"1661299200000", "\[Rule]", "4.447`*^6"}], ",", 
   RowBox[{"1661385600000", "\[Rule]", "4.448`*^6"}], ",", 
   RowBox[{"1661472000000", "\[Rule]", "4.461`*^6"}], ",", 
   RowBox[{"1661558400000", "\[Rule]", "4.434`*^6"}], ",", 
   RowBox[{"1661644800000", "\[Rule]", "4.433`*^6"}], ",", 
   RowBox[{"1661731200000", "\[Rule]", "4.471`*^6"}], ",", 
   RowBox[{"1661817600000", "\[Rule]", "4.439`*^6"}], ",", 
   RowBox[{"1661904000000", "\[Rule]", "4.446`*^6"}], ",", 
   RowBox[{"1661990400000", "\[Rule]", "4.433`*^6"}], ",", 
   RowBox[{"1662076800000", "\[Rule]", "4.5`*^6"}], ",", 
   RowBox[{"1662163200000", "\[Rule]", "4.446`*^6"}], ",", 
   RowBox[{"1662249600000", "\[Rule]", "4.459`*^6"}], ",", 
   RowBox[{"1662336000000", "\[Rule]", "4.45`*^6"}], ",", 
   RowBox[{"1662422400000", "\[Rule]", "4.465`*^6"}], ",", 
   RowBox[{"1662508800000", "\[Rule]", "4.464`*^6"}], ",", 
   RowBox[{"1662595200000", "\[Rule]", "4.471`*^6"}], ",", 
   RowBox[{"1662681600000", "\[Rule]", "4.463`*^6"}], ",", 
   RowBox[{"1662768000000", "\[Rule]", "4.36`*^6"}], ",", 
   RowBox[{"1662854400000", "\[Rule]", "4.373`*^6"}], ",", 
   RowBox[{"1662940800000", "\[Rule]", "4.394`*^6"}], ",", 
   RowBox[{"1663027200000", "\[Rule]", "4.407`*^6"}], ",", 
   RowBox[{"1663113600000", "\[Rule]", "4.428`*^6"}], ",", 
   RowBox[{"1663200000000", "\[Rule]", "4.443`*^6"}], ",", 
   RowBox[{"1663286400000", "\[Rule]", "4.451`*^6"}], ",", 
   RowBox[{"1663372800000", "\[Rule]", "4.469`*^6"}], ",", 
   RowBox[{"1663459200000", "\[Rule]", "4.457`*^6"}], ",", 
   RowBox[{"1663545600000", "\[Rule]", "4.485`*^6"}], ",", 
   RowBox[{"1663632000000", "\[Rule]", "4.561`*^6"}], ",", 
   RowBox[{"1663718400000", "\[Rule]", "4.5`*^6"}], ",", 
   RowBox[{"1663804800000", "\[Rule]", "4.53`*^6"}], ",", 
   RowBox[{"1663891200000", "\[Rule]", "5.44`*^6"}], ",", 
   RowBox[{"1663977600000", "\[Rule]", "5.32`*^6"}], ",", 
   RowBox[{"1664064000000", "\[Rule]", "5.275`*^6"}], ",", 
   RowBox[{"1664150400000", "\[Rule]", "5.175`*^6"}], ",", 
   RowBox[{"1664236800000", "\[Rule]", "4.622`*^6"}], ",", 
   RowBox[{"1664323200000", "\[Rule]", "4.627`*^6"}], ",", 
   RowBox[{"1664409600000", "\[Rule]", "4.604`*^6"}], ",", 
   RowBox[{"1664496000000", "\[Rule]", "4.502`*^6"}], ",", 
   RowBox[{"1664582400000", "\[Rule]", "4.42`*^6"}], ",", 
   RowBox[{"1664668800000", "\[Rule]", "4.39`*^6"}], ",", 
   RowBox[{"1664755200000", "\[Rule]", "4.405`*^6"}], ",", 
   RowBox[{"1664841600000", "\[Rule]", "4.415`*^6"}], ",", 
   RowBox[{"1664928000000", "\[Rule]", "4.422`*^6"}], ",", 
   RowBox[{"1665014400000", "\[Rule]", "4.634`*^6"}], ",", 
   RowBox[{"1665100800000", "\[Rule]", "4.524`*^6"}], ",", 
   RowBox[{"1665187200000", "\[Rule]", "4.437`*^6"}], ",", 
   RowBox[{"1665273600000", "\[Rule]", "4.446`*^6"}], ",", 
   RowBox[{"1665360000000", "\[Rule]", "4.433`*^6"}], ",", 
   RowBox[{"1665446400000", "\[Rule]", "4.471`*^6"}], ",", 
   RowBox[{"1665532800000", "\[Rule]", "4.462`*^6"}], ",", 
   RowBox[{"1665619200000", "\[Rule]", "4.5`*^6"}], ",", 
   RowBox[{"1665705600000", "\[Rule]", "4.485`*^6"}], ",", 
   RowBox[{"1665792000000", "\[Rule]", "4.464`*^6"}], ",", 
   RowBox[{"1665878400000", "\[Rule]", "4.499`*^6"}], ",", 
   RowBox[{"1665964800000", "\[Rule]", "4.521`*^6"}], ",", 
   RowBox[{"1666051200000", "\[Rule]", "4.509`*^6"}], ",", 
   RowBox[{"1666137600000", "\[Rule]", "4.525`*^6"}], ",", 
   RowBox[{"1666224000000", "\[Rule]", "4.663`*^6"}], ",", 
   RowBox[{"1666310400000", "\[Rule]", "4.681`*^6"}], ",", 
   RowBox[{"1666396800000", "\[Rule]", "4.661`*^6"}], ",", 
   RowBox[{"1666483200000", "\[Rule]", "4.732`*^6"}], ",", 
   RowBox[{"1666569600000", "\[Rule]", "4.851`*^6"}], ",", 
   RowBox[{"1666656000000", "\[Rule]", "4.92`*^6"}], ",", 
   RowBox[{"1666742400000", "\[Rule]", "4.873`*^6"}], ",", 
   RowBox[{"1666828800000", "\[Rule]", "4.877`*^6"}], ",", 
   RowBox[{"1666915200000", "\[Rule]", "4.841`*^6"}], ",", 
   RowBox[{"1667001600000", "\[Rule]", "4.7`*^6"}], ",", 
   RowBox[{"1667088000000", "\[Rule]", "4.715`*^6"}], ",", 
   RowBox[{"1667174400000", "\[Rule]", "4.853`*^6"}], ",", 
   RowBox[{"1667260800000", "\[Rule]", "4.9`*^6"}], ",", 
   RowBox[{"1667347200000", "\[Rule]", "4.805`*^6"}], ",", 
   RowBox[{"1667433600000", "\[Rule]", "4.812`*^6"}], ",", 
   RowBox[{"1667520000000", "\[Rule]", "4.782`*^6"}], ",", 
   RowBox[{"1667606400000", "\[Rule]", "4.788`*^6"}], ",", 
   RowBox[{"1667692800000", "\[Rule]", "4.857`*^6"}], ",", 
   RowBox[{"1667779200000", "\[Rule]", "4.851`*^6"}], ",", 
   RowBox[{"1667865600000", "\[Rule]", "4.812`*^6"}], ",", 
   RowBox[{"1667952000000", "\[Rule]", "4.814`*^6"}], ",", 
   RowBox[{"1668038400000", "\[Rule]", "4.78`*^6"}], ",", 
   RowBox[{"1668124800000", "\[Rule]", "4.755`*^6"}], ",", 
   RowBox[{"1668211200000", "\[Rule]", "4.771`*^6"}], ",", 
   RowBox[{"1668297600000", "\[Rule]", "4.802`*^6"}], ",", 
   RowBox[{"1668384000000", "\[Rule]", "4.784`*^6"}], ",", 
   RowBox[{"1668470400000", "\[Rule]", "4.903`*^6"}], ",", 
   RowBox[{"1668556800000", "\[Rule]", "4.9`*^6"}], ",", 
   RowBox[{"1668643200000", "\[Rule]", "4.905`*^6"}], ",", 
   RowBox[{"1668729600000", "\[Rule]", "4.88`*^6"}], ",", 
   RowBox[{"1668816000000", "\[Rule]", "4.853`*^6"}], ",", 
   RowBox[{"1668902400000", "\[Rule]", "4.881`*^6"}], ",", 
   RowBox[{"1668988800000", "\[Rule]", "4.959`*^6"}], ",", 
   RowBox[{"1669075200000", "\[Rule]", "4.965`*^6"}], ",", 
   RowBox[{"1669161600000", "\[Rule]", "4.907`*^6"}], ",", 
   RowBox[{"1669248000000", "\[Rule]", "4.91`*^6"}], ",", 
   RowBox[{"1669334400000", "\[Rule]", "4.901`*^6"}], ",", 
   RowBox[{"1669420800000", "\[Rule]", "4.894`*^6"}], ",", 
   RowBox[{"1669507200000", "\[Rule]", "4.955`*^6"}], ",", 
   RowBox[{"1669593600000", "\[Rule]", "4.9`*^6"}], ",", 
   RowBox[{"1669680000000", "\[Rule]", "4.805`*^6"}], ",", 
   RowBox[{"1669766400000", "\[Rule]", "4.81`*^6"}], ",", 
   RowBox[{"1669852800000", "\[Rule]", "4.814`*^6"}], ",", 
   RowBox[{"1669939200000", "\[Rule]", "4.79`*^6"}], ",", 
   RowBox[{"1670025600000", "\[Rule]", "4.797`*^6"}], ",", 
   RowBox[{"1670112000000", "\[Rule]", "4.796`*^6"}], ",", 
   RowBox[{"1670198400000", "\[Rule]", "4.8`*^6"}], ",", 
   RowBox[{"1670284800000", "\[Rule]", "4.802`*^6"}], ",", 
   RowBox[{"1670371200000", "\[Rule]", "4.81`*^6"}], ",", 
   RowBox[{"1670457600000", "\[Rule]", "4.808`*^6"}], ",", 
   RowBox[{"1670544000000", "\[Rule]", "4.791`*^6"}], ",", 
   RowBox[{"1670630400000", "\[Rule]", "4.775`*^6"}], ",", 
   RowBox[{"1670716800000", "\[Rule]", "4.8`*^6"}], ",", 
   RowBox[{"1670803200000", "\[Rule]", "4.753`*^6"}], ",", 
   RowBox[{"1670889600000", "\[Rule]", "4.731`*^6"}], ",", 
   RowBox[{"1670976000000", "\[Rule]", "4.753`*^6"}], ",", 
   RowBox[{"1671062400000", "\[Rule]", "4.77`*^6"}], ",", 
   RowBox[{"1671148800000", "\[Rule]", "4.695`*^6"}], ",", 
   RowBox[{"1671235200000", "\[Rule]", "4.624`*^6"}], ",", 
   RowBox[{"1671321600000", "\[Rule]", "4.623`*^6"}], ",", 
   RowBox[{"1671408000000", "\[Rule]", "4.615`*^6"}], ",", 
   RowBox[{"1671494400000", "\[Rule]", "4.611`*^6"}], ",", 
   RowBox[{"1671580800000", "\[Rule]", "4.623`*^6"}], ",", 
   RowBox[{"1671667200000", "\[Rule]", "4.625`*^6"}], ",", 
   RowBox[{"1671753600000", "\[Rule]", "4.605`*^6"}], ",", 
   RowBox[{"1671840000000", "\[Rule]", "4.615`*^6"}], ",", 
   RowBox[{"1671926400000", "\[Rule]", "4.619`*^6"}], ",", 
   RowBox[{"1672012800000", "\[Rule]", "4.662`*^6"}], ",", 
   RowBox[{"1672099200000", "\[Rule]", "4.622`*^6"}], ",", 
   RowBox[{"1672185600000", "\[Rule]", "4.626`*^6"}], ",", 
   RowBox[{"1672272000000", "\[Rule]", "4.622`*^6"}], ",", 
   RowBox[{"1672358400000", "\[Rule]", "4.62`*^6"}], ",", 
   RowBox[{"1672444800000", "\[Rule]", "4.588`*^6"}], ",", 
   RowBox[{"1672531200000", "\[Rule]", "4.573`*^6"}], ",", 
   RowBox[{"1672617600000", "\[Rule]", "4.643`*^6"}], ",", 
   RowBox[{"1672704000000", "\[Rule]", "4.617`*^6"}], ",", 
   RowBox[{"1672790400000", "\[Rule]", "4.607`*^6"}], ",", 
   RowBox[{"1672876800000", "\[Rule]", "4.601`*^6"}], ",", 
   RowBox[{"1672963200000", "\[Rule]", "4.657`*^6"}], ",", 
   RowBox[{"1673049600000", "\[Rule]", "4.623`*^6"}], ",", 
   RowBox[{"1673136000000", "\[Rule]", "4.62`*^6"}], ",", 
   RowBox[{"1673222400000", "\[Rule]", "4.63`*^6"}], ",", 
   RowBox[{"1673308800000", "\[Rule]", "4.99`*^6"}], ",", 
   RowBox[{"1673395200000", "\[Rule]", "5.176`*^6"}], ",", 
   RowBox[{"1673481600000", "\[Rule]", "5.089`*^6"}], ",", 
   RowBox[{"1673568000000", "\[Rule]", "5.046`*^6"}], ",", 
   RowBox[{"1673654400000", "\[Rule]", "5.054`*^6"}], ",", 
   RowBox[{"1673740800000", "\[Rule]", "5.031`*^6"}], ",", 
   RowBox[{"1673827200000", "\[Rule]", "5.05`*^6"}], ",", 
   RowBox[{"1673913600000", "\[Rule]", "5.182`*^6"}], ",", 
   RowBox[{"1674000000000", "\[Rule]", "5.395`*^6"}], ",", 
   RowBox[{"1674086400000", "\[Rule]", "5.295`*^6"}], ",", 
   RowBox[{"1674172800000", "\[Rule]", "4.875`*^6"}], ",", 
   RowBox[{"1674259200000", "\[Rule]", "4.716`*^6"}], ",", 
   RowBox[{"1674345600000", "\[Rule]", "4.672`*^6"}], ",", 
   RowBox[{"1674432000000", "\[Rule]", "4.712`*^6"}], ",", 
   RowBox[{"1674518400000", "\[Rule]", "4.727`*^6"}], ",", 
   RowBox[{"1674604800000", "\[Rule]", "4.752`*^6"}], ",", 
   RowBox[{"1674691200000", "\[Rule]", "4.78`*^6"}], ",", 
   RowBox[{"1674777600000", "\[Rule]", "5.08`*^6"}], ",", 
   RowBox[{"1674864000000", "\[Rule]", "5.1`*^6"}], ",", 
   RowBox[{"1674950400000", "\[Rule]", "4.98`*^6"}], ",", 
   RowBox[{"1675036800000", "\[Rule]", "5.01`*^6"}], ",", 
   RowBox[{"1675123200000", "\[Rule]", "4.981`*^6"}], ",", 
   RowBox[{"1675209600000", "\[Rule]", "4.941`*^6"}], ",", 
   RowBox[{"1675296000000", "\[Rule]", "4.934`*^6"}], ",", 
   RowBox[{"1675382400000", "\[Rule]", "4.951`*^6"}], ",", 
   RowBox[{"1675468800000", "\[Rule]", "4.852`*^6"}], ",", 
   RowBox[{"1675555200000", "\[Rule]", "4.835`*^6"}], ",", 
   RowBox[{"1675641600000", "\[Rule]", "4.856`*^6"}], ",", 
   RowBox[{"1675728000000", "\[Rule]", "4.83`*^6"}], ",", 
   RowBox[{"1675814400000", "\[Rule]", "4.9`*^6"}], ",", 
   RowBox[{"1675900800000", "\[Rule]", "4.83`*^6"}], ",", 
   RowBox[{"1675987200000", "\[Rule]", "4.792`*^6"}], ",", 
   RowBox[{"1676073600000", "\[Rule]", "4.865`*^6"}], ",", 
   RowBox[{"1676160000000", "\[Rule]", "4.789`*^6"}], ",", 
   RowBox[{"1676246400000", "\[Rule]", "4.802`*^6"}], ",", 
   RowBox[{"1676332800000", "\[Rule]", "4.745`*^6"}], ",", 
   RowBox[{"1676419200000", "\[Rule]", "4.792`*^6"}], ",", 
   RowBox[{"1676505600000", "\[Rule]", "4.78`*^6"}], ",", 
   RowBox[{"1676592000000", "\[Rule]", "4.72`*^6"}], ",", 
   RowBox[{"1676678400000", "\[Rule]", "4.7`*^6"}], ",", 
   RowBox[{"1676764800000", "\[Rule]", "4.7`*^6"}], ",", 
   RowBox[{"1676851200000", "\[Rule]", "4.7`*^6"}], ",", 
   RowBox[{"1676937600000", "\[Rule]", "4.7`*^6"}], ",", 
   RowBox[{"1677024000000", "\[Rule]", "4.642`*^6"}], ",", 
   RowBox[{"1677110400000", "\[Rule]", "4.628`*^6"}], ",", 
   RowBox[{"1677196800000", "\[Rule]", "4.887`*^6"}], ",", 
   RowBox[{"1677283200000", "\[Rule]", "4.869`*^6"}], ",", 
   RowBox[{"1677369600000", "\[Rule]", "4.763`*^6"}], ",", 
   RowBox[{"1677456000000", "\[Rule]", "4.8`*^6"}], ",", 
   RowBox[{"1677542400000", "\[Rule]", "4.721`*^6"}], ",", 
   RowBox[{"1677628800000", "\[Rule]", "4.634`*^6"}], ",", 
   RowBox[{"1677715200000", "\[Rule]", "4.624`*^6"}], ",", 
   RowBox[{"1677801600000", "\[Rule]", "4.61`*^6"}], ",", 
   RowBox[{"1677888000000", "\[Rule]", "4.566`*^6"}], ",", 
   RowBox[{"1677974400000", "\[Rule]", "4.527`*^6"}], ",", 
   RowBox[{"1678060800000", "\[Rule]", "4.558`*^6"}], ",", 
   RowBox[{"1678147200000", "\[Rule]", "4.531`*^6"}], ",", 
   RowBox[{"1678233600000", "\[Rule]", "4.467`*^6"}], ",", 
   RowBox[{"1678320000000", "\[Rule]", "4.46`*^6"}], ",", 
   RowBox[{"1678406400000", "\[Rule]", "4.423`*^6"}], ",", 
   RowBox[{"1678492800000", "\[Rule]", "4.36`*^6"}], ",", 
   RowBox[{"1678579200000", "\[Rule]", "4.335`*^6"}], ",", 
   RowBox[{"1678665600000", "\[Rule]", "4.385`*^6"}], ",", 
   RowBox[{"1678752000000", "\[Rule]", "4.397`*^6"}], ",", 
   RowBox[{"1678838400000", "\[Rule]", "4.389`*^6"}], ",", 
   RowBox[{"1678924800000", "\[Rule]", "4.37`*^6"}], ",", 
   RowBox[{"1679011200000", "\[Rule]", "4.359`*^6"}], ",", 
   RowBox[{"1679097600000", "\[Rule]", "4.342`*^6"}], ",", 
   RowBox[{"1679184000000", "\[Rule]", "4.375`*^6"}], ",", 
   RowBox[{"1679270400000", "\[Rule]", "4.338`*^6"}], ",", 
   RowBox[{"1679356800000", "\[Rule]", "4.328`*^6"}], ",", 
   RowBox[{"1679443200000", "\[Rule]", "4.368`*^6"}], ",", 
   RowBox[{"1679529600000", "\[Rule]", "4.321`*^6"}], ",", 
   RowBox[{"1679616000000", "\[Rule]", "4.349`*^6"}], ",", 
   RowBox[{"1679702400000", "\[Rule]", "4.35`*^6"}], ",", 
   RowBox[{"1679788800000", "\[Rule]", "4.381`*^6"}], ",", 
   RowBox[{"1679875200000", "\[Rule]", "4.33`*^6"}], ",", 
   RowBox[{"1679961600000", "\[Rule]", "4.413`*^6"}], ",", 
   RowBox[{"1680048000000", "\[Rule]", "4.38`*^6"}], ",", 
   RowBox[{"1680134400000", "\[Rule]", "4.4`*^6"}], ",", 
   RowBox[{"1680220800000", "\[Rule]", "4.404`*^6"}], ",", 
   RowBox[{"1680307200000", "\[Rule]", "4.396`*^6"}], ",", 
   RowBox[{"1680393600000", "\[Rule]", "4.486`*^6"}], ",", 
   RowBox[{"1680480000000", "\[Rule]", "4.438`*^6"}], ",", 
   RowBox[{"1680566400000", "\[Rule]", "4.431`*^6"}], ",", 
   RowBox[{"1680652800000", "\[Rule]", "4.414`*^6"}], ",", 
   RowBox[{"1680739200000", "\[Rule]", "4.431`*^6"}], ",", 
   RowBox[{"1680825600000", "\[Rule]", "4.44`*^6"}], ",", 
   RowBox[{"1680912000000", "\[Rule]", "4.424`*^6"}], ",", 
   RowBox[{"1680998400000", "\[Rule]", "4.422`*^6"}], ",", 
   RowBox[{"1681084800000", "\[Rule]", "4.41`*^6"}], ",", 
   RowBox[{"1681171200000", "\[Rule]", "4.422`*^6"}], ",", 
   RowBox[{"1681257600000", "\[Rule]", "4.435`*^6"}], ",", 
   RowBox[{"1681344000000", "\[Rule]", "4.398`*^6"}], ",", 
   RowBox[{"1681430400000", "\[Rule]", "4.389`*^6"}], ",", 
   RowBox[{"1681516800000", "\[Rule]", "4.368`*^6"}], ",", 
   RowBox[{"1681603200000", "\[Rule]", "4.344`*^6"}], ",", 
   RowBox[{"1681689600000", "\[Rule]", "4.332`*^6"}], ",", 
   RowBox[{"1681776000000", "\[Rule]", "4.391`*^6"}], ",", 
   RowBox[{"1681862400000", "\[Rule]", "4.366`*^6"}], ",", 
   RowBox[{"1681948800000", "\[Rule]", "4.439`*^6"}], ",", 
   RowBox[{"1682035200000", "\[Rule]", "4.392`*^6"}], ",", 
   RowBox[{"1682121600000", "\[Rule]", "4.41`*^6"}], ",", 
   RowBox[{"1682208000000", "\[Rule]", "4.4`*^6"}], ",", 
   RowBox[{"1682294400000", "\[Rule]", "4.415`*^6"}], ",", 
   RowBox[{"1682380800000", "\[Rule]", "4.482`*^6"}], ",", 
   RowBox[{"1682467200000", "\[Rule]", "4.45`*^6"}], ",", 
   RowBox[{"1682553600000", "\[Rule]", "4.482`*^6"}], ",", 
   RowBox[{"1682640000000", "\[Rule]", "4.48`*^6"}], ",", 
   RowBox[{"1682726400000", "\[Rule]", "4.48`*^6"}], ",", 
   RowBox[{"1682812800000", "\[Rule]", "4.472`*^6"}], ",", 
   RowBox[{"1682899200000", "\[Rule]", "4.593`*^6"}], ",", 
   RowBox[{"1682985600000", "\[Rule]", "4.544`*^6"}], ",", 
   RowBox[{"1683072000000", "\[Rule]", "4.501`*^6"}], ",", 
   RowBox[{"1683158400000", "\[Rule]", "4.6`*^6"}], ",", 
   RowBox[{"1683244800000", "\[Rule]", "4.605`*^6"}], ",", 
   RowBox[{"1683331200000", "\[Rule]", "4.6`*^6"}], ",", 
   RowBox[{"1683417600000", "\[Rule]", "4.575`*^6"}], ",", 
   RowBox[{"1683504000000", "\[Rule]", "4.619`*^6"}], ",", 
   RowBox[{"1683590400000", "\[Rule]", "4.6`*^6"}], ",", 
   RowBox[{"1683676800000", "\[Rule]", "4.532`*^6"}], ",", 
   RowBox[{"1683763200000", "\[Rule]", "4.511`*^6"}], ",", 
   RowBox[{"1683849600000", "\[Rule]", "4.492`*^6"}], ",", 
   RowBox[{"1683936000000", "\[Rule]", "4.455`*^6"}], ",", 
   RowBox[{"1684022400000", "\[Rule]", "4.462`*^6"}], ",", 
   RowBox[{"1684108800000", "\[Rule]", "4.455`*^6"}], ",", 
   RowBox[{"1684195200000", "\[Rule]", "4.46`*^6"}], ",", 
   RowBox[{"1684281600000", "\[Rule]", "4.457`*^6"}], ",", 
   RowBox[{"1684368000000", "\[Rule]", "4.47`*^6"}], ",", 
   RowBox[{"1684454400000", "\[Rule]", "4.45`*^6"}], ",", 
   RowBox[{"1684540800000", "\[Rule]", "4.47`*^6"}], ",", 
   RowBox[{"1684627200000", "\[Rule]", "4.551`*^6"}], ",", 
   RowBox[{"1684713600000", "\[Rule]", "4.478`*^6"}], ",", 
   RowBox[{"1684800000000", "\[Rule]", "4.473`*^6"}], ",", 
   RowBox[{"1684886400000", "\[Rule]", "4.5`*^6"}], ",", 
   RowBox[{"1684972800000", "\[Rule]", "4.471`*^6"}], ",", 
   RowBox[{"1685059200000", "\[Rule]", "4.455`*^6"}], ",", 
   RowBox[{"1685145600000", "\[Rule]", "4.459`*^6"}], ",", 
   RowBox[{"1685232000000", "\[Rule]", "4.5`*^6"}], ",", 
   RowBox[{"1685318400000", "\[Rule]", "4.51`*^6"}], ",", 
   RowBox[{"1685404800000", "\[Rule]", "4.57`*^6"}], ",", 
   RowBox[{"1685491200000", "\[Rule]", "4.502`*^6"}], ",", 
   RowBox[{"1685577600000", "\[Rule]", "4.475`*^6"}], ",", 
   RowBox[{"1685664000000", "\[Rule]", "5.386`*^6"}], ",", 
   RowBox[{"1685750400000", "\[Rule]", "5.39`*^6"}], ",", 
   RowBox[{"1685836800000", "\[Rule]", "5.511`*^6"}], ",", 
   RowBox[{"1685923200000", "\[Rule]", "5.722`*^6"}], ",", 
   RowBox[{"1686009600000", "\[Rule]", "5.727`*^6"}], ",", 
   RowBox[{"1686096000000", "\[Rule]", "5.`*^6"}], ",", 
   RowBox[{"1686182400000", "\[Rule]", "4.768`*^6"}], ",", 
   RowBox[{"1686268800000", "\[Rule]", "4.792`*^6"}], ",", 
   RowBox[{"1686355200000", "\[Rule]", "4.791`*^6"}], ",", 
   RowBox[{"1686441600000", "\[Rule]", "4.713`*^6"}], ",", 
   RowBox[{"1686528000000", "\[Rule]", "4.81`*^6"}], ",", 
   RowBox[{"1686614400000", "\[Rule]", "4.693`*^6"}], ",", 
   RowBox[{"1686700800000", "\[Rule]", "4.695`*^6"}], ",", 
   RowBox[{"1686787200000", "\[Rule]", "4.66`*^6"}], ",", 
   RowBox[{"1686873600000", "\[Rule]", "5.013`*^6"}], ",", 
   RowBox[{"1686960000000", "\[Rule]", "4.842`*^6"}], ",", 
   RowBox[{"1687046400000", "\[Rule]", "4.885`*^6"}], ",", 
   RowBox[{"1687132800000", "\[Rule]", "4.989`*^6"}], ",", 
   RowBox[{"1687219200000", "\[Rule]", "4.837`*^6"}], ",", 
   RowBox[{"1687305600000", "\[Rule]", "4.823`*^6"}], ",", 
   RowBox[{"1687392000000", "\[Rule]", "4.809`*^6"}], ",", 
   RowBox[{"1687478400000", "\[Rule]", "5.06`*^6"}], ",", 
   RowBox[{"1687564800000", "\[Rule]", "5.02`*^6"}], ",", 
   RowBox[{"1687651200000", "\[Rule]", "4.998`*^6"}], ",", 
   RowBox[{"1687737600000", "\[Rule]", "5.078`*^6"}], ",", 
   RowBox[{"1687824000000", "\[Rule]", "4.908`*^6"}], ",", 
   RowBox[{"1687910400000", "\[Rule]", "4.833`*^6"}], ",", 
   RowBox[{"1687996800000", "\[Rule]", "4.832`*^6"}], ",", 
   RowBox[{"1688083200000", "\[Rule]", "4.78`*^6"}], ",", 
   RowBox[{"1688169600000", "\[Rule]", "4.769`*^6"}], ",", 
   RowBox[{"1688256000000", "\[Rule]", "4.755`*^6"}], ",", 
   RowBox[{"1688342400000", "\[Rule]", "4.735`*^6"}], ",", 
   RowBox[{"1688428800000", "\[Rule]", "4.695`*^6"}], ",", 
   RowBox[{"1688515200000", "\[Rule]", "4.649`*^6"}], ",", 
   RowBox[{"1688601600000", "\[Rule]", "4.662`*^6"}], ",", 
   RowBox[{"1688688000000", "\[Rule]", "4.71`*^6"}], ",", 
   RowBox[{"1688774400000", "\[Rule]", "4.692`*^6"}], ",", 
   RowBox[{"1688860800000", "\[Rule]", "4.735`*^6"}], ",", 
   RowBox[{"1688947200000", "\[Rule]", "4.732`*^6"}], ",", 
   RowBox[{"1689033600000", "\[Rule]", "4.742`*^6"}], ",", 
   RowBox[{"1689120000000", "\[Rule]", "4.701`*^6"}], ",", 
   RowBox[{"1689206400000", "\[Rule]", "4.702`*^6"}], ",", 
   RowBox[{"1689292800000", "\[Rule]", "4.7`*^6"}], ",", 
   RowBox[{"1689379200000", "\[Rule]", "4.683`*^6"}], ",", 
   RowBox[{"1689465600000", "\[Rule]", "4.688`*^6"}], ",", 
   RowBox[{"1689552000000", "\[Rule]", "4.71`*^6"}], ",", 
   RowBox[{"1689638400000", "\[Rule]", "4.704`*^6"}], ",", 
   RowBox[{"1689724800000", "\[Rule]", "4.704`*^6"}], ",", 
   RowBox[{"1689811200000", "\[Rule]", "4.715`*^6"}], ",", 
   RowBox[{"1689897600000", "\[Rule]", "4.733`*^6"}], ",", 
   RowBox[{"1689984000000", "\[Rule]", "4.71`*^6"}], ",", 
   RowBox[{"1690070400000", "\[Rule]", "4.756`*^6"}], ",", 
   RowBox[{"1690156800000", "\[Rule]", "4.75`*^6"}], ",", 
   RowBox[{"1690243200000", "\[Rule]", "4.737`*^6"}], ",", 
   RowBox[{"1690329600000", "\[Rule]", "4.742`*^6"}], ",", 
   RowBox[{"1690416000000", "\[Rule]", "4.734`*^6"}], ",", 
   RowBox[{"1690502400000", "\[Rule]", "4.735`*^6"}], ",", 
   RowBox[{"1690588800000", "\[Rule]", "4.75`*^6"}], ",", 
   RowBox[{"1690675200000", "\[Rule]", "4.75`*^6"}], ",", 
   RowBox[{"1690761600000", "\[Rule]", "4.801`*^6"}], ",", 
   RowBox[{"1690848000000", "\[Rule]", "4.787`*^6"}], ",", 
   RowBox[{"1690934400000", "\[Rule]", "4.783`*^6"}], ",", 
   RowBox[{"1691020800000", "\[Rule]", "4.776`*^6"}], ",", 
   RowBox[{"1691107200000", "\[Rule]", "4.78`*^6"}], ",", 
   RowBox[{"1691193600000", "\[Rule]", "4.776`*^6"}], ",", 
   RowBox[{"1691280000000", "\[Rule]", "4.792`*^6"}], ",", 
   RowBox[{"1691366400000", "\[Rule]", "4.774`*^6"}], ",", 
   RowBox[{"1691452800000", "\[Rule]", "4.805`*^6"}], ",", 
   RowBox[{"1691539200000", "\[Rule]", "4.793`*^6"}], ",", 
   RowBox[{"1691625600000", "\[Rule]", "4.829`*^6"}], ",", 
   RowBox[{"1691712000000", "\[Rule]", "4.805`*^6"}], ",", 
   RowBox[{"1691798400000", "\[Rule]", "4.798`*^6"}], ",", 
   RowBox[{"1691884800000", "\[Rule]", "4.79`*^6"}], ",", 
   RowBox[{"1691971200000", "\[Rule]", "4.8`*^6"}], ",", 
   RowBox[{"1692057600000", "\[Rule]", "4.785`*^6"}], ",", 
   RowBox[{"1692144000000", "\[Rule]", "4.785`*^6"}], ",", 
   RowBox[{"1692230400000", "\[Rule]", "4.774`*^6"}], ",", 
   RowBox[{"1692316800000", "\[Rule]", "4.763`*^6"}], ",", 
   RowBox[{"1692403200000", "\[Rule]", "4.74`*^6"}], ",", 
   RowBox[{"1692489600000", "\[Rule]", "4.741`*^6"}], ",", 
   RowBox[{"1692576000000", "\[Rule]", "4.75`*^6"}], ",", 
   RowBox[{"1692662400000", "\[Rule]", "4.778`*^6"}], ",", 
   RowBox[{"1692748800000", "\[Rule]", "4.976`*^6"}], ",", 
   RowBox[{"1692835200000", "\[Rule]", "4.997`*^6"}], ",", 
   RowBox[{"1692921600000", "\[Rule]", "4.871`*^6"}], ",", 
   RowBox[{"1693008000000", "\[Rule]", "4.891`*^6"}], ",", 
   RowBox[{"1693094400000", "\[Rule]", "4.95`*^6"}], ",", 
   RowBox[{"1693180800000", "\[Rule]", "5.`*^6"}], ",", 
   RowBox[{"1693267200000", "\[Rule]", "4.765`*^6"}], ",", 
   RowBox[{"1693353600000", "\[Rule]", "4.762`*^6"}], ",", 
   RowBox[{"1693440000000", "\[Rule]", "4.784`*^6"}], ",", 
   RowBox[{"1693699200000", "\[Rule]", "4.771`*^6"}], ",", 
   RowBox[{"1693785600000", "\[Rule]", "4.774`*^6"}], ",", 
   RowBox[{"1693872000000", "\[Rule]", "4.783`*^6"}], ",", 
   RowBox[{"1693958400000", "\[Rule]", "4.778`*^6"}], ",", 
   RowBox[{"1694044800000", "\[Rule]", "4.772`*^6"}], ",", 
   RowBox[{"1694131200000", "\[Rule]", "4.766`*^6"}], ",", 
   RowBox[{"1694217600000", "\[Rule]", "4.769`*^6"}], ",", 
   RowBox[{"1694304000000", "\[Rule]", "4.78`*^6"}], ",", 
   RowBox[{"1694390400000", "\[Rule]", "4.794`*^6"}], ",", 
   RowBox[{"1694476800000", "\[Rule]", "4.801`*^6"}], ",", 
   RowBox[{"1694563200000", "\[Rule]", "4.8`*^6"}], ",", 
   RowBox[{"1694649600000", "\[Rule]", "4.835`*^6"}], ",", 
   RowBox[{"1694736000000", "\[Rule]", "4.802`*^6"}], ",", 
   RowBox[{"1694822400000", "\[Rule]", "4.773`*^6"}], ",", 
   RowBox[{"1694908800000", "\[Rule]", "4.785`*^6"}], ",", 
   RowBox[{"1694995200000", "\[Rule]", "4.785`*^6"}], ",", 
   RowBox[{"1695081600000", "\[Rule]", "4.804`*^6"}], ",", 
   RowBox[{"1695168000000", "\[Rule]", "4.803`*^6"}], ",", 
   RowBox[{"1695254400000", "\[Rule]", "4.998`*^6"}], ",", 
   RowBox[{"1695340800000", "\[Rule]", "4.837`*^6"}], ",", 
   RowBox[{"1695427200000", "\[Rule]", "4.806`*^6"}], ",", 
   RowBox[{"1695513600000", "\[Rule]", "4.803`*^6"}], ",", 
   RowBox[{"1695600000000", "\[Rule]", "4.83`*^6"}], ",", 
   RowBox[{"1695686400000", "\[Rule]", "4.85`*^6"}], ",", 
   RowBox[{"1695772800000", "\[Rule]", "4.828`*^6"}], ",", 
   RowBox[{"1695859200000", "\[Rule]", "4.819`*^6"}], ",", 
   RowBox[{"1695945600000", "\[Rule]", "4.82`*^6"}], ",", 
   RowBox[{"1696032000000", "\[Rule]", "4.814`*^6"}], ",", 
   RowBox[{"1696118400000", "\[Rule]", "4.805`*^6"}], ",", 
   RowBox[{"1696204800000", "\[Rule]", "4.813`*^6"}], ",", 
   RowBox[{"1696291200000", "\[Rule]", "4.85`*^6"}], ",", 
   RowBox[{"1696377600000", "\[Rule]", "4.86499999`*^6"}], ",", 
   RowBox[{"1696464000000", "\[Rule]", "4.9`*^6"}], ",", 
   RowBox[{"1696550400000", "\[Rule]", "4.93`*^6"}], ",", 
   RowBox[{"1696636800000", "\[Rule]", "4.853`*^6"}], ",", 
   RowBox[{"1696723200000", "\[Rule]", "4.847`*^6"}], ",", 
   RowBox[{"1696809600000", "\[Rule]", "4.851`*^6"}], ",", 
   RowBox[{"1696896000000", "\[Rule]", "4.861`*^6"}], ",", 
   RowBox[{"1696982400000", "\[Rule]", "4.845`*^6"}], ",", 
   RowBox[{"1697068800000", "\[Rule]", "4.851`*^6"}], ",", 
   RowBox[{"1697155200000", "\[Rule]", "5.1`*^6"}], ",", 
   RowBox[{"1697241600000", "\[Rule]", "5.1`*^6"}], ",", 
   RowBox[{"1697328000000", "\[Rule]", "4.958`*^6"}], ",", 
   RowBox[{"1697414400000", "\[Rule]", "4.975`*^6"}], ",", 
   RowBox[{"1697500800000", "\[Rule]", "5.098`*^6"}], ",", 
   RowBox[{"1697587200000", "\[Rule]", "4.825`*^6"}], ",", 
   RowBox[{"1697673600000", "\[Rule]", "4.85`*^6"}], ",", 
   RowBox[{"1697760000000", "\[Rule]", "4.814`*^6"}], ",", 
   RowBox[{"1697846400000", "\[Rule]", "4.809`*^6"}], ",", 
   RowBox[{"1697932800000", "\[Rule]", "4.802`*^6"}], ",", 
   RowBox[{"1698019200000", "\[Rule]", "4.836`*^6"}], ",", 
   RowBox[{"1698105600000", "\[Rule]", "4.833`*^6"}], ",", 
   RowBox[{"1698192000000", "\[Rule]", "4.829`*^6"}], ",", 
   RowBox[{"1698278400000", "\[Rule]", "4.836`*^6"}], ",", 
   RowBox[{"1698364800000", "\[Rule]", "4.852`*^6"}], ",", 
   RowBox[{"1698451200000", "\[Rule]", "4.868`*^6"}], ",", 
   RowBox[{"1698537600000", "\[Rule]", "4.891`*^6"}], ",", 
   RowBox[{"1698624000000", "\[Rule]", "4.904`*^6"}], ",", 
   RowBox[{"1698710400000", "\[Rule]", "4.92`*^6"}], ",", 
   RowBox[{"1698796800000", "\[Rule]", "4.912`*^6"}], ",", 
   RowBox[{"1698883200000", "\[Rule]", "4.911`*^6"}], ",", 
   RowBox[{"1698969600000", "\[Rule]", "4.879`*^6"}], ",", 
   RowBox[{"1699056000000", "\[Rule]", "4.808`*^6"}], ",", 
   RowBox[{"1699142400000", "\[Rule]", "4.81`*^6"}], ",", 
   RowBox[{"1699228800000", "\[Rule]", "4.838`*^6"}], ",", 
   RowBox[{"1699315200000", "\[Rule]", "4.859`*^6"}], ",", 
   RowBox[{"1699401600000", "\[Rule]", "4.832`*^6"}], ",", 
   RowBox[{"1699488000000", "\[Rule]", "4.821`*^6"}], ",", 
   RowBox[{"1699574400000", "\[Rule]", "4.828`*^6"}], ",", 
   RowBox[{"1699660800000", "\[Rule]", "4.841`*^6"}], ",", 
   RowBox[{"1699747200000", "\[Rule]", "4.854`*^6"}], ",", 
   RowBox[{"1699833600000", "\[Rule]", "4.848`*^6"}], ",", 
   RowBox[{"1699920000000", "\[Rule]", "4.875`*^6"}], ",", 
   RowBox[{"1700006400000", "\[Rule]", "4.831`*^6"}], ",", 
   RowBox[{"1700092800000", "\[Rule]", "4.814`*^6"}], ",", 
   RowBox[{"1700179200000", "\[Rule]", "4.812`*^6"}], ",", 
   RowBox[{"1700265600000", "\[Rule]", "4.815`*^6"}], ",", 
   RowBox[{"1700352000000", "\[Rule]", "4.815`*^6"}], ",", 
   RowBox[{"1700438400000", "\[Rule]", "4.818`*^6"}], ",", 
   RowBox[{"1700524800000", "\[Rule]", "4.892`*^6"}], ",", 
   RowBox[{"1700611200000", "\[Rule]", "4.833`*^6"}], ",", 
   RowBox[{"1700697600000", "\[Rule]", "4.85`*^6"}], ",", 
   RowBox[{"1700784000000", "\[Rule]", "4.845`*^6"}], ",", 
   RowBox[{"1700870400000", "\[Rule]", "4.853`*^6"}], ",", 
   RowBox[{"1700956800000", "\[Rule]", "4.876`*^6"}], ",", 
   RowBox[{"1701043200000", "\[Rule]", "4.819`*^6"}], ",", 
   RowBox[{"1701129600000", "\[Rule]", "4.796`*^6"}], ",", 
   RowBox[{"1701216000000", "\[Rule]", "4.81`*^6"}], ",", 
   RowBox[{"1701302400000", "\[Rule]", "4.796`*^6"}], ",", 
   RowBox[{"1701388800000", "\[Rule]", "4.789`*^6"}], ",", 
   RowBox[{"1701475200000", "\[Rule]", "4.912`*^6"}], ",", 
   RowBox[{"1701561600000", "\[Rule]", "5.033`*^6"}], ",", 
   RowBox[{"1701648000000", "\[Rule]", "4.95`*^6"}], ",", 
   RowBox[{"1701734400000", "\[Rule]", "4.857`*^6"}], ",", 
   RowBox[{"1701820800000", "\[Rule]", "4.858`*^6"}], ",", 
   RowBox[{"1701907200000", "\[Rule]", "4.85`*^6"}], ",", 
   RowBox[{"1701993600000", "\[Rule]", "4.818`*^6"}], ",", 
   RowBox[{"1702080000000", "\[Rule]", "4.81`*^6"}], ",", 
   RowBox[{"1702166400000", "\[Rule]", "4.823`*^6"}], ",", 
   RowBox[{"1702252800000", "\[Rule]", "4.845`*^6"}], ",", 
   RowBox[{"1702339200000", "\[Rule]", "4.832`*^6"}], ",", 
   RowBox[{"1702425600000", "\[Rule]", "4.848`*^6"}], ",", 
   RowBox[{"1702512000000", "\[Rule]", "4.841`*^6"}], ",", 
   RowBox[{"1702598400000", "\[Rule]", "4.83`*^6"}], ",", 
   RowBox[{"1702684800000", "\[Rule]", "4.82`*^6"}], ",", 
   RowBox[{"1702771200000", "\[Rule]", "4.827`*^6"}], ",", 
   RowBox[{"1702857600000", "\[Rule]", "4.835`*^6"}], ",", 
   RowBox[{"1702944000000", "\[Rule]", "4.878`*^6"}], ",", 
   RowBox[{"1703030400000", "\[Rule]", "4.86`*^6"}], ",", 
   RowBox[{"1703116800000", "\[Rule]", "4.9`*^6"}], ",", 
   RowBox[{"1703203200000", "\[Rule]", "4.882`*^6"}], ",", 
   RowBox[{"1703289600000", "\[Rule]", "4.842`*^6"}], ",", 
   RowBox[{"1703376000000", "\[Rule]", "4.846`*^6"}], ",", 
   RowBox[{"1703462400000", "\[Rule]", "4.852`*^6"}], ",", 
   RowBox[{"1703548800000", "\[Rule]", "4.863`*^6"}], ",", 
   RowBox[{"1703635200000", "\[Rule]", "4.851`*^6"}], ",", 
   RowBox[{"1703721600000", "\[Rule]", "4.889`*^6"}], ",", 
   RowBox[{"1703808000000", "\[Rule]", "4.88`*^6"}], ",", 
   RowBox[{"1703894400000", "\[Rule]", "4.871`*^6"}], ",", 
   RowBox[{"1703980800000", "\[Rule]", "4.871`*^6"}], ",", 
   RowBox[{"1704067200000", "\[Rule]", "4.87`*^6"}], ",", 
   RowBox[{"1704153600000", "\[Rule]", "4.897`*^6"}], ",", 
   RowBox[{"1704240000000", "\[Rule]", "4.9`*^6"}], ",", 
   RowBox[{"1704326400000", "\[Rule]", "4.885`*^6"}], ",", 
   RowBox[{"1704412800000", "\[Rule]", "4.867`*^6"}], ",", 
   RowBox[{"1704499200000", "\[Rule]", "4.856`*^6"}], ",", 
   RowBox[{"1704585600000", "\[Rule]", "4.892`*^6"}], ",", 
   RowBox[{"1704672000000", "\[Rule]", "4.891`*^6"}], ",", 
   RowBox[{"1704758400000", "\[Rule]", "4.895`*^6"}], ",", 
   RowBox[{"1704844800000", "\[Rule]", "4.864`*^6"}], ",", 
   RowBox[{"1704931200000", "\[Rule]", "4.847`*^6"}], ",", 
   RowBox[{"1705017600000", "\[Rule]", "4.828`*^6"}], ",", 
   RowBox[{"1705104000000", "\[Rule]", "4.84`*^6"}], ",", 
   RowBox[{"1705190400000", "\[Rule]", "4.844`*^6"}], ",", 
   RowBox[{"1705276800000", "\[Rule]", "4.842`*^6"}], ",", 
   RowBox[{"1705363200000", "\[Rule]", "4.844`*^6"}], ",", 
   RowBox[{"1705449600000", "\[Rule]", "4.867`*^6"}], ",", 
   RowBox[{"1705536000000", "\[Rule]", "4.87`*^6"}], ",", 
   RowBox[{"1705622400000", "\[Rule]", "4.875`*^6"}], ",", 
   RowBox[{"1705708800000", "\[Rule]", "4.842`*^6"}], ",", 
   RowBox[{"1705795200000", "\[Rule]", "4.857`*^6"}], ",", 
   RowBox[{"1705881600000", "\[Rule]", "4.858`*^6"}], ",", 
   RowBox[{"1705968000000", "\[Rule]", "4.885`*^6"}], ",", 
   RowBox[{"1706054400000", "\[Rule]", "4.881`*^6"}], ",", 
   RowBox[{"1706140800000", "\[Rule]", "4.871`*^6"}], ",", 
   RowBox[{"1706227200000", "\[Rule]", "4.86`*^6"}], ",", 
   RowBox[{"1706313600000", "\[Rule]", "4.831`*^6"}], ",", 
   RowBox[{"1706400000000", "\[Rule]", "4.844`*^6"}], ",", 
   RowBox[{"1706486400000", "\[Rule]", "4.825`*^6"}], ",", 
   RowBox[{"1706572800000", "\[Rule]", "4.815`*^6"}], ",", 
   RowBox[{"1706659200000", "\[Rule]", "4.852`*^6"}], ",", 
   RowBox[{"1706745600000", "\[Rule]", "4.835`*^6"}], ",", 
   RowBox[{"1706832000000", "\[Rule]", "4.824`*^6"}], ",", 
   RowBox[{"1706918400000", "\[Rule]", "4.838`*^6"}], ",", 
   RowBox[{"1707004800000", "\[Rule]", "4.836`*^6"}], ",", 
   RowBox[{"1707091200000", "\[Rule]", "4.882`*^6"}], ",", 
   RowBox[{"1707177600000", "\[Rule]", "4.874`*^6"}], ",", 
   RowBox[{"1707264000000", "\[Rule]", "5.1`*^6"}], ",", 
   RowBox[{"1707350400000", "\[Rule]", "5.24`*^6"}], ",", 
   RowBox[{"1707436800000", "\[Rule]", "5.2`*^6"}], ",", 
   RowBox[{"1707523200000", "\[Rule]", "5.194`*^6"}], ",", 
   RowBox[{"1707609600000", "\[Rule]", "5.199`*^6"}], ",", 
   RowBox[{"1707696000000", "\[Rule]", "5.237`*^6"}], ",", 
   RowBox[{"1707782400000", "\[Rule]", "5.231`*^6"}], ",", 
   RowBox[{"1707868800000", "\[Rule]", "4.915`*^6"}], ",", 
   RowBox[{"1707955200000", "\[Rule]", "4.897`*^6"}], ",", 
   RowBox[{"1708041600000", "\[Rule]", "4.904`*^6"}], ",", 
   RowBox[{"1708128000000", "\[Rule]", "4.884`*^6"}], ",", 
   RowBox[{"1708214400000", "\[Rule]", "4.904`*^6"}], ",", 
   RowBox[{"1708300800000", "\[Rule]", "4.902`*^6"}], ",", 
   RowBox[{"1708387200000", "\[Rule]", "4.914`*^6"}], ",", 
   RowBox[{"1708473600000", "\[Rule]", "4.873`*^6"}], ",", 
   RowBox[{"1708560000000", "\[Rule]", "4.847`*^6"}], ",", 
   RowBox[{"1708646400000", "\[Rule]", "4.843`*^6"}], ",", 
   RowBox[{"1708732800000", "\[Rule]", "4.84`*^6"}], ",", 
   RowBox[{"1708819200000", "\[Rule]", "4.85`*^6"}], ",", 
   RowBox[{"1708905600000", "\[Rule]", "4.865`*^6"}], ",", 
   RowBox[{"1708992000000", "\[Rule]", "4.857`*^6"}], ",", 
   RowBox[{"1709078400000", "\[Rule]", "4.858`*^6"}], ",", 
   RowBox[{"1709164800000", "\[Rule]", "4.854`*^6"}], ",", 
   RowBox[{"1709251200000", "\[Rule]", "4.85`*^6"}], ",", 
   RowBox[{"1709337600000", "\[Rule]", "4.847`*^6"}], ",", 
   RowBox[{"1709424000000", "\[Rule]", "4.865`*^6"}], ",", 
   RowBox[{"1709510400000", "\[Rule]", "4.86`*^6"}], ",", 
   RowBox[{"1709596800000", "\[Rule]", "4.88`*^6"}], ",", 
   RowBox[{"1709683200000", "\[Rule]", "4.897`*^6"}], ",", 
   RowBox[{"1709769600000", "\[Rule]", "4.875`*^6"}], ",", 
   RowBox[{"1709856000000", "\[Rule]", "4.891`*^6"}], ",", 
   RowBox[{"1709942400000", "\[Rule]", "4.887`*^6"}], ",", 
   RowBox[{"1710028800000", "\[Rule]", "4.88`*^6"}], ",", 
   RowBox[{"1710115200000", "\[Rule]", "4.887`*^6"}], ",", 
   RowBox[{"1710201600000", "\[Rule]", "4.874`*^6"}], ",", 
   RowBox[{"1710288000000", "\[Rule]", "4.87`*^6"}], ",", 
   RowBox[{"1710374400000", "\[Rule]", "4.874`*^6"}], ",", 
   RowBox[{"1710460800000", "\[Rule]", "4.89`*^6"}], ",", 
   RowBox[{"1710547200000", "\[Rule]", "4.883`*^6"}], ",", 
   RowBox[{"1710633600000", "\[Rule]", "4.903`*^6"}], ",", 
   RowBox[{"1710720000000", "\[Rule]", "4.903`*^6"}], ",", 
   RowBox[{"1710806400000", "\[Rule]", "4.927`*^6"}], ",", 
   RowBox[{"1710892800000", "\[Rule]", "4.89`*^6"}], ",", 
   RowBox[{"1710979200000", "\[Rule]", "4.925`*^6"}], ",", 
   RowBox[{"1711065600000", "\[Rule]", "4.901`*^6"}], ",", 
   RowBox[{"1711152000000", "\[Rule]", "4.915`*^6"}], ",", 
   RowBox[{"1711238400000", "\[Rule]", "4.944`*^6"}], ",", 
   RowBox[{"1711324800000", "\[Rule]", "4.908`*^6"}], ",", 
   RowBox[{"1711411200000", "\[Rule]", "4.922`*^6"}], ",", 
   RowBox[{"1711497600000", "\[Rule]", "4.922`*^6"}], ",", 
   RowBox[{"1711584000000", "\[Rule]", "4.93`*^6"}], ",", 
   RowBox[{"1711670400000", "\[Rule]", "4.906`*^6"}], ",", 
   RowBox[{"1711756800000", "\[Rule]", "4.951`*^6"}], ",", 
   RowBox[{"1711843200000", "\[Rule]", "4.934`*^6"}], ",", 
   RowBox[{"1711929600000", "\[Rule]", "4.946`*^6"}], ",", 
   RowBox[{"1712016000000", "\[Rule]", "5.005`*^6"}], ",", 
   RowBox[{"1712102400000", "\[Rule]", "5.`*^6"}], ",", 
   RowBox[{"1712188800000", "\[Rule]", "5.122`*^6"}], ",", 
   RowBox[{"1712275200000", "\[Rule]", "5.072`*^6"}], ",", 
   RowBox[{"1712361600000", "\[Rule]", "4.99`*^6"}], ",", 
   RowBox[{"1712448000000", "\[Rule]", "5.035`*^6"}], ",", 
   RowBox[{"1712534400000", "\[Rule]", "5.016`*^6"}], ",", 
   RowBox[{"1712620800000", "\[Rule]", "5.`*^6"}], ",", 
   RowBox[{"1712707200000", "\[Rule]", "4.91`*^6"}], ",", 
   RowBox[{"1712793600000", "\[Rule]", "4.913`*^6"}], ",", 
   RowBox[{"1712880000000", "\[Rule]", "4.91`*^6"}], ",", 
   RowBox[{"1712966400000", "\[Rule]", "4.91`*^6"}], ",", 
   RowBox[{"1713052800000", "\[Rule]", "4.909`*^6"}], ",", 
   RowBox[{"1713139200000", "\[Rule]", "4.92`*^6"}], ",", 
   RowBox[{"1713225600000", "\[Rule]", "4.922`*^6"}], ",", 
   RowBox[{"1713312000000", "\[Rule]", "4.96`*^6"}], ",", 
   RowBox[{"1713398400000", "\[Rule]", "4.979`*^6"}], ",", 
   RowBox[{"1713484800000", "\[Rule]", "4.99`*^6"}], ",", 
   RowBox[{"1713571200000", "\[Rule]", "5.02`*^6"}], ",", 
   RowBox[{"1713657600000", "\[Rule]", "4.994`*^6"}], ",", 
   RowBox[{"1713744000000", "\[Rule]", "5.247`*^6"}], ",", 
   RowBox[{"1713830400000", "\[Rule]", "5.019`*^6"}], ",", 
   RowBox[{"1713916800000", "\[Rule]", "5.015`*^6"}], ",", 
   RowBox[{"1714003200000", "\[Rule]", "5.009`*^6"}], ",", 
   RowBox[{"1714089600000", "\[Rule]", "5.018`*^6"}], ",", 
   RowBox[{"1714176000000", "\[Rule]", "5.041`*^6"}], ",", 
   RowBox[{"1714262400000", "\[Rule]", "5.057`*^6"}], ",", 
   RowBox[{"1714348800000", "\[Rule]", "5.124`*^6"}], ",", 
   RowBox[{"1714435200000", "\[Rule]", "5.088`*^6"}], ",", 
   RowBox[{"1714521600000", "\[Rule]", "5.07`*^6"}], ",", 
   RowBox[{"1714608000000", "\[Rule]", "4.999`*^6"}], ",", 
   RowBox[{"1714694400000", "\[Rule]", "4.945`*^6"}], ",", 
   RowBox[{"1714780800000", "\[Rule]", "4.927`*^6"}], ",", 
   RowBox[{"1714867200000", "\[Rule]", "4.967`*^6"}], ",", 
   RowBox[{"1714953600000", "\[Rule]", "4.967`*^6"}], ",", 
   RowBox[{"1715040000000", "\[Rule]", "4.955`*^6"}], ",", 
   RowBox[{"1715126400000", "\[Rule]", "4.951`*^6"}], ",", 
   RowBox[{"1715212800000", "\[Rule]", "4.942`*^6"}], ",", 
   RowBox[{"1715299200000", "\[Rule]", "4.963`*^6"}], ",", 
   RowBox[{"1715385600000", "\[Rule]", "4.992`*^6"}], ",", 
   RowBox[{"1715472000000", "\[Rule]", "4.979`*^6"}], ",", 
   RowBox[{"1715558400000", "\[Rule]", "5.`*^6"}], ",", 
   RowBox[{"1715644800000", "\[Rule]", "4.999`*^6"}], ",", 
   RowBox[{"1715731200000", "\[Rule]", "5.025`*^6"}], ",", 
   RowBox[{"1715817600000", "\[Rule]", "4.998`*^6"}], ",", 
   RowBox[{"1715904000000", "\[Rule]", "5.002`*^6"}], ",", 
   RowBox[{"1715990400000", "\[Rule]", "5.008`*^6"}], ",", 
   RowBox[{"1716076800000", "\[Rule]", "5.011`*^6"}], ",", 
   RowBox[{"1716163200000", "\[Rule]", "5.021`*^6"}], ",", 
   RowBox[{"1716249600000", "\[Rule]", "5.071`*^6"}], ",", 
   RowBox[{"1716336000000", "\[Rule]", "5.076`*^6"}], ",", 
   RowBox[{"1716422400000", "\[Rule]", "5.12`*^6"}], ",", 
   RowBox[{"1716508800000", "\[Rule]", "5.085`*^6"}], ",", 
   RowBox[{"1716595200000", "\[Rule]", "5.077`*^6"}], ",", 
   RowBox[{"1716681600000", "\[Rule]", "5.093`*^6"}], ",", 
   RowBox[{"1716768000000", "\[Rule]", "5.139`*^6"}], ",", 
   RowBox[{"1716854400000", "\[Rule]", "5.103`*^6"}], ",", 
   RowBox[{"1716940800000", "\[Rule]", "5.064`*^6"}], ",", 
   RowBox[{"1717027200000", "\[Rule]", "5.073`*^6"}], ",", 
   RowBox[{"1717113600000", "\[Rule]", "5.05`*^6"}], ",", 
   RowBox[{"1717200000000", "\[Rule]", "5.05`*^6"}], ",", 
   RowBox[{"1717286400000", "\[Rule]", "5.087`*^6"}], ",", 
   RowBox[{"1717372800000", "\[Rule]", "5.102`*^6"}], ",", 
   RowBox[{"1717459200000", "\[Rule]", "5.11`*^6"}], ",", 
   RowBox[{"1717545600000", "\[Rule]", "5.127`*^6"}], ",", 
   RowBox[{"1717632000000", "\[Rule]", "5.103`*^6"}], ",", 
   RowBox[{"1717718400000", "\[Rule]", "5.112`*^6"}], ",", 
   RowBox[{"1717804800000", "\[Rule]", "5.12`*^6"}], ",", 
   RowBox[{"1717891200000", "\[Rule]", "5.183`*^6"}], ",", 
   RowBox[{"1717977600000", "\[Rule]", "5.174`*^6"}], ",", 
   RowBox[{"1718064000000", "\[Rule]", "5.16`*^6"}], ",", 
   RowBox[{"1718150400000", "\[Rule]", "5.088`*^6"}], ",", 
   RowBox[{"1718236800000", "\[Rule]", "5.`*^6"}], ",", 
   RowBox[{"1718323200000", "\[Rule]", "4.948`*^6"}], ",", 
   RowBox[{"1718409600000", "\[Rule]", "4.958`*^6"}], ",", 
   RowBox[{"1718496000000", "\[Rule]", "4.963`*^6"}], ",", 
   RowBox[{"1718582400000", "\[Rule]", "4.982`*^6"}], ",", 
   RowBox[{"1718668800000", "\[Rule]", "5.03`*^6"}], ",", 
   RowBox[{"1718755200000", "\[Rule]", "5.015`*^6"}], ",", 
   RowBox[{"1718841600000", "\[Rule]", "5.049`*^6"}], ",", 
   RowBox[{"1718928000000", "\[Rule]", "5.092`*^6"}], ",", 
   RowBox[{"1719014400000", "\[Rule]", "5.072`*^6"}], ",", 
   RowBox[{"1719100800000", "\[Rule]", "5.077`*^6"}], ",", 
   RowBox[{"1719187200000", "\[Rule]", "5.001`*^6"}], ",", 
   RowBox[{"1719273600000", "\[Rule]", "5.005`*^6"}], ",", 
   RowBox[{"1719360000000", "\[Rule]", "5.016`*^6"}], ",", 
   RowBox[{"1719446400000", "\[Rule]", "5.187`*^6"}], ",", 
   RowBox[{"1719532800000", "\[Rule]", "5.111`*^6"}], ",", 
   RowBox[{"1719619200000", "\[Rule]", "5.157`*^6"}], ",", 
   RowBox[{"1719705600000", "\[Rule]", "5.174`*^6"}], ",", 
   RowBox[{"1719792000000", "\[Rule]", "5.2`*^6"}], ",", 
   RowBox[{"1719878400000", "\[Rule]", "5.061`*^6"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9290418684928417`*^9, 3.929041877896534*^9}},
 CellLabel->
  "Out[1765]=",ExpressionUUID->"e5efde3d-77e9-734f-9e1e-7bbf92f08dbc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dataFromFuncIDIndex", "[", "i_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"typeID", ",", "FullData"}], "}"}], ",", 
     RowBox[{
      RowBox[{"typeID", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "44992", ",", "33697", ",", "21587", ",", "23153", ",", "23154", ",",
           "23155", ",", "23156", ",", "23157", ",", "23163", ",", "20110", 
          ",", "21073", ",", "21568"}], "}"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"FullData", "=", 
       RowBox[{"Import", "[", 
        RowBox[{
        "\"\<https://evetycoon.com/api/v1/market/history/10000002/\>\"", "<>", 
         RowBox[{"ToString", "[", "typeID", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Values", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "->", 
         RowBox[{"Values", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "4", "]"}], "]"}], "]"}]}], "&"}], "/@", 
       "FullData"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Standardize", "[", 
    RowBox[{
     RowBox[{"dataFromFuncIDIndex", "[", "1", "]"}], "//", "Values"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", "data", "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "data", "]"}]}], "Input",
 CellChangeTimes->{{3.9290426294470215`*^9, 3.9290426409278297`*^9}, {
  3.9290428043940983`*^9, 3.9290428061152477`*^9}, {3.929042930350067*^9, 
  3.929042933776621*^9}, {3.9290430312971764`*^9, 3.929043032842455*^9}},
 CellLabel->
  "In[2010]:=",ExpressionUUID->"fa6f5996-3067-994a-b26e-c99d4842e326"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.15320194268996992`"}], ",", 
   RowBox[{"-", "0.16712608896499861`"}], ",", 
   RowBox[{"-", "0.17359259243268968`"}], ",", 
   RowBox[{"-", "0.153319566583304`"}], ",", 
   RowBox[{"-", "0.16584007627826652`"}], ",", 
   RowBox[{"-", "0.16318128516207084`"}], ",", 
   RowBox[{"-", "0.15825127893437715`"}], ",", 
   RowBox[{"-", "0.16285682586042827`"}], ",", 
   RowBox[{"-", "0.17274047749350696`"}], ",", 
   RowBox[{"-", "0.19112128430927053`"}], ",", 
   RowBox[{"-", "0.18202827786379064`"}], ",", 
   RowBox[{"-", "0.0814757465827409`"}], ",", 
   RowBox[{"-", "0.1850719329388496`"}], ",", 
   RowBox[{"-", "0.19006878369987237`"}], ",", 
   RowBox[{"-", "0.1924693979146186`"}], ",", 
   RowBox[{"-", "0.210505903115217`"}], ",", 
   RowBox[{"-", "0.21840445554133395`"}], ",", 
   RowBox[{"-", "0.21870819481280193`"}], ",", 
   RowBox[{"-", "0.22005535180561864`"}], ",", 
   RowBox[{"-", "0.24010476701046218`"}], ",", 
   RowBox[{"-", "0.23024376835658955`"}], ",", 
   RowBox[{"-", "0.24500715968056927`"}], ",", 
   RowBox[{"-", "0.2611906768232885`"}], ",", 
   RowBox[{"-", "0.27541149132664616`"}], ",", 
   RowBox[{"-", "0.24700915246758254`"}], ",", 
   RowBox[{"-", "0.27166409487450793`"}], ",", 
   RowBox[{"-", "0.1760314415627085`"}], ",", 
   RowBox[{"-", "0.32097403886026654`"}], ",", 
   RowBox[{"-", "0.4066253674410099`"}], ",", 
   RowBox[{"-", "0.3683115562895996`"}], ",", 
   RowBox[{"-", "0.32738431915231453`"}], ",", 
   RowBox[{"-", "0.34543449306391816`"}], ",", 
   RowBox[{"-", "0.31515447173690553`"}], ",", 
   RowBox[{"-", "0.3137717622886958`"}], ",", 
   RowBox[{"-", "0.31997303753576756`"}], ",", 
   RowBox[{"-", "0.33772354517564757`"}], ",", 
   RowBox[{"-", "0.34227551193799577`"}], ",", 
   RowBox[{"-", "0.3485165112600531`"}], ",", 
   RowBox[{"-", "0.31110217229908704`"}], ",", 
   RowBox[{"-", "0.25815282059532263`"}], ",", 
   RowBox[{"-", "0.26160284861820793`"}], ",", 
   RowBox[{"-", "0.3042086153013341`"}], ",", 
   RowBox[{"-", "0.3134730033195785`"}], ",", 
   RowBox[{"-", "0.3298399533805516`"}], ",", 
   RowBox[{"-", "0.35238442116708735`"}], ",", 
   RowBox[{"-", "0.3702839532600712`"}], ",", 
   RowBox[{"-", "0.3770877366097129`"}], ",", 
   RowBox[{"-", "0.38005718024875784`"}], ",", 
   RowBox[{"-", "0.4095741009118649`"}], ",", 
   RowBox[{"-", "0.41505534278288136`"}], ",", 
   RowBox[{"-", "0.44819363359369835`"}], ",", 
   RowBox[{"-", "0.45223704738316506`"}], ",", 
   RowBox[{"-", "0.43931784722657624`"}], ",", 
   RowBox[{"-", "0.4095346529724555`"}], ",", 
   RowBox[{"-", "0.22237587684137844`"}], ",", 
   RowBox[{"-", "0.21123977285602002`"}], ",", 
   RowBox[{"-", "0.25065413220702937`"}], ",", 
   RowBox[{"-", "0.3406979987029976`"}], ",", 
   RowBox[{"-", "0.36822181222744316`"}], ",", 
   RowBox[{"-", "0.3702839532600712`"}], ",", 
   RowBox[{"-", "0.3899477648571876`"}], ",", 
   RowBox[{"-", "0.40963327282097906`"}], ",", 
   RowBox[{"-", "0.43318169066548484`"}], ",", 
   RowBox[{"-", "0.4195820431400377`"}], ",", 
   RowBox[{"-", "0.4202783091325988`"}], ",", 
   RowBox[{"-", "0.4272842533097292`"}], ",", 
   RowBox[{"-", "0.43399232609637894`"}], ",", 
   RowBox[{"-", "0.4195938676598759`"}], ",", 
   RowBox[{"-", "0.41466285550972726`"}], ",", 
   RowBox[{"-", "0.418402530027726`"}], ",", 
   RowBox[{"-", "0.4176313326742567`"}], ",", 
   RowBox[{"-", "0.42777240183595117`"}], ",", 
   RowBox[{"-", "0.4195938380739211`"}], ",", 
   RowBox[{"-", "0.4245238640255845`"}], ",", 
   RowBox[{"-", "0.4273792044998875`"}], ",", 
   RowBox[{"-", "0.4223529847479746`"}], ",", 
   RowBox[{"-", "0.4253119056491817`"}], ",", 
   RowBox[{"-", "0.4263986470699874`"}], ",", 
   RowBox[{"-", "0.4284302356735429`"}], ",", 
   RowBox[{"-", "0.4231935019929711`"}], ",", 
   RowBox[{"-", "0.41559977365665557`"}], ",", 
   RowBox[{"-", "0.4176214805513889`"}], ",", 
   RowBox[{"-", "0.4120790450643638`"}], ",", 
   RowBox[{"-", "0.40768355841566795`"}], ",", 
   RowBox[{"-", "0.3940127665314962`"}], ",", 
   RowBox[{"-", "0.340695444448921`"}], ",", 
   RowBox[{"-", "0.34660427239718095`"}], ",", 
   RowBox[{"-", "0.34443569096204124`"}], ",", 
   RowBox[{"-", "0.3308340315916847`"}], ",", 
   RowBox[{"-", "0.3237334123599716`"}], ",", 
   RowBox[{"-", "0.3256574856046666`"}], ",", 
   RowBox[{"-", "0.32442572369660716`"}], ",", 
   RowBox[{"-", "0.3401003624209447`"}], ",", 
   RowBox[{"-", "0.34048103503624577`"}], ",", 
   RowBox[{"-", "0.3411417880213537`"}], ",", 
   RowBox[{"-", "0.3495244751458579`"}], ",", 
   RowBox[{"-", "0.3347512119750412`"}], ",", 
   RowBox[{"-", "0.34464279264394077`"}], ",", 
   RowBox[{"-", "0.3522313138522545`"}], ",", 
   RowBox[{"-", "0.35644758851221314`"}], ",", 
   RowBox[{"-", "0.3619013746174003`"}], ",", 
   RowBox[{"-", "0.36422868469873887`"}], ",", 
   RowBox[{"-", "0.35746327433215735`"}], ",", 
   RowBox[{"-", "0.3209690881438711`"}], ",", 
   RowBox[{"-", "0.34019996846795353`"}], ",", 
   RowBox[{"-", "0.3455855983958262`"}], ",", 
   RowBox[{"-", "0.33605300383753706`"}], ",", 
   RowBox[{"-", "0.3445836207348266`"}], ",", 
   RowBox[{"-", "0.34253232788553617`"}], ",", 
   RowBox[{"-", "0.33575714429196635`"}], ",", 
   RowBox[{"-", "0.33762006336859207`"}], ",", 
   RowBox[{"-", "0.33625616072549563`"}], ",", 
   RowBox[{"-", "0.3403992791818198`"}], ",", 
   RowBox[{"-", "0.3638529332138789`"}], ",", 
   RowBox[{"-", "0.374218885216162`"}], ",", 
   RowBox[{"-", "0.27158520885767373`"}], ",", 
   RowBox[{"-", "0.3258991042335494`"}], ",", 
   RowBox[{"-", "0.33471571869155736`"}], ",", 
   RowBox[{"-", "0.3347216358824687`"}], ",", 
   RowBox[{"-", "0.41947453764316234`"}], ",", 
   RowBox[{"-", "0.429431779407209`"}], ",", 
   RowBox[{"-", "0.434376992815545`"}], ",", 
   RowBox[{"-", "0.4260963969582324`"}], ",", 
   RowBox[{"-", "0.4136766866104458`"}], ",", 
   RowBox[{"-", "0.39739948061162916`"}], ",", 
   RowBox[{"-", "0.402769331363738`"}], ",", 
   RowBox[{"-", "0.4214143802016361`"}], ",", 
   RowBox[{"-", "0.4193453555035811`"}], ",", 
   RowBox[{"-", "0.41560766324453746`"}], ",", 
   RowBox[{"-", "0.3997097393211575`"}], ",", 
   RowBox[{"-", "0.3929349600689667`"}], ",", 
   RowBox[{"-", "0.4008561063023806`"}], ",", 
   RowBox[{"-", "0.39888370933190903`"}], ",", 
   RowBox[{"-", "0.3998699078171448`"}], ",", 
   RowBox[{"-", "0.407759446389107`"}], ",", 
   RowBox[{"-", "0.4136765781286126`"}], ",", 
   RowBox[{"-", "0.4186076790366247`"}], ",", 
   RowBox[{"-", "0.42353867146280366`"}], ",", 
   RowBox[{"-", "0.43340065631516156`"}], ",", 
   RowBox[{"-", "0.4432626411675194`"}], ",", 
   RowBox[{"-", "0.46791760329841403`"}], ",", 
   RowBox[{"-", "0.5172275275602034`"}], ",", 
   RowBox[{"-", "0.4945449623997803`"}], ",", 
   RowBox[{"-", "0.4689038017836498`"}], ",", 
   RowBox[{"-", "0.4689038017836498`"}], ",", 
   RowBox[{"-", "0.4827105805769508`"}], ",", 
   RowBox[{"-", "0.4836967790621866`"}], ",", 
   RowBox[{"-", "0.4925725654293087`"}], ",", 
   RowBox[{"-", "0.5251171154420896`"}], ",", 
   RowBox[{"-", "0.519199924530675`"}], ",", 
   RowBox[{"-", "0.5438548866615696`"}], ",", 
   RowBox[{"-", "0.5616064593958138`"}], ",", 
   RowBox[{"-", "0.6040129942609526`"}], ",", 
   RowBox[{"-", "0.7026328427845312`"}], ",", 
   RowBox[{"-", "0.7154534230925964`"}], ",", 
   RowBox[{"-", "0.6582539109489208`"}], ",", 
   RowBox[{"-", "0.6395161397294409`"}], ",", 
   RowBox[{"-", "0.6543091170079777`"}], ",", 
   RowBox[{"-", "0.7006604458140596`"}], ",", 
   RowBox[{"-", "0.7124948276368891`"}], ",", 
   RowBox[{"-", "0.7282740034006616`"}], ",", 
   RowBox[{"-", "0.4836967790621866`"}], ",", 
   RowBox[{"-", "0.44622123662322677`"}], ",", 
   RowBox[{"-", "0.5428686881763338`"}], ",", 
   RowBox[{"-", "0.6454333306408556`"}], ",", 
   RowBox[{"-", "0.6671296973160429`"}], ",", 
   RowBox[{"-", "0.7440531791644343`"}], ",", 
   RowBox[{"-", "0.8357696382913623`"}], ",", 
   RowBox[{"-", "0.8732451807303222`"}], ",", 
   RowBox[{"-", "0.892969150435038`"}], ",", 
   RowBox[{"-", "0.8969139443759812`"}], ",", 
   RowBox[{"-", "0.8683141883041433`"}], ",", 
   RowBox[{"-", "0.8347834398061266`"}], ",", 
   RowBox[{"-", "0.8180180655571182`"}], ",", 
   RowBox[{"-", "0.8456316231437202`"}], ",", 
   RowBox[{"-", "0.8831071655826801`"}], ",", 
   RowBox[{"-", "0.9314308913592336`"}], ",", 
   RowBox[{"-", "0.9403066777263557`"}], ",", 
   RowBox[{"-", "0.9521410595491852`"}], ",", 
   RowBox[{"-", "0.9679202353129577`"}], ",", 
   RowBox[{"-", "1.003423380781446`"}], ",", 
   RowBox[{"-", "1.031036938368048`"}], ",", 
   RowBox[{"-", "1.0379403277646986`"}], ",", 
   RowBox[{"-", "1.0182163580599828`"}], ",", 
   RowBox[{"-", "1.0280783429123408`"}], ",", 
   RowBox[{"-", "1.0359679307942269`"}], ",", 
   RowBox[{"-", "1.003423380781446`"}], ",", 
   RowBox[{"-", "1.017230159574747`"}], ",", 
   RowBox[{"-", "1.0192025565452185`"}], ",", 
   RowBox[{"-", "1.0320231368532837`"}], ",", 
   RowBox[{"-", "1.0606228929251216`"}], ",", 
   RowBox[{"-", "1.054705702013707`"}], ",", 
   RowBox[{"-", "1.0330093353385197`"}], ",", 
   RowBox[{"-", "1.0468161141318206`"}], ",", 
   RowBox[{"-", "1.063581488380829`"}], ",", 
   RowBox[{"-", "1.0842916565707805`"}], ",", 
   RowBox[{"-", "1.0754158702036585`"}], ",", 
   RowBox[{"-", "1.109932817186911`"}], ",", 
   RowBox[{"-", "1.1444497641701634`"}], ",", 
   RowBox[{"-", "1.1582565429634646`"}], ",", 
   RowBox[{"-", "1.1414911687144562`"}], ",", 
   RowBox[{"-", "1.13360158083257`"}], ",", 
   RowBox[{"-", "1.1197948020392687`"}], ",", 
   RowBox[{"-", "1.1119052141573824`"}], ",", 
   RowBox[{"-", "1.1316291838620982`"}], ",", 
   RowBox[{"-", "1.1286705884063908`"}], ",", 
   RowBox[{"-", "1.0024371822962101`"}], ",", 
   RowBox[{"-", "0.8081560807047603`"}], ",", 
   RowBox[{"-", "0.9393204792411199`"}], ",", 
   RowBox[{"-", "0.9639754413720146`"}], ",", 
   RowBox[{"-", "1.0941536414231383`"}], ",", 
   RowBox[{"-", "1.1178224050687973`"}], ",", 
   RowBox[{"-", "1.1040156262754963`"}], ",", 
   RowBox[{"-", "1.0842916565707805`"}], ",", 
   RowBox[{"-", "1.0793606641446016`"}], ",", 
   RowBox[{"-", "1.068512480807008`"}], ",", 
   RowBox[{"-", "1.068512480807008`"}], ",", 
   RowBox[{"-", "1.0793606641446016`"}], ",", 
   RowBox[{"-", "1.0892226489969594`"}], ",", 
   RowBox[{"-", "1.0941536414231383`"}], ",", 
   RowBox[{"-", "1.0655538853513005`"}], ",", 
   RowBox[{"-", "1.0655538853513005`"}], ",", 
   RowBox[{"-", "1.0576642974694144`"}], ",", 
   RowBox[{"-", "1.0527333050432353`"}], ",", 
   RowBox[{"-", "0.9077621277135748`"}], ",", 
   RowBox[{"-", "0.8614107989074928`"}], ",", 
   RowBox[{"-", "0.8564798064813138`"}], ",", 
   RowBox[{"-", "0.9994785868405028`"}], ",", 
   RowBox[{"-", "1.0014509838109744`"}], ",", 
   RowBox[{"-", "1.03991272473517`"}], ",", 
   RowBox[{"-", "1.0300507398828123`"}], ",", 
   RowBox[{"-", "1.0280783429123408`"}], ",", 
   RowBox[{"-", "1.0438575186761132`"}], ",", 
   RowBox[{"-", "1.0438575186761132`"}], ",", 
   RowBox[{"-", "1.0478023126170564`"}], ",", 
   RowBox[{"-", "1.0606228929251216`"}], ",", 
   RowBox[{"-", "1.0527333050432353`"}], ",", 
   RowBox[{"-", "1.0556919004989427`"}], ",", 
   RowBox[{"-", "1.0606228929251216`"}], ",", 
   RowBox[{"-", "1.0566780989841784`"}], ",", 
   RowBox[{"-", "1.0665400838365364`"}], ",", 
   RowBox[{"-", "1.0596366944398858`"}], ",", 
   RowBox[{"-", "1.087250252026488`"}], ",", 
   RowBox[{"-", "1.0990846338493172`"}], ",", 
   RowBox[{"-", "1.1000708323345532`"}], ",", 
   RowBox[{"-", "1.1069742217312035`"}], ",", 
   RowBox[{"-", "1.1306429853768625`"}], ",", 
   RowBox[{"-", "1.1582565429634646`"}], ",", 
   RowBox[{"-", "1.132615382347334`"}], ",", 
   RowBox[{"-", "1.1493807565963423`"}], ",", 
   RowBox[{"-", "1.146422161140635`"}], ",", 
   RowBox[{"-", "1.132615382347334`"}], ",", 
   RowBox[{"-", "1.1296567868916267`"}], ",", 
   RowBox[{"-", "1.1227533974949762`"}], ",", 
   RowBox[{"-", "1.1207810005245047`"}], ",", 
   RowBox[{"-", "1.123739595980212`"}], ",", 
   RowBox[{"-", "1.1197948020392687`"}], ",", 
   RowBox[{"-", "1.1197948020392687`"}], ",", 
   RowBox[{"-", "1.1296567868916267`"}], ",", 
   RowBox[{"-", "1.1296567868916267`"}], ",", 
   RowBox[{"-", "1.1266981914359193`"}], ",", 
   RowBox[{"-", "1.1247257944654478`"}], ",", 
   RowBox[{"-", "1.1148638096130898`"}], ",", 
   RowBox[{"-", "1.1178224050687973`"}], ",", 
   RowBox[{"-", "1.1148638096130898`"}], ",", 
   RowBox[{"-", "1.1178224050687973`"}], ",", 
   RowBox[{"-", "1.118808603554033`"}], ",", 
   RowBox[{"-", "1.1158500080983256`"}], ",", 
   RowBox[{"-", "1.1158500080983256`"}], ",", 
   RowBox[{"-", "1.109932817186911`"}], ",", 
   RowBox[{"-", "1.113877611127854`"}], ",", 
   RowBox[{"-", "1.1059880232459678`"}], ",", 
   RowBox[{"-", "1.1069742217312035`"}], ",", 
   RowBox[{"-", "1.1148638096130898`"}], ",", 
   RowBox[{"-", "1.118808603554033`"}], ",", 
   RowBox[{"-", "1.113877611127854`"}], ",", 
   RowBox[{"-", "1.109932817186911`"}], ",", 
   RowBox[{"-", "1.1148638096130898`"}], ",", 
   RowBox[{"-", "1.109932817186911`"}], ",", 
   RowBox[{"-", "1.1148638096130898`"}], ",", 
   RowBox[{"-", "1.1109190156721467`"}], ",", 
   RowBox[{"-", "1.1109190156721467`"}], ",", 
   RowBox[{"-", "1.095139839908374`"}], ",", 
   RowBox[{"-", "1.1020432293050246`"}], ",", 
   RowBox[{"-", "1.0971122368788457`"}], ",", 
   RowBox[{"-", "1.0793606641446016`"}], ",", 
   RowBox[{"-", "1.087250252026488`"}], ",", 
   RowBox[{"-", "1.07738826717413`"}], ",", 
   RowBox[{"-", "1.0764020686888942`"}], ",", 
   RowBox[{"-", "1.0694986792922436`"}], ",", 
   RowBox[{"-", "1.0675262823217722`"}], ",", 
   RowBox[{"-", "1.0665400838365364`"}], ",", 
   RowBox[{"-", "1.05865049595465`"}], ",", 
   RowBox[{"-", "1.054705702013707`"}], ",", 
   RowBox[{"-", "1.0625952898955933`"}], ",", 
   RowBox[{"-", "1.0665400838365364`"}], ",", 
   RowBox[{"-", "1.0566780989841784`"}], ",", 
   RowBox[{"-", "1.0537195035284712`"}], ",", 
   RowBox[{"-", "1.040898923220406`"}], ",", 
   RowBox[{"-", "1.0290645413975765`"}], ",", 
   RowBox[{"-", "1.0142715641190396`"}], ",", 
   RowBox[{"-", "0.8150594701014109`"}], ",", 
   RowBox[{"-", "0.8831071655826801`"}], ",", 
   RowBox[{"-", "0.8850795625531517`"}], ",", 
   RowBox[{"-", "0.9797546171357872`"}], ",", 
   RowBox[{"-", "0.9965199913847955`"}], ",", 
   RowBox[{"-", "0.9807408156210229`"}], ",", 
   RowBox[{"-", "0.9836994110767303`"}], ",", 
   RowBox[{"-", "0.9856718080472019`"}], ",", 
   RowBox[{"-", "0.9886304035029092`"}], ",", 
   RowBox[{"-", "0.9984923883552671`"}], ",", 
   RowBox[{"-", "0.9935613959290882`"}], ",", 
   RowBox[{"-", "0.9965199913847955`"}], ",", 
   RowBox[{"-", "1.0014509838109744`"}], ",", 
   RowBox[{"-", "1.0093405716928607`"}], ",", 
   RowBox[{"-", "1.0113129686633324`"}], ",", 
   RowBox[{"-", "1.0113129686633324`"}], ",", 
   RowBox[{"-", "0.9994785868405028`"}], ",", 
   RowBox[{"-", "0.9945475944143239`"}], ",", 
   RowBox[{"-", "0.9856718080472019`"}], ",", 
   RowBox[{"-", "0.9965199913847955`"}], ",", 
   RowBox[{"-", "0.9994785868405028`"}], ",", 
   RowBox[{"-", "1.0004647853257387`"}], ",", 
   RowBox[{"-", "1.0044095792666818`"}], ",", 
   RowBox[{"-", "1.003423380781446`"}], ",", 
   RowBox[{"-", "0.9886304035029092`"}], ",", 
   RowBox[{"-", "0.9994785868405028`"}], ",", 
   RowBox[{"-", "1.0044095792666818`"}], ",", 
   RowBox[{"-", "1.0014509838109744`"}], ",", 
   RowBox[{"-", "1.0044095792666818`"}], ",", 
   RowBox[{"-", "1.0004647853257387`"}], ",", 
   RowBox[{"-", "1.0044095792666818`"}], ",", 
   RowBox[{"-", "0.9984923883552671`"}], ",", 
   RowBox[{"-", "0.9975061898700313`"}], ",", 
   RowBox[{"-", "0.9935613959290882`"}], ",", 
   RowBox[{"-", "0.9965199913847955`"}], ",", 
   RowBox[{"-", "0.9866580065324376`"}], ",", 
   RowBox[{"-", "0.9856718080472019`"}], ",", 
   RowBox[{"-", "0.9777822201653156`"}], ",", 
   RowBox[{"-", "0.9521410595491852`"}], ",", 
   RowBox[{"-", "0.9422790746968273`"}], ",", 
   RowBox[{"-", "0.8870519595236233`"}], ",", 
   RowBox[{"-", "0.8515488140551349`"}], ",", 
   RowBox[{"-", "0.8268938519242403`"}], ",", 
   RowBox[{"-", "0.892969150435038`"}], ",", 
   RowBox[{"-", "0.9245275019625832`"}], ",", 
   RowBox[{"-", "0.92058270802164`"}], ",", 
   RowBox[{"-", "0.9235413034773473`"}], ",", 
   RowBox[{"-", "0.9146655171102253`"}], ",", 
   RowBox[{"-", "0.9166379140806968`"}], ",", 
   RowBox[{"-", "0.9136793186249895`"}], ",", 
   RowBox[{"-", "0.915651715595461`"}], ",", 
   RowBox[{"-", "0.9195965095364041`"}], ",", 
   RowBox[{"-", "0.9186103110511684`"}], ",", 
   RowBox[{"-", "0.9057897307431032`"}], ",", 
   RowBox[{"-", "0.9126931201397537`"}], ",", 
   RowBox[{"-", "0.9117069216545179`"}], ",", 
   RowBox[{"-", "0.8998725398316885`"}], ",", 
   RowBox[{"-", "0.9067759292283389`"}], ",", 
   RowBox[{"-", "0.9057897307431032`"}], ",", 
   RowBox[{"-", "0.9077621277135748`"}], ",", 
   RowBox[{"-", "0.9028311352873958`"}], ",", 
   RowBox[{"-", "0.9038173337726316`"}], ",", 
   RowBox[{"-", "0.9067759292283389`"}], ",", 
   RowBox[{"-", "0.8998725398316885`"}], ",", 
   RowBox[{"-", "0.9255137004478189`"}], ",", 
   RowBox[{"-", "0.9215689065068757`"}], ",", 
   RowBox[{"-", "0.9195965095364041`"}], ",", 
   RowBox[{"-", "0.9166379140806968`"}], ",", 
   RowBox[{"-", "0.9067759292283389`"}], ",", 
   RowBox[{"-", "0.915651715595461`"}], ",", 
   RowBox[{"-", "0.9186103110511684`"}], ",", 
   RowBox[{"-", "0.92058270802164`"}], ",", 
   RowBox[{"-", "0.9195965095364041`"}], ",", 
   RowBox[{"-", "0.915651715595461`"}], ",", 
   RowBox[{"-", "0.9126931201397537`"}], ",", 
   RowBox[{"-", "0.9126931201397537`"}], ",", 
   RowBox[{"-", "0.9038173337726316`"}], ",", 
   RowBox[{"-", "0.9097345246840464`"}], ",", 
   RowBox[{"-", "0.9107207231692821`"}], ",", 
   RowBox[{"-", "0.9126931201397537`"}], ",", 
   RowBox[{"-", "0.9087483261988105`"}], ",", 
   RowBox[{"-", "0.9067759292283389`"}], ",", 
   RowBox[{"-", "0.8949415474055096`"}], ",", 
   RowBox[{"-", "0.892969150435038`"}], ",", 
   RowBox[{"-", "0.8969139443759812`"}], ",", 
   RowBox[{"-", "0.9038173337726316`"}], ",", 
   RowBox[{"-", "0.8959277458907453`"}], ",", 
   RowBox[{"-", "0.8870519595236233`"}], ",", 
   RowBox[{"-", "0.8623969973927286`"}], ",", 
   RowBox[{"-", "0.865355592848436`"}], ",", 
   RowBox[{"-", "0.9817270141062587`"}], ",", 
   RowBox[{"-", "0.9718650292539008`"}], ",", 
   RowBox[{"-", "0.9245275019625832`"}], ",", 
   RowBox[{"-", "0.9264998989330547`"}], ",", 
   RowBox[{"-", "0.90184493680216`"}], ",", 
   RowBox[{"-", "0.9048035322578674`"}], ",", 
   RowBox[{"-", "0.9166379140806968`"}], ",", 
   RowBox[{"-", "0.9166379140806968`"}], ",", 
   RowBox[{"-", "0.9215689065068757`"}], ",", 
   RowBox[{"-", "0.9264998989330547`"}], ",", 
   RowBox[{"-", "0.9304446928739979`"}], ",", 
   RowBox[{"-", "0.9245275019625832`"}], ",", 
   RowBox[{"-", "0.929458494388762`"}], ",", 
   RowBox[{"-", "0.9324170898444694`"}], ",", 
   RowBox[{"-", "0.915651715595461`"}], ",", 
   RowBox[{"-", "0.9334032883297052`"}], ",", 
   RowBox[{"-", "0.9403066777263557`"}], ",", 
   RowBox[{"-", "0.9383342807558841`"}], ",", 
   RowBox[{"-", "0.9403066777263557`"}], ",", 
   RowBox[{"-", "0.948196265608242`"}], ",", 
   RowBox[{"-", "0.9462238686377704`"}], ",", 
   RowBox[{"-", "0.9511548610639493`"}], ",", 
   RowBox[{"-", "0.948196265608242`"}], ",", 
   RowBox[{"-", "0.9550996550048925`"}], ",", 
   RowBox[{"-", "0.9698926322834293`"}], ",", 
   RowBox[{"-", "0.9698926322834293`"}], ",", 
   RowBox[{"-", "0.962003044401543`"}], ",", 
   RowBox[{"-", "0.9659478383424861`"}], ",", 
   RowBox[{"-", "0.814073271616175`"}], ",", 
   RowBox[{"-", "0.7953355003966951`"}], ",", 
   RowBox[{"-", "0.8436592261732486`"}], ",", 
   RowBox[{"-", "0.9550996550048925`"}], ",", 
   RowBox[{"-", "0.9610168459163072`"}], ",", 
   RowBox[{"-", "0.9649616398572504`"}], ",", 
   RowBox[{"-", "0.9689064337981935`"}], ",", 
   RowBox[{"-", "0.9738374262243724`"}], ",", 
   RowBox[{"-", "1.0053957777519176`"}], ",", 
   RowBox[{"-", "1.0507609080727638`"}], ",", 
   RowBox[{"-", "1.05865049595465`"}], ",", 
   RowBox[{"-", "1.0517471065579995`"}], ",", 
   RowBox[{"-", "1.0537195035284712`"}], ",", 
   RowBox[{"-", "1.0645676868660647`"}], ",", 
   RowBox[{"-", "1.0694986792922436`"}], ",", 
   RowBox[{"-", "1.07738826717413`"}], ",", 
   RowBox[{"-", "1.1178224050687973`"}], ",", 
   RowBox[{"-", "1.1197948020392687`"}], ",", 
   RowBox[{"-", "1.0980984353640815`"}], ",", 
   RowBox[{"-", "1.109932817186911`"}], ",", 
   RowBox[{"-", "1.0793606641446016`"}], ",", 
   RowBox[{"-", "1.1020432293050246`"}], ",", 
   RowBox[{"-", "1.1089466187016752`"}], ",", 
   RowBox[{"-", "1.1109190156721467`"}], ",", 
   RowBox[{"-", "1.1069742217312035`"}], ",", 
   RowBox[{"-", "1.105001824760732`"}], ",", 
   RowBox[{"-", "1.109932817186911`"}], ",", 
   RowBox[{"-", "1.1089466187016752`"}], ",", 
   RowBox[{"-", "1.1119052141573824`"}], ",", 
   RowBox[{"-", "1.1197948020392687`"}], ",", 
   RowBox[{"-", "1.123739595980212`"}], ",", 
   RowBox[{"-", "1.1286705884063908`"}], ",", 
   RowBox[{"-", "1.1286705884063908`"}], ",", 
   RowBox[{"-", "1.1257119929506836`"}], ",", 
   RowBox[{"-", "1.136560176288277`"}], ",", 
   RowBox[{"-", "1.137546374773513`"}], ",", 
   RowBox[{"-", "1.1385325732587488`"}], ",", 
   RowBox[{"-", "1.1434635656849277`"}], ",", 
   RowBox[{"-", "1.1543117490225214`"}], ",", 
   RowBox[{"-", "1.1345877793178056`"}], ",", 
   RowBox[{"-", "1.1503669550815783`"}], ",", 
   RowBox[{"-", "1.1543117490225214`"}], ",", 
   RowBox[{"-", "1.1631875353896435`"}], ",", 
   RowBox[{"-", "1.1671323293305866`"}], ",", 
   RowBox[{"-", "1.1700909247862938`"}], ",", 
   RowBox[{"-", "1.1710771232715298`"}], ",", 
   RowBox[{"-", "1.1493807565963423`"}], ",", 
   RowBox[{"-", "1.1641737338748792`"}], ",", 
   RowBox[{"-", "1.165159932360115`"}], ",", 
   RowBox[{"-", "1.1681185278158224`"}], ",", 
   RowBox[{"-", "1.1710771232715298`"}], ",", 
   RowBox[{"-", "1.178966711153416`"}], ",", 
   RowBox[{"-", "1.1819253066091233`"}], ",", 
   RowBox[{"-", "1.1947458869171885`"}], ",", 
   RowBox[{"-", "1.1957320854024243`"}], ",", 
   RowBox[{"-", "1.1967182838876602`"}], ",", 
   RowBox[{"-", "1.1986906808581317`"}], ",", 
   RowBox[{"-", "1.1986906808581317`"}], ",", 
   RowBox[{"-", "1.2085526657104897`"}], ",", 
   RowBox[{"-", "1.2006630778286034`"}], ",", 
   RowBox[{"-", "1.1937596884319528`"}], ",", 
   RowBox[{"-", "1.1908010929762454`"}], ",", 
   RowBox[{"-", "1.1878424975205382`"}], ",", 
   RowBox[{"-", "1.188828696005774`"}], ",", 
   RowBox[{"-", "1.206580268740018`"}], ",", 
   RowBox[{"-", "1.2460282081494494`"}], ",", 
   RowBox[{"-", "1.2726555672508157`"}], ",", 
   RowBox[{"-", "1.2736417657360515`"}], ",", 
   RowBox[{"-", "1.2696969717951083`"}], ",", 
   RowBox[{"-", "1.270683170280344`"}], ",", 
   RowBox[{"-", "1.266738376339401`"}], ",", 
   RowBox[{"-", "1.2647659793689294`"}], ",", 
   RowBox[{"-", "1.276600361191759`"}], ",", 
   RowBox[{"-", "1.285476147558881`"}], ",", 
   RowBox[{"-", "1.2775865596769946`"}], ",", 
   RowBox[{"-", "1.2835037505884093`"}], ",", 
   RowBox[{"-", "1.2894209414998241`"}], ",", 
   RowBox[{"-", "1.2904071399850598`"}], ",", 
   RowBox[{"-", "1.2923795369555313`"}], ",", 
   RowBox[{"-", "1.3061863157488325`"}], ",", 
   RowBox[{"-", "1.3091449112045397`"}], ",", 
   RowBox[{"-", "1.3022415218078893`"}], ",", 
   RowBox[{"-", "1.303227720293125`"}], ",", 
   RowBox[{"-", "1.3160483006011903`"}], ",", 
   RowBox[{"-", "1.3614134309220365`"}], ",", 
   RowBox[{"-", "1.3831097975972237`"}], ",", 
   RowBox[{"-", "1.404806164272411`"}], ",", 
   RowBox[{"-", "1.4067785612428827`"}], ",", 
   RowBox[{"-", "1.4018475688167038`"}], ",", 
   RowBox[{"-", "1.3969165763905247`"}], ",", 
   RowBox[{"-", "1.3663444233482154`"}], ",", 
   RowBox[{"-", "1.3623996294072722`"}], ",", 
   RowBox[{"-", "1.3811374006267523`"}], ",", 
   RowBox[{"-", "1.4077647597281184`"}], ",", 
   RowBox[{"-", "1.4107233551838259`"}], ",", 
   RowBox[{"-", "1.4107233551838259`"}], ",", 
   RowBox[{"-", "1.3979027748757606`"}], ",", 
   RowBox[{"-", "1.387054591538167`"}], ",", 
   RowBox[{"-", "1.4057923627576467`"}], ",", 
   RowBox[{"-", "1.4057923627576467`"}], ",", 
   RowBox[{"-", "1.4087509582133542`"}], ",", 
   RowBox[{"-", "1.3979027748757606`"}], ",", 
   RowBox[{"-", "1.367330621833451`"}], ",", 
   RowBox[{"-", "1.3860683930529312`"}], ",", 
   RowBox[{"-", "1.3693030188039228`"}], ",", 
   RowBox[{"-", "1.3515514460696787`"}], ",", 
   RowBox[{"-", "1.3426756597025564`"}], ",", 
   RowBox[{"-", "1.3071725142340682`"}], ",", 
   RowBox[{"-", "1.3071725142340682`"}], ",", 
   RowBox[{"-", "1.2815313536179378`"}], ",", 
   RowBox[{"-", "1.2470144066346853`"}], ",", 
   RowBox[{"-", "1.2036216732843106`"}], ",", 
   RowBox[{"-", "1.2144698566219043`"}], ",", 
   RowBox[{"-", "1.2223594445037906`"}], ",", 
   RowBox[{"-", "1.2381386202675633`"}], ",", 
   RowBox[{"-", "1.275614162706523`"}], ",", 
   RowBox[{"-", "1.2026354747990748`"}], ",", 
   RowBox[{"-", "1.220387047533319`"}], ",", 
   RowBox[{"-", "1.2410972157232705`"}], ",", 
   RowBox[{"-", "1.2420834142085062`"}], ",", 
   RowBox[{"-", "1.261807383913222`"}], ",", 
   RowBox[{"-", "1.3091449112045397`"}], ",", 
   RowBox[{"-", "1.3101311096897756`"}], ",", 
   RowBox[{"-", "1.3111173081750114`"}], ",", 
   RowBox[{"-", "1.3071725142340682`"}], ",", 
   RowBox[{"-", "1.303227720293125`"}], ",", 
   RowBox[{"-", "1.299282926352182`"}], ",", 
   RowBox[{"-", "1.3022415218078893`"}], ",", 
   RowBox[{"-", "1.3061863157488325`"}], ",", 
   RowBox[{"-", "1.2982967278669462`"}], ",", 
   RowBox[{"-", "1.3091449112045397`"}], ",", 
   RowBox[{"-", "1.3111173081750114`"}], ",", 
   RowBox[{"-", "1.3140759036307188`"}], ",", 
   RowBox[{"-", "1.3012553233226536`"}], ",", 
   RowBox[{"-", "1.2973105293817104`"}], ",", 
   RowBox[{"-", "1.2933657354407673`"}], ",", 
   RowBox[{"-", "1.294351933926003`"}], ",", 
   RowBox[{"-", "1.2282766354152053`"}], ",", 
   RowBox[{"-", "1.2075664672252537`"}], ",", 
   RowBox[{"-", "1.197704482372896`"}], ",", 
   RowBox[{"-", "1.1710771232715298`"}], ",", 
   RowBox[{"-", "1.2105250626809612`"}], ",", 
   RowBox[{"-", "1.266738376339401`"}], ",", 
   RowBox[{"-", "1.2312352308709127`"}], ",", 
   RowBox[{"-", "1.2026354747990748`"}], ",", 
   RowBox[{"-", "1.1878424975205382`"}], ",", 
   RowBox[{"-", "1.2036216732843106`"}], ",", 
   RowBox[{"-", "1.2341938263266201`"}], ",", 
   RowBox[{"-", "1.2420834142085062`"}], ",", 
   RowBox[{"-", "1.261807383913222`"}], ",", 
   RowBox[{"-", "1.2332076278413842`"}], ",", 
   RowBox[{"-", "1.2223594445037906`"}], ",", 
   RowBox[{"-", "1.2263042384447338`"}], ",", 
   RowBox[{"-", "1.2430696126937422`"}], ",", 
   RowBox[{"-", "1.2233456429890264`"}], ",", 
   RowBox[{"-", "1.2272904369299695`"}], ",", 
   RowBox[{"-", "1.1917872914614813`"}], ",", 
   RowBox[{"-", "1.2184146505628475`"}], ",", 
   RowBox[{"-", "1.2164422535923758`"}], ",", 
   RowBox[{"-", "1.206580268740018`"}], ",", 
   RowBox[{"-", "1.211511261166197`"}], ",", 
   RowBox[{"-", "1.2174284520776117`"}], ",", 
   RowBox[{"-", "1.2184146505628475`"}], ",", 
   RowBox[{"-", "1.211511261166197`"}], ",", 
   RowBox[{"-", "1.2036216732843106`"}], ",", 
   RowBox[{"-", "1.1937596884319528`"}], ",", 
   RowBox[{"-", "1.1582565429634646`"}], ",", 
   RowBox[{"-", "1.1681185278158224`"}], ",", 
   RowBox[{"-", "1.1059880232459678`"}], ",", 
   RowBox[{"-", "1.1128914126426184`"}], ",", 
   RowBox[{"-", "1.1059880232459678`"}], ",", 
   RowBox[{"-", "1.137546374773513`"}], ",", 
   RowBox[{"-", "1.13360158083257`"}], ",", 
   RowBox[{"-", "1.1207810005245047`"}], ",", 
   RowBox[{"-", "1.1306429853768625`"}], ",", 
   RowBox[{"-", "1.1257119929506836`"}], ",", 
   RowBox[{"-", "1.1316291838620982`"}], ",", 
   RowBox[{"-", "1.137546374773513`"}], ",", 
   RowBox[{"-", "1.1355739778030414`"}], ",", 
   RowBox[{"-", "1.1286705884063908`"}], ",", 
   RowBox[{"-", "1.118808603554033`"}], ",", 
   RowBox[{"-", "1.109932817186911`"}], ",", 
   RowBox[{"-", "1.1079604202164395`"}], ",", 
   RowBox[{"-", "1.1099328270488955`"}], ",", 
   RowBox[{"-", "1.1000708323345532`"}], ",", 
   RowBox[{"-", "1.0507609080727638`"}], ",", 
   RowBox[{"-", "1.0625952898955933`"}], ",", 
   RowBox[{"-", "1.05865049595465`"}], ",", 
   RowBox[{"-", "1.0448437171613492`"}], ",", 
   RowBox[{"-", "1.040898923220406`"}], ",", 
   RowBox[{"-", "1.0468161141318206`"}], ",", 
   RowBox[{"-", "1.0517471065579995`"}], ",", 
   RowBox[{"-", "1.0093405716928607`"}], ",", 
   RowBox[{"-", "0.9906028004733808`"}], ",", 
   RowBox[{"-", "0.9984923883552671`"}], ",", 
   RowBox[{"-", "0.8870519595236233`"}], ",", 
   RowBox[{"-", "0.9195965095364041`"}], ",", 
   RowBox[{"-", "0.9235413034773473`"}], ",", 
   RowBox[{"-", "0.948196265608242`"}], ",", 
   RowBox[{"-", "0.9629892428867788`"}], ",", 
   RowBox[{"-", "0.9126931201397537`"}], ",", 
   RowBox[{"-", "0.9028311352873958`"}], ",", 
   RowBox[{"-", "0.9146655171102253`"}], ",", 
   RowBox[{"-", "0.9126931201397537`"}], ",", 
   RowBox[{"-", "0.9166379140806968`"}], ",", 
   RowBox[{"-", "0.9264998989330547`"}], ",", 
   RowBox[{"-", "0.9195965095364041`"}], ",", 
   RowBox[{"-", "0.9255137004478189`"}], ",", 
   RowBox[{"-", "0.9452376701525347`"}], ",", 
   RowBox[{"-", "0.9393204792411199`"}], ",", 
   RowBox[{"-", "0.962003044401543`"}], ",", 
   RowBox[{"-", "0.9777822201653156`"}], ",", 
   RowBox[{"-", "0.9935613959290882`"}], ",", 
   RowBox[{"-", "1.0300507398828123`"}], ",", 
   RowBox[{"-", "0.9984923883552671`"}], ",", 
   RowBox[{"-", "0.892969150435038`"}], ",", 
   RowBox[{"-", "0.892969150435038`"}], ",", 
   RowBox[{"-", "0.8919829519498021`"}], ",", 
   RowBox[{"-", "0.892969150435038`"}], ",", 
   RowBox[{"-", "0.9679202353129577`"}], ",", 
   RowBox[{"-", "0.9215689065068757`"}], ",", 
   RowBox[{"-", "0.9166379140806968`"}], ",", 
   RowBox[{"-", "0.9028311352873958`"}], ",", 
   RowBox[{"-", "0.9245275019625832`"}], ",", 
   RowBox[{"-", "0.9314308913592336`"}], ",", 
   RowBox[{"-", "0.9472100671230063`"}], ",", 
   RowBox[{"-", "0.9787684186505514`"}], ",", 
   RowBox[{"-", "0.9856718080472019`"}], ",", 
   RowBox[{"-", "0.975809823194844`"}], ",", 
   RowBox[{"-", "0.9807408156210229`"}], ",", 
   RowBox[{"-", "0.9955337928995598`"}], ",", 
   RowBox[{"-", "0.9955337928995598`"}], ",", 
   RowBox[{"-", "1.0122991671485682`"}], ",", 
   RowBox[{"-", "1.022161152000926`"}], ",", 
   RowBox[{"-", "1.049774709587528`"}], ",", 
   RowBox[{"-", "1.0201887550304545`"}], ",", 
   RowBox[{"-", "1.0359679307942269`"}], ",", 
   RowBox[{"-", "1.045829915646585`"}], ",", 
   RowBox[{"-", "1.0596366944398858`"}], ",", 
   RowBox[{"-", "1.054705702013707`"}], ",", 
   RowBox[{"-", "1.0517471065579995`"}], ",", 
   RowBox[{"-", "1.031036938368048`"}], ",", 
   RowBox[{"-", "1.0192025565452185`"}], ",", 
   RowBox[{"-", "1.0478023126170564`"}], ",", 
   RowBox[{"-", "1.0241335489713976`"}], ",", 
   RowBox[{"-", "1.0211749535156902`"}], ",", 
   RowBox[{"-", "1.0251197474566334`"}], ",", 
   RowBox[{"-", "1.031036938368048`"}], ",", 
   RowBox[{"-", "1.0320231368532837`"}], ",", 
   RowBox[{"-", "1.0320231368532837`"}], ",", 
   RowBox[{"-", "1.0241335489713976`"}], ",", 
   RowBox[{"-", "1.0231473504861617`"}], ",", 
   RowBox[{"-", "1.0201887550304545`"}], ",", 
   RowBox[{"-", "1.026105945941869`"}], ",", 
   RowBox[{"-", "1.0211749535156902`"}], ",", 
   RowBox[{"-", "1.0192025565452185`"}], ",", 
   RowBox[{"-", "1.013285365633804`"}], ",", 
   RowBox[{"-", "0.9965199913847955`"}], ",", 
   RowBox[{"-", "0.9906028004733808`"}], ",", 
   RowBox[{"-", "0.9787684186505514`"}], ",", 
   RowBox[{"-", "0.9708788307686651`"}], ",", 
   RowBox[{"-", "0.9748236247096083`"}], ",", 
   RowBox[{"-", "0.9777822201653156`"}], ",", 
   RowBox[{"-", "0.9689064337981935`"}], ",", 
   RowBox[{"-", "0.9580582504605999`"}], ",", 
   RowBox[{"-", "0.9560858534901283`"}], ",", 
   RowBox[{"-", "0.9501686625787136`"}], ",", 
   RowBox[{"-", "0.9146655171102253`"}], ",", 
   RowBox[{"-", "0.9186103110511684`"}], ",", 
   RowBox[{"-", "0.9126931201397537`"}], ",", 
   RowBox[{"-", "0.9028311352873958`"}], ",", 
   RowBox[{"-", "0.8673279898189075`"}], ",", 
   RowBox[{"-", "0.8702865852746149`"}], ",", 
   RowBox[{"-", "0.8840933640679158`"}], ",", 
   RowBox[{"-", "0.8821209670974444`"}], ",", 
   RowBox[{"-", "0.8870519595236233`"}], ",", 
   RowBox[{"-", "0.8762037761860296`"}], ",", 
   RowBox[{"-", "0.8564798064813138`"}], ",", 
   RowBox[{"-", "0.8426730276880129`"}], ",", 
   RowBox[{"-", "0.8229490579832971`"}], ",", 
   RowBox[{"-", "0.8199904625275898`"}], ",", 
   RowBox[{"-", "0.8121008746457035`"}], ",", 
   RowBox[{"-", "0.8357696382913623`"}], ",", 
   RowBox[{"-", "0.8239352564685329`"}], ",", 
   RowBox[{"-", "0.8180180655571182`"}], ",", 
   RowBox[{"-", "0.8505626155698991`"}], ",", 
   RowBox[{"-", "0.8426730276880129`"}], ",", 
   RowBox[{"-", "0.8347834398061266`"}], ",", 
   RowBox[{"-", "0.8337972413208907`"}], ",", 
   RowBox[{"-", "0.8377420352618339`"}], ",", 
   RowBox[{"-", "0.8308386458651834`"}], ",", 
   RowBox[{"-", "0.8209766610128255`"}], ",", 
   RowBox[{"-", "0.8061836837342887`"}], ",", 
   RowBox[{"-", "0.7795563246329226`"}], ",", 
   RowBox[{"-", "0.7854735155443372`"}], ",", 
   RowBox[{"-", "0.7844873170591015`"}], ",", 
   RowBox[{"-", "0.7844873170591015`"}], ",", 
   RowBox[{"-", "0.7825149200886299`"}], ",", 
   RowBox[{"-", "0.7825149200886299`"}], ",", 
   RowBox[{"-", "0.7687081412953288`"}], ",", 
   RowBox[{"-", "0.7243292094597185`"}], ",", 
   RowBox[{"-", "0.671074491256986`"}], ",", 
   RowBox[{"-", "0.6858674685355228`"}], ",", 
   RowBox[{"-", "0.6641711018603356`"}], ",", 
   RowBox[{"-", "0.6612125064046281`"}], ",", 
   RowBox[{"-", "0.6760054836831649`"}], ",", 
   RowBox[{"-", "0.6730468882274576`"}], ",", 
   RowBox[{"-", "0.6779778806536365`"}], ",", 
   RowBox[{"-", "0.6740330867126934`"}], ",", 
   RowBox[{"-", "0.6917846594469376`"}], ",", 
   RowBox[{"-", "0.7598323549282068`"}], ",", 
   RowBox[{"-", "0.7696943397805647`"}], ",", 
   RowBox[{"-", "0.7746253322067436`"}], ",", 
   RowBox[{"-", "0.7736391337215078`"}], ",", 
   RowBox[{"-", "0.7332049958268406`"}], ",", 
   RowBox[{"-", "0.7055914382402385`"}], ",", 
   RowBox[{"-", "0.7440531791644343`"}], ",", 
   RowBox[{"-", "0.7154534230925964`"}], ",", 
   RowBox[{"-", "0.7095362321811817`"}], ",", 
   RowBox[{"-", "0.7085500336959459`"}], ",", 
   RowBox[{"-", "0.6365575442737336`"}], ",", 
   RowBox[{"-", "0.6631849033750997`"}], ",", 
   RowBox[{"-", "0.6651573003455713`"}], ",", 
   RowBox[{"-", "0.6838950715650512`"}], ",", 
   RowBox[{"-", "0.6868536670207586`"}], ",", 
   RowBox[{"-", "0.7016466442992955`"}], ",", 
   RowBox[{"-", "0.689812262476466`"}], ",", 
   RowBox[{"-", "0.7075638352107101`"}], ",", 
   RowBox[{"-", "0.7203844155187753`"}], ",", 
   RowBox[{"-", "0.7243292094597185`"}], ",", 
   RowBox[{"-", "0.7578599579577352`"}], ",", 
   RowBox[{"-", "0.7667357443248574`"}], ",", 
   RowBox[{"-", "0.7637771488691499`"}], ",", 
   RowBox[{"-", "0.7578599579577352`"}], ",", 
   RowBox[{"-", "0.758846156442971`"}], ",", 
   RowBox[{"-", "0.7578599579577352`"}], ",", 
   RowBox[{"-", "0.8121008746457035`"}], ",", 
   RowBox[{"-", "0.8584522034517854`"}], ",", 
   RowBox[{"-", "0.832811042835655`"}], ",", 
   RowBox[{"-", "0.8130870731309393`"}], ",", 
   RowBox[{"-", "0.8199904625275898`"}], ",", 
   RowBox[{"-", "0.8278800504094761`"}], ",", 
   RowBox[{"-", "0.8357696382913623`"}], ",", 
   RowBox[{"-", "0.8298524473799477`"}], ",", 
   RowBox[{"-", "0.8121008746457035`"}], ",", 
   RowBox[{"-", "0.8337972413208907`"}], ",", 
   RowBox[{"-", "0.832811042835655`"}], ",", 
   RowBox[{"-", "0.8219628594980614`"}], ",", 
   RowBox[{"-", "0.846617821628956`"}], ",", 
   RowBox[{"-", "0.8288662488947118`"}], ",", 
   RowBox[{"-", "0.846617821628956`"}], ",", 
   RowBox[{"-", "0.8456316231437202`"}], ",", 
   RowBox[{"-", "0.8495764170846634`"}], ",", 
   RowBox[{"-", "0.8337972413208907`"}], ",", 
   RowBox[{"-", "0.846617821628956`"}], ",", 
   RowBox[{"-", "0.8535212110256065`"}], ",", 
   RowBox[{"-", "0.8545074095108423`"}], ",", 
   RowBox[{"-", "0.8476040201141918`"}], ",", 
   RowBox[{"-", "0.8535212110256065`"}], ",", 
   RowBox[{"-", "0.8614107989074928`"}], ",", 
   RowBox[{"-", "0.8623969973927286`"}], ",", 
   RowBox[{"-", "0.8387282337470697`"}], ",", 
   RowBox[{"-", "0.8456316231437202`"}], ",", 
   RowBox[{"-", "0.6868536670207586`"}], ",", 
   RowBox[{"-", "0.7026328427845312`"}], ",", 
   RowBox[{"-", "0.805197485249053`"}], ",", 
   RowBox[{"-", "0.8278800504094761`"}], ",", 
   RowBox[{"-", "0.8505626155698991`"}], ",", 
   RowBox[{"-", "0.8387282337470697`"}], ",", 
   RowBox[{"-", "0.8367558367765981`"}], ",", 
   RowBox[{"-", "0.846617821628956`"}], ",", 
   RowBox[{"-", "0.8485902185994276`"}], ",", 
   RowBox[{"-", "0.8554936079960781`"}], ",", 
   RowBox[{"-", "0.8614107989074928`"}], ",", 
   RowBox[{"-", "0.8673279898189075`"}], ",", 
   RowBox[{"-", "0.832811042835655`"}], ",", 
   RowBox[{"-", "0.8377420352618339`"}], ",", 
   RowBox[{"-", "0.8574660049665497`"}], ",", 
   RowBox[{"-", "0.8594384019370213`"}], ",", 
   RowBox[{"-", "0.8545074095108423`"}], ",", 
   RowBox[{"-", "0.8781761731565012`"}], ",", 
   RowBox[{"-", "0.874231379215558`"}], ",", 
   RowBox[{"-", "0.865355592848436`"}], ",", 
   RowBox[{"-", "0.874231379215558`"}], ",", 
   RowBox[{"-", "0.8771899746712654`"}], ",", 
   RowBox[{"-", "0.8712727837598506`"}], ",", 
   RowBox[{"-", "0.8614107989074928`"}], ",", 
   RowBox[{"-", "0.8673279898189075`"}], ",", 
   RowBox[{"-", "0.8633831958779644`"}], ",", 
   RowBox[{"-", "0.8663417913336717`"}], ",", 
   RowBox[{"-", "0.8623969973927286`"}], ",", 
   RowBox[{"-", "0.8594384019370213`"}], ",", 
   RowBox[{"-", "0.8633831958779644`"}], ",", 
   RowBox[{"-", "0.8643693943632001`"}], ",", 
   RowBox[{"-", "0.8633831958779644`"}], ",", 
   RowBox[{"-", "0.8633831958779644`"}], ",", 
   RowBox[{"-", "0.8663417913336717`"}], ",", 
   RowBox[{"-", "0.8584522034517854`"}], ",", 
   RowBox[{"-", "0.8584522034517854`"}], ",", 
   RowBox[{"-", "0.8643693943632001`"}], ",", 
   RowBox[{"-", "0.8702865852746149`"}], ",", 
   RowBox[{"-", "0.7973078973671667`"}], ",", 
   RowBox[{"-", "0.8288662488947118`"}], ",", 
   RowBox[{"-", "0.814073271616175`"}], ",", 
   RowBox[{"-", "0.8278800504094761`"}], ",", 
   RowBox[{"-", "0.8288662488947118`"}], ",", 
   RowBox[{"-", "0.8456316231437202`"}], ",", 
   RowBox[{"-", "0.8505626155698991`"}], ",", 
   RowBox[{"-", "0.8554936079960781`"}], ",", 
   RowBox[{"-", "0.860424600422257`"}], ",", 
   RowBox[{"-", "0.8377420352618339`"}], ",", 
   RowBox[{"-", "0.8545074095108423`"}], ",", 
   RowBox[{"-", "0.8515488140551349`"}], ",", 
   RowBox[{"-", "0.8426730276880129`"}], ",", 
   RowBox[{"-", "0.8476040201141918`"}], ",", 
   RowBox[{"-", "0.8337972413208907`"}], ",", 
   RowBox[{"-", "0.8288662488947118`"}], ",", 
   RowBox[{"-", "0.8298524473799477`"}], ",", 
   RowBox[{"-", "0.8190042640423539`"}], ",", 
   RowBox[{"-", "0.8170318670718825`"}], ",", 
   RowBox[{"-", "0.8180180655571182`"}], ",", 
   RowBox[{"-", "0.8091422791899961`"}], ",", 
   RowBox[{"-", "0.7982940958524025`"}], ",", 
   RowBox[{"-", "0.7982940958524025`"}], ",", 
   RowBox[{"-", "0.8061836837342887`"}], ",", 
   RowBox[{"-", "0.8101284776752319`"}], ",", 
   RowBox[{"-", "0.8042112867638171`"}], ",", 
   RowBox[{"-", "0.8180180655571182`"}], ",", 
   RowBox[{"-", "0.8278800504094761`"}], ",", 
   RowBox[{"-", "0.6957294533878807`"}], ",", 
   RowBox[{"-", "0.634585147303262`"}], ",", 
   RowBox[{"-", "0.6365575442737336`"}], ",", 
   RowBox[{"-", "0.7479979731053774`"}], ",", 
   RowBox[{"-", "0.8121008746457035`"}], ",", 
   RowBox[{"-", "0.8121008746457035`"}], ",", 
   RowBox[{"-", "0.6178197730542536`"}], ",", 
   RowBox[{"-", "0.5537168715139275`"}], ",", 
   RowBox[{"-", "0.6069715897166599`"}], ",", 
   RowBox[{"-", "0.7134810261221248`"}], ",", 
   RowBox[{"-", "0.6700882927717503`"}], ",", 
   RowBox[{"-", "0.6878398655059944`"}], ",", 
   RowBox[{"-", "0.717425820063068`"}], ",", 
   RowBox[{"-", "0.7213706140040111`"}], ",", 
   RowBox[{"-", "0.74503937764967`"}], ",", 
   RowBox[{"-", "0.7105224306664175`"}], ",", 
   RowBox[{"-", "0.7085500336959459`"}], ",", 
   RowBox[{"-", "0.6888260639912301`"}], ",", 
   RowBox[{"-", "0.6444471321556198`"}], ",", 
   RowBox[{"-", "0.6257093609361398`"}], ",", 
   RowBox[{"-", "0.6266955594213757`"}], ",", 
   RowBox[{"-", "0.6503643230670345`"}], ",", 
   RowBox[{"-", "0.6365575442737336`"}], ",", 
   RowBox[{"-", "0.6178197730542536`"}], ",", 
   RowBox[{"-", "0.5231447184716181`"}], ",", 
   RowBox[{"-", "0.6089439866871315`"}], ",", 
   RowBox[{"-", "0.6099301851723673`"}], ",", 
   RowBox[{"-", "0.610916383657603`"}], ",", 
   RowBox[{"-", "0.6049991927461883`"}], ",", 
   RowBox[{"-", "0.6089439866871315`"}], ",", 
   RowBox[{"-", "0.6119025821428389`"}], ",", 
   RowBox[{"-", "0.6119025821428389`"}], ",", 
   RowBox[{"-", "0.6217645669951967`"}], ",", 
   RowBox[{"-", "0.6395161397294409`"}], ",", 
   RowBox[{"-", "0.6848812700502871`"}], ",", 
   RowBox[{"-", "0.7055914382402385`"}], ",", 
   RowBox[{"-", "0.7046052397550028`"}], ",", 
   RowBox[{"-", "0.7095362321811817`"}], ",", 
   RowBox[{"-", "0.6977018503583523`"}], ",", 
   RowBox[{"-", "0.7085500336959459`"}], ",", 
   RowBox[{"-", "0.6602263079193924`"}], ",", 
   RowBox[{"-", "0.7124948276368891`"}], ",", 
   RowBox[{"-", "0.7144672246073607`"}], ",", 
   RowBox[{"-", "0.7115086291516532`"}], ",", 
   RowBox[{"-", "0.7046052397550028`"}], ",", 
   RowBox[{"-", "0.72630160643019`"}], ",", 
   RowBox[{"-", "0.7154534230925964`"}], ",", 
   RowBox[{"-", "0.7134810261221248`"}], ",", 
   RowBox[{"-", "0.7213706140040111`"}], ",", 
   RowBox[{"-", "0.7154534230925964`"}], ",", 
   RowBox[{"-", "0.7154534230925964`"}], ",", 
   RowBox[{"-", "0.7184120185483038`"}], ",", 
   RowBox[{"-", "0.7233430109744827`"}], ",", 
   RowBox[{"-", "0.7115086291516532`"}], ",", 
   RowBox[{"-", "0.6661434988308071`"}], ",", 
   RowBox[{"-", "0.1760028516686213`"}], ",", 
   RowBox[{"-", "0.07935540011551424`"}], ",", 
   RowBox[{"-", "0.25194013503177687`"}], ",", 
   RowBox[{"-", "0.22235418047470326`"}], ",", 
   RowBox[{"-", "0.32097402899828187`"}], ",", 
   RowBox[{"-", "0.43734545025610466`"}], ",", 
   RowBox[{"-", "0.5182137260454391`"}], ",", 
   RowBox[{"-", "0.5330067033239759`"}], ",", 
   RowBox[{"-", "0.528075710897797`"}], ",", 
   RowBox[{"-", "0.5310343063535043`"}], ",", 
   RowBox[{"-", "0.5172275275602034`"}], ",", 
   RowBox[{"-", "0.3949389153909659`"}], ",", 
   RowBox[{"-", "0.4136766866104458`"}], ",", 
   RowBox[{"-", "0.4048009002433237`"}], ",", 
   RowBox[{"-", "0.4038147017580879`"}], ",", 
   RowBox[{"-", "0.36042196840771334`"}], ",", 
   RowBox[{"-", "0.22432657744517484`"}], ",", 
   RowBox[{"-", "0.3002638608083304`"}], ",", 
   RowBox[{"-", "0.2854708835297936`"}], ",", 
   RowBox[{"-", "0.29533286838215145`"}], ",", 
   RowBox[{"-", "0.25588492897271997`"}], ",", 
   RowBox[{"-", "0.17304425621291394`"}], ",", 
   RowBox[{"-", "0.22038178350423168`"}], ",", 
   RowBox[{"-", "0.17403045469814973`"}], ",", 
   RowBox[{"-", "0.1976992183438086`"}], ",", 
   RowBox[{"-", "0.1109137516430594`"}], ",", 
   RowBox[{"-", "0.07245201071886374`"}], ",", 
   RowBox[{"-", "0.04779704858796908`"}], ",", 
   RowBox[{"-", "0.02905927736848914`"}], ",", 
   RowBox[{"-", "0.05568663646985537`"}], ",", "0.05772618933226006`", ",", 
   "0.004471471129527596`", ",", "0.1691666181639039`", ",", 
   "0.006443868099999169`", ",", "0.016305852952357033`", ",", 
   "0.018278249922828605`", ",", 
   RowBox[{"-", "0.06259002586650587`"}], ",", 
   RowBox[{"-", "0.09316217890881524`"}], ",", 
   RowBox[{"-", "0.05272804101414801`"}], ",", 
   RowBox[{"-", "0.09907936982022997`"}], ",", 
   RowBox[{"-", "0.10894135467258784`"}], ",", 
   RowBox[{"-", "0.14937549256725507`"}], ",", 
   RowBox[{"-", "0.1533202865081982`"}], ",", 
   RowBox[{"-", "0.1612098743900845`"}], ",", 
   RowBox[{"-", "0.16219607287532029`"}], ",", 
   RowBox[{"-", "0.14838929408201929`"}], ",", "0.1711390151343755`", ",", 
   "0.2352419166747016`", ",", "0.17409761059008286`", ",", 
   "0.1839595954424407`", ",", "0.21650414545522165`", ",", 
   "0.26088307729083204`", ",", "0.3003310167002635`", ",", 
   "0.15831843482631025`", ",", "0.01926444840806439`", ",", 
   "0.026167837804714895`", ",", 
   RowBox[{"-", "0.010321506149009198`"}], ",", "0.02715403628995068`", ",", 
   RowBox[{"-", "0.009335307663773412`"}], ",", "0.06758817418461792`", ",", 
   "0.06561577721414635`", ",", "0.039974616598015905`", ",", 
   "0.09520173177121993`", ",", "0.07350536509603264`", ",", 
   "0.05969858630273163`", ",", "0.0330712272013654`", ",", 
   "0.01926444840806439`", ",", "0.05082279993560956`", ",", 
   "0.038988418112780115`", ",", "0.023209242349007536`", ",", 
   "0.008416265070470741`", ",", "0.02222304386377175`", ",", 
   "0.029126433260422253`", ",", "0.038988418112780115`", ",", 
   "0.09421553328598416`", ",", "0.0616709832732032`", ",", 
   "0.07843635752221158`", ",", "0.0547675938765527`", ",", 
   "0.06265718175843898`", ",", "0.07350536509603264`", ",", 
   "0.12281528935782196`", ",", "0.2904690318479056`", ",", 
   "0.15042884694442396`", ",", "0.15240124391489554`", ",", 
   "0.15240124391489554`", ",", "0.13859446512159454`", ",", 
   "0.17311141210484707`", ",", "0.18790438938338386`", ",", 
   "0.17212521361961128`", ",", "0.18198719847196915`", ",", 
   "0.18001480150149757`", ",", "0.20466976363239223`", ",", 
   "0.19283538180956278`", ",", "0.22636613030757952`", ",", 
   "0.2480624969827668`", ",", "0.3220273833754508`", ",", 
   "0.29934481821502773`", ",", "0.2806070469955478`", ",", 
   "0.28159324548078357`", ",", "0.32399978034592236`", ",", 
   "0.3200549864049792`", ",", "0.30131721518549925`", ",", 
   "0.3309031697425729`", ",", "0.3713373076372401`", ",", 
   "0.45516417888228194`", ",", "0.450233186456103`", ",", 
   "0.4374126061480378`", ",", "0.48179153798364815`", ",", 
   "0.48376393495411973`", ",", "0.4877087288950629`", ",", 
   "0.4985569122326565`", ",", "0.5133498895111933`", ",", 
   "0.501515507688364`", ",", "0.5370186531568523`", ",", 
   "0.529129065274966`", ",", "0.5498392334649175`", ",", 
   "0.5784389895367552`", ",", "0.5508254319501532`", ",", 
   "0.5735079971105763`", ",", "0.5823837834776984`", ",", 
   "0.8624641532846617`", ",", "0.9650287957491834`", ",", 
   "0.8693675426813122`", ",", "0.8220300153899944`", ",", 
   "0.8101956335671651`", ",", "0.8111818320524008`", ",", 
   "0.824002412360466`", ",", "0.7973750532590999`", ",", 
   "0.796388854773864`", ",", "0.8338643972128239`", ",", 
   "0.8023060456852787`", ",", "0.8092094350819292`", ",", 
   "0.796388854773864`", ",", "0.8624641532846617`", ",", 
   "0.8092094350819292`", ",", "0.8220300153899944`", ",", 
   "0.8131542290228724`", ",", "0.8279472063014092`", ",", 
   "0.8269610078161734`", ",", "0.8338643972128239`", ",", 
   "0.8259748093309376`", ",", "0.7243963653516516`", ",", 
   "0.7372169456597168`", ",", "0.7579271138496684`", ",", 
   "0.7707476941577336`", ",", "0.7914578623476851`", ",", 
   "0.8062508396262219`", ",", "0.8141404275081082`", ",", 
   "0.8318920002423523`", ",", "0.8200576184195228`", ",", 
   "0.8476711760061248`", ",", "0.9226222608840446`", ",", 
   "0.8624641532846617`", ",", "0.8920501078417353`", ",", 
   "1.789490729406301`", ",", "1.6711469111780064`", ",", 
   "1.6267679793423961`", ",", "1.5281481308188174`", ",", 
   "0.9827803684834276`", ",", "0.9877113609096065`", ",", 
   "0.9650287957491834`", ",", "0.8644365502551332`", ",", 
   "0.7835682744657988`", ",", "0.7539823199087252`", ",", 
   "0.768775297187262`", ",", "0.7786372820396199`", ",", 
   "0.7855406714362704`", ",", "0.994614750306257`", ",", 
   "0.8861329169303206`", ",", "0.8003336487148072`", ",", 
   "0.8092094350819292`", ",", "0.796388854773864`", ",", 
   "0.8338643972128239`", ",", "0.8249886108457019`", ",", 
   "0.8624641532846617`", ",", "0.8476711760061248`", ",", 
   "0.8269610078161734`", ",", "0.8614779547994259`", ",", 
   "0.8831743214746132`", ",", "0.8713399396517838`", ",", 
   "0.8871191154155563`", ",", "1.0232145063780949`", ",", 
   "1.040966079112339`", ",", "1.0212421094076234`", ",", 
   "1.091262201859364`", ",", "1.2086198216024227`", ",", 
   "1.2766675170836919`", ",", "1.23031618827761`", ",", "1.234260982218553`",
    ",", "1.1987578367500649`", ",", "1.059703850331819`", ",", 
   "1.0744968276103557`", ",", "1.2105922185728943`", ",", 
   "1.2569435473789763`", ",", "1.1632546912815764`", ",", 
   "1.170158080678227`", ",", "1.1405721261211534`", ",", 
   "1.146489317032568`", ",", "1.2145370125138375`", ",", 
   "1.2086198216024227`", ",", "1.170158080678227`", ",", 
   "1.1721304776486987`", ",", "1.138599729150682`", ",", 
   "1.1139447670197873`", ",", "1.1297239427835597`", ",", 
   "1.1602960958258692`", ",", "1.142544523091625`", ",", 
   "1.2599021428346835`", ",", "1.2569435473789763`", ",", 
   "1.2618745398051552`", ",", "1.2372195776742605`", ",", 
   "1.2105922185728943`", ",", "1.2382057761594962`", ",", 
   "1.3151292580078877`", ",", "1.3210464489193023`", ",", 
   "1.2638469367756267`", ",", "1.266805532231334`", ",", 
   "1.257929745864212`", ",", "1.2510263564675614`", ",", 
   "1.3111844640669446`", ",", "1.2569435473789763`", ",", 
   "1.1632546912815764`", ",", "1.1681856837077556`", ",", 
   "1.1721304776486987`", ",", "1.1484617140030398`", ",", 
   "1.1553651033996903`", ",", "1.1543789049144544`", ",", 
   "1.1583236988553975`", ",", "1.1602960958258692`", ",", 
   "1.1681856837077556`", ",", "1.1662132867372839`", ",", 
   "1.1494479124882755`", ",", "1.1336687367245029`", ",", 
   "1.1583236988553975`", ",", "1.1119723700493156`", ",", 
   "1.0902760033741283`", ",", "1.1119723700493156`", ",", 
   "1.128737744298324`", ",", "1.0547728579056401`", ",", 
   "0.9847527654538992`", ",", "0.9837665669686634`", ",", 
   "0.9758769790867772`", ",", "0.971932185145834`", ",", 
   "0.9837665669686634`", ",", "0.985738963939135`", ",", 
   "0.9660149942344193`", ",", "0.9758769790867772`", ",", 
   "0.9798217730277202`", ",", "1.0222283078928591`", ",", 
   "0.9827803684834276`", ",", "0.9867251624243708`", ",", 
   "0.9827803684834276`", ",", "0.9808079715129561`", ",", 
   "0.9492496199854109`", ",", "0.9344566427068741`", ",", 
   "1.003490536673379`", ",", "0.9778493760572488`", ",", 
   "0.9679873912048909`", ",", "0.9620702002934761`", ",", 
   "1.0172973154666802`", ",", "0.9837665669686634`", ",", 
   "0.9808079715129561`", ",", "0.990669956365314`", ",", 
   "1.345701411050197`", ",", "1.5291343293040534`", ",", 
   "1.4433350610885398`", ",", "1.400928526223401`", ",", 
   "1.4088181141052873`", ",", "1.3861355489448643`", ",", 
   "1.4048733201643442`", ",", "1.535051520215468`", ",", 
   "1.7451117975706905`", ",", "1.646491949047112`", ",", 
   "1.2322885852480816`", ",", "1.0754830260955917`", ",", 
   "1.032090292745217`", ",", "1.0715382321546485`", ",", 
   "1.0863312094331852`", ",", "1.1109861715640799`", ",", 
   "1.138599729150682`", ",", "1.4344592747214178`", ",", 
   "1.4541832444261336`", ",", "1.3358394261978392`", ",", 
   "1.3654253807549128`", ",", "1.336825624683075`", ",", 
   "1.2973776852736434`", ",", "1.290474295876993`", ",", 
   "1.3072396701260014`", ",", "1.2096060200876584`", ",", 
   "1.19284064583865`", ",", "1.2135508140286015`", ",", 
   "1.1879096534124711`", ",", "1.2569435473789763`", ",", 
   "1.1879096534124711`", ",", "1.1504341109735112`", ",", 
   "1.2224266003957238`", ",", "1.147475515517804`", ",", 
   "1.1602960958258692`", ",", "1.1040827821674293`", ",", 
   "1.1504341109735112`", ",", "1.138599729150682`", ",", 
   "1.0794278200365346`", ",", "1.059703850331819`", ",", 
   "1.059703850331819`", ",", "1.059703850331819`", ",", "1.059703850331819`",
    ",", "1.0025043381881433`", ",", "0.9886975593948424`", ",", 
   "1.244122967070911`", ",", "1.2263713943366668`", ",", 
   "1.1218343549016736`", ",", "1.1583236988553975`", ",", 
   "1.0804140185217705`", ",", "0.994614750306257`", ",", 
   "0.9847527654538992`", ",", "0.9709459866605982`", ",", 
   "0.9275532533102236`", ",", "0.8890915123860279`", ",", 
   "0.9196636654283373`", ",", "0.8930363063269711`", ",", 
   "0.8299196032718807`", ",", "0.8230162138752303`", ",", 
   "0.7865268699215061`", ",", "0.7243963653516516`", ",", 
   "0.699741403220757`", ",", "0.7490513274825463`", ",", 
   "0.7608857093053757`", ",", "0.7529961214234894`", ",", 
   "0.7342583502040094`", ",", "0.7234101668664158`", ",", 
   "0.7066447926174074`", ",", "0.7391893426301884`", ",", 
   "0.7026999986764643`", ",", "0.6928380138241065`", ",", 
   "0.732285953233538`", ",", "0.6859346244274559`", ",", 
   "0.713548182014058`", ",", "0.7145343804992937`", ",", 
   "0.7451065335416032`", ",", "0.6948104107945781`", ",", 
   "0.7766648850691483`", ",", "0.7441203350563673`", ",", 
   "0.7638443047610831`", ",", "0.7677890987020262`", ",", 
   "0.75989951082014`", ",", "0.8486573744913607`", ",", 
   "0.8013198472000429`", ",", "0.7944164578033924`", ",", 
   "0.7776510835543841`", ",", "0.7944164578033924`", ",", 
   "0.8032922441705145`", ",", "0.787513068406742`", ",", 
   "0.7855406714362704`", ",", "0.7737062896134409`", ",", 
   "0.7855406714362704`", ",", "0.7983612517443356`", ",", 
   "0.7618719077906115`", ",", "0.7529961214234894`", ",", 
   "0.732285953233538`", ",", "0.708617189587879`", ",", 
   "0.6967828077650496`", ",", "0.754968518393961`", ",", 
   "0.7303135562630664`", ",", "0.8023060456852787`", ",", 
   "0.7559547168791968`", ",", "0.7737062896134409`", ",", 
   "0.7638443047610831`", ",", "0.7786372820396199`", ",", 
   "0.8447125805504175`", ",", "0.8131542290228724`", ",", 
   "0.8447125805504175`", ",", "0.842740183579946`", ",", 
   "0.842740183579946`", ",", "0.8348505956980596`", ",", 
   "0.9541806124115898`", ",", "0.9058568866350363`", ",", 
   "0.8634503517698975`", ",", "0.9610840018082404`", ",", 
   "0.9660149942344193`", ",", "0.9610840018082404`", ",", 
   "0.9364290396773457`", ",", "0.9798217730277202`", ",", 
   "0.9610840018082404`", ",", "0.8940225048122069`", ",", 
   "0.8733123366222554`", ",", "0.8545745654027754`", ",", 
   "0.8180852214490513`", ",", "0.8249886108457019`", ",", 
   "0.8180852214490513`", ",", "0.8230162138752303`", ",", 
   "0.8200576184195228`", ",", "0.8328781987275881`", ",", 
   "0.8131542290228724`", ",", "0.8328781987275881`", ",", 
   "0.9127602760316869`", ",", "0.8407677866094744`", ",", 
   "0.8358367941832955`", ",", "0.8624641532846617`", ",", 
   "0.8338643972128239`", ",", "0.8180852214490513`", ",", 
   "0.8220300153899944`", ",", "0.8624641532846617`", ",", 
   "0.8723261381370195`", ",", "0.9314980472511667`", ",", 
   "0.8644365502551332`", ",", "0.8378091911537671`", ",", 
   "1.7362360112035684`", ",", "1.7401808051445116`", ",", 
   "1.8595108218580416`", ",", "2.0675987022427926`", ",", 
   "2.0725296946689715`", ",", "1.3555633959025548`", ",", 
   "1.1267653473278525`", ",", "1.1504341109735112`", ",", 
   "1.1494479124882755`", ",", "1.0725244306398842`", ",", 
   "1.1681856837077556`", ",", "1.0528004609351684`", ",", 
   "1.0547728579056401`", ",", "1.0202559109223874`", ",", 
   "1.36838397621062`", ",", "1.1997440352353006`", ",", 
   "1.2421505701004394`", ",", "1.3447152125649613`", ",", 
   "1.1948130428091217`", ",", "1.1810062640158208`", ",", 
   "1.1671994852225196`", ",", "1.414735305016702`", ",", 
   "1.3752873656072706`", ",", "1.3535909989320833`", ",", 
   "1.4324868777509463`", ",", "1.2648331352608626`", ",", 
   "1.1908682488681785`", ",", "1.1898820503829428`", ",", 
   "1.138599729150682`", ",", "1.1277515458130882`", ",", 
   "1.1139447670197873`", ",", "1.0942207973150715`", ",", 
   "1.0547728579056401`", ",", "1.009407727584794`", ",", 
   "1.0222283078928591`", ",", "1.0695658351841768`", ",", 
   "1.0518142624499327`", ",", "1.0942207973150715`", ",", 
   "1.091262201859364`", ",", "1.101124186711722`", ",", 
   "1.0606900488170548`", ",", "1.0616762473022905`", ",", 
   "1.059703850331819`", ",", "1.0429384760828107`", ",", 
   "1.0478694685089895`", ",", "1.0695658351841768`", ",", 
   "1.0636486442727622`", ",", "1.0636486442727622`", ",", 
   "1.0744968276103557`", ",", "1.0922484003446`", ",", "1.0695658351841768`",
    ",", "1.114930965505023`", ",", "1.1090137745936082`", ",", 
   "1.096193194285543`", ",", "1.101124186711722`", ",", 
   "1.0932345988298358`", ",", "1.0942207973150715`", ",", 
   "1.1090137745936082`", ",", "1.1090137745936082`", ",", 
   "1.1593098973406333`", ",", "1.1455031185473323`", ",", 
   "1.1415583246063892`", ",", "1.1346549352097388`", ",", 
   "1.138599729150682`", ",", "1.1346549352097388`", ",", 
   "1.1504341109735112`", ",", "1.1326825382392671`", ",", 
   "1.1632546912815764`", ",", "1.1514203094587472`", ",", 
   "1.1869234549272354`", ",", "1.1632546912815764`", ",", 
   "1.156351301884926`", ",", "1.1484617140030398`", ",", 
   "1.1583236988553975`", ",", "1.1435307215768609`", ",", 
   "1.1435307215768609`", ",", "1.1326825382392671`", ",", 
   "1.1218343549016736`", ",", "1.0991517897412504`", ",", 
   "1.1001379882264861`", ",", "1.1090137745936082`", ",", 
   "1.1366273321802103`", ",", "1.331894632256896`", ",", 
   "1.3526048004468476`", ",", "1.2283437913071384`", ",", 
   "1.2480677610118542`", ",", "1.3062534716407654`", ",", 
   "1.3555633959025548`", ",", "1.123806751872145`", ",", 
   "1.1208481564164376`", ",", "1.142544523091625`", ",", 
   "1.1297239427835597`", ",", "1.1326825382392671`", ",", 
   "1.1415583246063892`", ",", "1.1366273321802103`", ",", 
   "1.1307101412687957`", ",", "1.1247929503573808`", ",", 
   "1.1277515458130882`", ",", "1.138599729150682`", ",", 
   "1.152406507943983`", ",", "1.1593098973406333`", ",", 
   "1.1583236988553975`", ",", "1.19284064583865`", ",", 
   "1.1602960958258692`", ",", "1.1316963397540314`", ",", 
   "1.1435307215768609`", ",", "1.1435307215768609`", ",", 
   "1.1622684927963407`", ",", "1.161282294311105`", ",", 
   "1.3535909989320833`", ",", "1.1948130428091217`", ",", 
   "1.1642408897668124`", ",", "1.161282294311105`", ",", 
   "1.1879096534124711`", ",", "1.207633623117187`", ",", 
   "1.1859372564419997`", ",", "1.1770614700748776`", ",", 
   "1.1780476685601133`", ",", "1.1721304776486987`", ",", 
   "1.1632546912815764`", ",", "1.1711442791634628`", ",", 
   "1.207633623117187`", ",", "1.222426590533739`", ",", 
   "1.2569435473789763`", ",", "1.2865295019360499`", ",", 
   "1.2105922185728943`", ",", "1.2046750276614795`", ",", 
   "1.2086198216024227`", ",", "1.2184818064547807`", ",", 
   "1.202702630691008`", ",", "1.2086198216024227`", ",", 
   "1.4541832444261336`", ",", "1.4541832444261336`", ",", 
   "1.3141430595226518`", ",", "1.3309084337716601`", ",", 
   "1.4522108474556619`", ",", "1.1829786609862922`", ",", 
   "1.207633623117187`", ",", "1.1721304776486987`", ",", 
   "1.1671994852225196`", ",", "1.1602960958258692`", ",", 
   "1.193826844323886`", ",", "1.1908682488681785`", ",", 
   "1.1869234549272354`", ",", "1.193826844323886`", ",", 
   "1.2096060200876584`", ",", "1.225385195851431`", ",", 
   "1.2480677610118542`", ",", "1.2608883413199194`", ",", 
   "1.2766675170836919`", ",", "1.2687779292018058`", ",", 
   "1.2677917307165698`", ",", "1.2362333791890248`", ",", 
   "1.1662132867372839`", ",", "1.1681856837077556`", ",", 
   "1.1957992412943574`", ",", "1.216509409484309`", ",", 
   "1.1898820503829428`", ",", "1.179033867045349`", ",", 
   "1.1859372564419997`", ",", "1.1987578367500649`", ",", 
   "1.21157841705813`", ",", "1.2056612261467154`", ",", 
   "1.2322885852480816`", ",", "1.188895851897707`", ",", 
   "1.1721304776486987`", ",", "1.170158080678227`", ",", 
   "1.1731166761339344`", ",", "1.1731166761339344`", ",", 
   "1.1760752715896416`", ",", "1.24905395949709`", ",", 
   "1.1908682488681785`", ",", "1.207633623117187`", ",", 
   "1.202702630691008`", ",", "1.2105922185728943`", ",", 
   "1.2332747837333173`", ",", "1.1770614700748776`", ",", 
   "1.1543789049144544`", ",", "1.1681856837077556`", ",", 
   "1.1543789049144544`", ",", "1.147475515517804`", ",", 
   "1.2687779292018058`", ",", "1.3881079459153358`", ",", 
   "1.3062534716407654`", ",", "1.2145370125138375`", ",", 
   "1.2155232109990732`", ",", "1.207633623117187`", ",", 
   "1.1760752715896416`", ",", "1.1681856837077556`", ",", 
   "1.1810062640158208`", ",", "1.202702630691008`", ",", 
   "1.1898820503829428`", ",", "1.2056612261467154`", ",", 
   "1.1987578367500649`", ",", "1.1879096534124711`", ",", 
   "1.1780476685601133`", ",", "1.184951057956764`", ",", "1.19284064583865`",
    ",", "1.235247180703789`", ",", "1.2174956079695447`", ",", 
   "1.2569435473789763`", ",", "1.2391919746447322`", ",", 
   "1.1997440352353006`", ",", "1.2036888291762438`", ",", 
   "1.2096060200876584`", ",", "1.2204542034252521`", ",", 
   "1.2086198216024227`", ",", "1.2460953640413825`", ",", 
   "1.2372195776742605`", ",", "1.2283437913071384`", ",", 
   "1.2283437913071384`", ",", "1.2273575928219027`", ",", 
   "1.2539849519232689`", ",", "1.2569435473789763`", ",", 
   "1.2421505701004394`", ",", "1.2243989973661953`", ",", 
   "1.2135508140286015`", ",", "1.24905395949709`", ",", 
   "1.2480677610118542`", ",", "1.2520125549527974`", ",", 
   "1.2214404019104879`", ",", "1.2046750276614795`", ",", 
   "1.1859372564419997`", ",", "1.1977716382648291`", ",", 
   "1.2017164322057723`", ",", "1.1997440352353006`", ",", 
   "1.2017164322057723`", ",", "1.2243989973661953`", ",", 
   "1.2273575928219027`", ",", "1.2322885852480816`", ",", 
   "1.1997440352353006`", ",", "1.2145370125138375`", ",", 
   "1.2155232109990732`", ",", "1.2421505701004394`", ",", 
   "1.2382057761594962`", ",", "1.2283437913071384`", ",", 
   "1.2174956079695447`", ",", "1.188895851897707`", ",", 
   "1.2017164322057723`", ",", "1.1829786609862922`", ",", 
   "1.1731166761339344`", ",", "1.2096060200876584`", ",", 
   "1.19284064583865`", ",", "1.1819924625010565`", ",", 
   "1.1957992412943574`", ",", "1.193826844323886`", ",", 
   "1.2391919746447322`", ",", "1.2313023867628459`", ",", 
   "1.4541832444261336`", ",", "1.5922510323591437`", ",", 
   "1.552803092949712`", ",", "1.5468859020382975`", ",", 
   "1.5518168944644763`", ",", "1.5892924369034362`", ",", 
   "1.5833752459920214`", ",", "1.271736524657513`", ",", 
   "1.2539849519232689`", ",", "1.2608883413199194`", ",", 
   "1.2411643716152037`", ",", "1.2608883413199194`", ",", 
   "1.2589159443494478`", ",", "1.2707503261722772`", ",", 
   "1.23031618827761`", ",", "1.2046750276614795`", ",", 
   "1.2007302337205363`", ",", "1.1977716382648291`", ",", 
   "1.207633623117187`", ",", "1.2224266003957238`", ",", 
   "1.2145370125138375`", ",", "1.2155232109990732`", ",", 
   "1.21157841705813`", ",", "1.207633623117187`", ",", "1.2046750276614795`",
    ",", "1.2224266003957238`", ",", "1.2174956079695447`", ",", 
   "1.2372195776742605`", ",", "1.2539849519232689`", ",", 
   "1.2322885852480816`", ",", "1.2480677610118542`", ",", 
   "1.244122967070911`", ",", "1.2372195776742605`", ",", 
   "1.244122967070911`", ",", "1.2313023867628459`", ",", 
   "1.2273575928219027`", ",", "1.2313023867628459`", ",", 
   "1.2470815625266183`", ",", "1.240178173129968`", ",", 
   "1.2599021428346835`", ",", "1.2599021428346835`", ",", 
   "1.2835709064803424`", ",", "1.2470815625266183`", ",", 
   "1.281598509509871`", ",", "1.257929745864212`", ",", "1.271736524657513`",
    ",", "1.3003362807293508`", ",", "1.2648331352608626`", ",", 
   "1.2786399140541636`", ",", "1.2786399140541636`", ",", 
   "1.2865295019360499`", ",", "1.262860738290391`", ",", 
   "1.3072396701260014`", ",", "1.290474295876993`", ",", 
   "1.3023086776998225`", ",", "1.3604943883287337`", ",", 
   "1.3555633959025548`", ",", "1.4758796111013208`", ",", 
   "1.4265696868395314`", ",", "1.345701411050197`", ",", 
   "1.3900803428858073`", ",", "1.3713425716663274`", ",", 
   "1.3555633959025548`", ",", "1.266805532231334`", ",", 
   "1.2697641276870415`", ",", "1.266805532231334`", ",", 
   "1.266805532231334`", ",", "1.2658193337460983`", ",", 
   "1.2766675170836919`", ",", "1.2786399140541636`", ",", 
   "1.3161154564931234`", ",", "1.3348532277126033`", ",", 
   "1.345701411050197`", ",", "1.3752873656072706`", ",", 
   "1.3496462049911402`", ",", "1.599154421755794`", ",", 
   "1.3743011671220349`", ",", "1.3703563731810917`", ",", 
   "1.3644391822696769`", ",", "1.373314968636799`", ",", 
   "1.3959975337972221`", ",", "1.4117767095609948`", ",", 
   "1.4778520080717923`", ",", "1.442348862603304`", ",", "1.42459728986906`",
    ",", "1.354577197417319`", ",", "1.3013224792145865`", ",", 
   "1.2835709064803424`", ",", "1.3230188458897738`", ",", 
   "1.3230188458897738`", ",", "1.3111844640669446`", ",", 
   "1.3072396701260014`", ",", "1.2983638837588793`", ",", 
   "1.3190740519488309`", ",", "1.3476738080206685`", ",", 
   "1.3348532277126033`", ",", "1.3555633959025548`", ",", 
   "1.354577197417319`", ",", "1.3802183580334495`", ",", 
   "1.3535909989320833`", ",", "1.3575357928730265`", ",", 
   "1.3634529837844411`", ",", "1.3664115792401486`", ",", 
   "1.3762735640925063`", ",", "1.4255834883542957`", ",", 
   "1.4305144807804746`", ",", "1.4739072141308491`", ",", 
   "1.4393902671475967`", ",", "1.4315006792657103`", ",", 
   "1.447279855029483`", ",", "1.4926449853503292`", ",", 
   "1.4571418398818408`", ",", "1.4186800989576451`", ",", 
   "1.4275558853247672`", ",", "1.4048733201643442`", ",", 
   "1.4048733201643442`", ",", "1.4413626641180683`", ",", 
   "1.456155641396605`", ",", "1.4640452292784913`", ",", 
   "1.4808106035274997`", ",", "1.4571418398818408`", ",", 
   "1.466017626248963`", ",", "1.4739072141308491`", ",", 
   "1.5360377187007037`", ",", "1.5271619323335817`", ",", 
   "1.5133551535402807`", ",", "1.442348862603304`", ",", 
   "1.3555633959025548`", ",", "1.304281074670294`", ",", 
   "1.3141430595226518`", ",", "1.3190740519488309`", ",", 
   "1.3378118231683107`", ",", "1.3851493504596284`", ",", 
   "1.3703563731810917`", ",", "1.4038871216791085`", ",", 
   "1.4462936565442472`", ",", "1.4265696868395314`", ",", 
   "1.4315006792657103`", ",", "1.3565495943877905`", ",", 
   "1.3604943883287337`", ",", "1.3713425716663274`", ",", 
   "1.5399825126416469`", ",", "1.465031427763727`", ",", 
   "1.5103965580845733`", ",", "1.5271619323335817`", ",", 
   "1.552803092949712`", ",", "1.415721503501938`"}], "}"}]], "Output",
 CellChangeTimes->{3.9290429391747055`*^9, 3.9290430334197598`*^9, 
  3.9290436306472683`*^9},
 CellLabel->
  "Out[2012]=",ExpressionUUID->"dbd9b56c-4a5c-c246-b8e2-c198bdfa9488"],

Cell[BoxData["1704"], "Output",
 CellChangeTimes->{3.9290429391747055`*^9, 3.9290430334197598`*^9, 
  3.929043630729206*^9},
 CellLabel->
  "Out[2013]=",ExpressionUUID->"b56e35d9-ee68-4e47-992a-157436e555d4"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sequenceLength", "=", "9"}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"trainingData", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"i", ";;", 
         RowBox[{"i", "+", "sequenceLength", "-", "1"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{
         RowBox[{"Length", "[", "data", "]"}], "-", "sequenceLength"}]}], 
       "}"}]}], "]"}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingLabels", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"sequenceLength", "+", "1"}], ";;"}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.9290427499600887`*^9, 3.929042771330364*^9}, 
   3.929042942702238*^9, {3.9290432693482094`*^9, 3.9290432985279903`*^9}, {
   3.9290435653612404`*^9, 3.929043579361206*^9}},
 CellLabel->
  "In[1993]:=",ExpressionUUID->"6b559010-fd81-f14c-a9dd-40c41851797b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"net", "=", 
   RowBox[{"NetChain", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"LinearLayer", "[", "1000", "]"}], ",", "Ramp", ",", 
      RowBox[{"LinearLayer", "[", "1000", "]"}], ",", "Ramp", ",", 
      RowBox[{"LinearLayer", "[", "100", "]"}], ",", "Ramp", ",", 
      RowBox[{"LinearLayer", "[", "10", "]"}], ",", "Ramp", ",", 
      RowBox[{"LinearLayer", "[", "5", "]"}], ",", "Ramp", ",", 
      RowBox[{"LinearLayer", "[", "1", "]"}]}], "}"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingLabels", "=", 
   RowBox[{"Total", "[", 
    RowBox[{"trainingData", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"trainedNet", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"net", ",", 
    RowBox[{"trainingData", "->", "trainingLabels"}], ",", 
    RowBox[{"Method", "->", "\"\<SGD\>\""}], ",", 
    RowBox[{"LearningRate", "->", "0.01"}], ",", 
    RowBox[{"MaxTrainingRounds", "->", "100"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "sequenceLength"}], ";;"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{"predictedLabels", "=", 
  RowBox[{"trainedNet", "[", "testData", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"testData", "[", 
  RowBox[{"[", 
   RowBox[{"-", "1"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.929042299248804*^9, 3.929042371100466*^9}, {
  3.9290424020954533`*^9, 3.929042409772461*^9}, {3.929042504060728*^9, 
  3.9290425041045303`*^9}, {3.9290425468144894`*^9, 3.9290425468743343`*^9}, {
  3.9290427566353474`*^9, 3.9290427644204865`*^9}, {3.929042827929617*^9, 
  3.9290428291221657`*^9}, {3.9290429498271675`*^9, 3.929043014499298*^9}, {
  3.9290430539473305`*^9, 3.929043083890747*^9}, {3.92904355182514*^9, 
  3.929043572886305*^9}, {3.929043659541147*^9, 3.9290437396157875`*^9}},
 CellLabel->
  "In[2046]:=",ExpressionUUID->"a720f84f-546b-c446-a9e5-b4232d0aad19"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NetChain",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            OverlayBox[{
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 GrayLevel[0.6], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{
                   Style[
                   "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                   10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 GrayLevel[0.6], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{
                   Style[
                   "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                   10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.84, 0.84, 0.84], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   GrayLevel[0.6], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.84, 0.84, 0.84], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   GrayLevel[0.6], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.84, 0.84, 0.84], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   GrayLevel[0.6], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   GrayLevel[0.6], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              StyleBox["uninitialized", 
               RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
               Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
               Scaled[0.0001]}], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"array\"", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            OverlayBox[{
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 GrayLevel[0.6], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{
                   Style[
                   "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                   10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 GrayLevel[0.6], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{
                   Style[
                   "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                   10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.84, 0.84, 0.84], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   GrayLevel[0.6], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.84, 0.84, 0.84], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   GrayLevel[0.6], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.84, 0.84, 0.84], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   GrayLevel[0.6], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   GrayLevel[0.6], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              StyleBox["uninitialized", 
               RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
               Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
               Scaled[0.0001]}], 
            GridBox[{{
               TagBox[
                
                DynamicModuleBox[{
                 NeuralNetworks`Private`NetChain`assoc3 = <|
                   "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1000, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {1000}, "$OutputSize" -> 1000, 
                    "$InputSize" -> NeuralNetworks`SizeT, "$InputDimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1000}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]|>|>, 
                    "3" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1000, 1000}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {1000}, "$OutputSize" -> 1000, 
                    "$InputSize" -> 1000, "$InputDimensions" -> {1000}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]|>|>, 
                    "4" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1000}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]|>|>, 
                    "5" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{100, 1000}, NeuralNetworks`RealT],
                     "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {100}, "$OutputSize" -> 100, 
                    "$InputSize" -> 1000, "$InputDimensions" -> {1000}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]|>|>, 
                    "6" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {100}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]|>|>, 
                    "7" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{10, 100}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 100, "$InputDimensions" -> {100}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "8" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {10}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
                    "9" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{5, 10}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {5}, "$OutputSize" -> 5, 
                    "$InputSize" -> 10, "$InputDimensions" -> {10}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>|>, 
                    "10" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {5}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>|>, 
                    "11" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1, 5}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 5, "$InputDimensions" -> {5}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>, 
                  NeuralNetworks`Private`NetChain`opart, 
                  NeuralNetworks`Private`NetChain`part, 
                  NeuralNetworks`Private`NetChain`selected = Null}, 
                 DynamicBox[
                  GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1000\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1000\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1000\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1000\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 100\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 100\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   GridFrameMargins -> {{0, 0}, {0, 0}}], 
                  TrackedSymbols :> {
                   NeuralNetworks`Private`NetChain`selected}], 
                 Initialization :> {NetChain}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  NetChain[<|
   "Type" -> "Chain", 
    "Nodes" -> <|
     "1" -> <|"Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> 
          NeuralNetworks`TensorT[{1000, NeuralNetworks`SizeT}, 
            NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
            NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {1000}, "$OutputSize" -> 1000, "$InputSize" -> 
          NeuralNetworks`SizeT, "$InputDimensions" -> 
          NeuralNetworks`ListT[
           NeuralNetworks`NaturalT, NeuralNetworks`SizeT]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]|>|>,
       "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
          "$Dimensions" -> {1000}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]|>|>,
       "3" -> <|"Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> 
          NeuralNetworks`TensorT[{1000, 1000}, NeuralNetworks`RealT], 
          "Biases" -> NeuralNetworks`Nullable[
            NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {1000}, "$OutputSize" -> 1000, "$InputSize" -> 
          1000, "$InputDimensions" -> {1000}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]|>|>,
       "4" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
          "$Dimensions" -> {1000}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]|>|>,
       "5" -> <|"Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> 
          NeuralNetworks`TensorT[{100, 1000}, NeuralNetworks`RealT], "Biases" -> 
          NeuralNetworks`Nullable[
            NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {100}, "$OutputSize" -> 100, "$InputSize" -> 
          1000, "$InputDimensions" -> {1000}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]|>|>, 
      "6" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
          "$Dimensions" -> {100}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]|>|>, 
      "7" -> <|"Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> NeuralNetworks`TensorT[{10, 100}, NeuralNetworks`RealT],
           "Biases" -> NeuralNetworks`Nullable[
            NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {10}, "$OutputSize" -> 10, "$InputSize" -> 100,
           "$InputDimensions" -> {100}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
      "8" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
          "$Dimensions" -> {10}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>|>, 
      "9" -> <|"Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> NeuralNetworks`TensorT[{5, 10}, NeuralNetworks`RealT], 
          "Biases" -> NeuralNetworks`Nullable[
            NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {5}, "$OutputSize" -> 5, "$InputSize" -> 10, 
          "$InputDimensions" -> {10}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>|>, 
      "10" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
          "$Dimensions" -> {5}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>|>, 
      "11" -> <|"Type" -> "Linear", 
        "Arrays" -> <|
         "Weights" -> NeuralNetworks`TensorT[{1, 5}, NeuralNetworks`RealT], 
          "Biases" -> NeuralNetworks`Nullable[
            NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]|>, 
        "Parameters" -> <|
         "OutputDimensions" -> {1}, "$OutputSize" -> 1, "$InputSize" -> 5, 
          "$InputDimensions" -> {5}|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>|>, 
    "Edges" -> {
     NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Inputs", "Input"], 
      NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "10", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Outputs", "Output"] -> 
      NeuralNetworks`NetPath["Nodes", "11", "Outputs", "Output"]}, 
    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
        NeuralNetworks`ListT[NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
        NeuralNetworks`AtomT]|>, 
    "Outputs" -> <|
     "Output" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>, <|
   "Version" -> "14.0.2", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.9290423199388695`*^9, 3.929042352237217*^9}, 
   3.929042504487488*^9, 3.929042548133713*^9, {3.9290427588329372`*^9, 
   3.9290427732753525`*^9}, {3.9290428099573364`*^9, 3.929042829526741*^9}, {
   3.9290429447118263`*^9, 3.929042950310505*^9}, {3.9290429844966793`*^9, 
   3.9290430843058643`*^9}, {3.929043538229744*^9, 3.929043581060423*^9}, {
   3.9290436350431614`*^9, 3.9290436873949814`*^9}, {3.9290437228829575`*^9, 
   3.929043740284073*^9}},
 CellLabel->
  "Out[2046]=",ExpressionUUID->"9d126526-c95b-6b44-a3be-37886b7f52d8"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.014925373134328358`], {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 GridBox[{{
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 9\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox["\"scalar\"", "SummaryItem"], "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.014925373134328358`], {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 GridBox[{{
                    TagBox[
                    
                    DynamicModuleBox[{
                    NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1000, 9}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{1000}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {1000}, "$OutputSize" -> 1000, 
                    "$InputSize" -> 9, "$InputDimensions" -> {9}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{9}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1000}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1000}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1000}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1000}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1000, 
                    1000}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1000}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {1000}, "$OutputSize" -> 1000, 
                    "$InputSize" -> 1000, "$InputDimensions" -> {1000}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1000}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1000}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1000}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1000}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1000}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{100, 
                    1000}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{100}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {100}, "$OutputSize" -> 100, 
                    "$InputSize" -> 1000, "$InputDimensions" -> {1000}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1000}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{100}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {100}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{100}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{100}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{10, 100}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{10}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 100, "$InputDimensions" -> {100}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{100}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>|>, 
                    "8" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {10}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>|>, 
                    "9" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{5, 10}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{5}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {5}, "$OutputSize" -> 5, 
                    "$InputSize" -> 10, "$InputDimensions" -> {10}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT]|>|>, 
                    "10" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {5}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT]|>|>, 
                    "11" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 5, "$InputDimensions" -> {5}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{9}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> <|
                    "Form" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT], "Type" -> "Scalar", "$Version" -> 
                    "14.0.2"|>|>|>, NeuralNetworks`Private`NetChain`opart, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null}, 
                    DynamicBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 9\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1000\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1000\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1000\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1000\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 100\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 100\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"scalar\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                    Initialization :> {NetChain}], "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[NetChain, 4496376, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", NetChain, 4496376, 
            5804802142803846546554854224644107834595510330991692502968, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<11>]"& )],
  False,
  BoxID -> 5804802142803846546554854224644107834595510330991692502968,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.9290423199388695`*^9, 3.929042352237217*^9}, 
   3.929042504487488*^9, 3.929042548133713*^9, {3.9290427588329372`*^9, 
   3.9290427732753525`*^9}, {3.9290428099573364`*^9, 3.929042829526741*^9}, {
   3.9290429447118263`*^9, 3.929042950310505*^9}, {3.9290429844966793`*^9, 
   3.9290430843058643`*^9}, {3.929043538229744*^9, 3.929043581060423*^9}, {
   3.9290436350431614`*^9, 3.9290436873949814`*^9}, 3.9290437228829575`*^9, 
   3.9290438259261*^9},
 CellLabel->
  "Out[2048]=",ExpressionUUID->"25a0eb07-45ce-bd49-bf8e-51687181921b"],

Cell[BoxData["0.1301937997341156`"], "Output",
 CellChangeTimes->{{3.9290423199388695`*^9, 3.929042352237217*^9}, 
   3.929042504487488*^9, 3.929042548133713*^9, {3.9290427588329372`*^9, 
   3.9290427732753525`*^9}, {3.9290428099573364`*^9, 3.929042829526741*^9}, {
   3.9290429447118263`*^9, 3.929042950310505*^9}, {3.9290429844966793`*^9, 
   3.9290430843058643`*^9}, {3.929043538229744*^9, 3.929043581060423*^9}, {
   3.9290436350431614`*^9, 3.9290436873949814`*^9}, 3.9290437228829575`*^9, 
   3.9290438260403175`*^9},
 CellLabel->
  "Out[2050]=",ExpressionUUID->"8bb42160-fbd7-2a4b-8722-a51a53e79328"],

Cell[BoxData["1.415721503501938`"], "Output",
 CellChangeTimes->{{3.9290423199388695`*^9, 3.929042352237217*^9}, 
   3.929042504487488*^9, 3.929042548133713*^9, {3.9290427588329372`*^9, 
   3.9290427732753525`*^9}, {3.9290428099573364`*^9, 3.929042829526741*^9}, {
   3.9290429447118263`*^9, 3.929042950310505*^9}, {3.9290429844966793`*^9, 
   3.9290430843058643`*^9}, {3.929043538229744*^9, 3.929043581060423*^9}, {
   3.9290436350431614`*^9, 3.9290436873949814`*^9}, 3.9290437228829575`*^9, 
   3.929043826115656*^9},
 CellLabel->
  "Out[2051]=",ExpressionUUID->"89a9465c-b8a5-fd42-be77-9b4431af465b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"newData", "=", 
  RowBox[{"data", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"-", "sequenceLength"}], ";;"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<=", "sequenceLength"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"AppendTo", "[", 
      RowBox[{"newData", ",", " ", 
       RowBox[{"trainedNet", "[", 
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"-", "sequenceLength"}], ";;"}], "]"}], "]"}], "]"}]}], 
      "]"}], ",", " ", 
     RowBox[{"-", "1"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", "newData", "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", "newData", "]"}]}], "Input",
 CellChangeTimes->{{3.929043137744772*^9, 3.929043251051914*^9}, {
  3.9290433551432953`*^9, 3.929043495963087*^9}, {3.929043597779171*^9, 
  3.9290436003471985`*^9}},
 CellLabel->
  "In[2052]:=",ExpressionUUID->"52a7002a-13d5-a641-bb9b-28afe70634a3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.3565495943877905`", ",", "1.3604943883287337`", ",", 
   "1.3713425716663274`", ",", "1.5399825126416469`", ",", 
   "1.465031427763727`", ",", "1.5103965580845733`", ",", 
   "1.5271619323335817`", ",", "1.552803092949712`", ",", 
   "1.415721503501938`"}], "}"}]], "Output",
 CellChangeTimes->{{3.9290432247970867`*^9, 3.9290432514495296`*^9}, {
   3.9290433754381943`*^9, 3.9290434319099064`*^9}, {3.929043468125185*^9, 
   3.929043496406025*^9}, {3.929043589554199*^9, 3.9290436007954063`*^9}, 
   3.929043651316921*^9, 3.929043700827257*^9, 3.929043826243082*^9},
 CellLabel->
  "Out[2052]=",ExpressionUUID->"0ef7ed02-95cc-c045-8f53-a70183b48ac2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.3565495943877905`", ",", "1.3604943883287337`", ",", 
   "1.3713425716663274`", ",", "1.5399825126416469`", ",", 
   "1.465031427763727`", ",", "1.5103965580845733`", ",", 
   "1.5271619323335817`", ",", "1.552803092949712`", ",", 
   "1.415721503501938`", ",", "0.1301937997341156`", ",", 
   "0.1301937997341156`", ",", "0.1301937997341156`", ",", 
   "0.1301937997341156`", ",", "0.1301937997341156`", ",", 
   "0.1301937997341156`", ",", "0.1301937997341156`", ",", 
   "0.1301937997341156`", ",", "0.1301937997341156`"}], "}"}]], "Output",
 CellChangeTimes->{{3.9290432247970867`*^9, 3.9290432514495296`*^9}, {
   3.9290433754381943`*^9, 3.9290434319099064`*^9}, {3.929043468125185*^9, 
   3.929043496406025*^9}, {3.929043589554199*^9, 3.9290436007954063`*^9}, 
   3.929043651316921*^9, 3.929043700827257*^9, 3.9290438263456*^9},
 CellLabel->
  "Out[2054]=",ExpressionUUID->"032b8355-d17a-e242-b5ea-bf10e95a1b89"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[2], 
         LineBox[{{1., 1.3565495943877905`}, {2., 1.3604943883287337`}, {3., 
          1.3713425716663274`}, {4., 1.5399825126416469`}, {5., 
          1.465031427763727}, {6., 1.5103965580845733`}, {7., 
          1.5271619323335817`}, {8., 1.552803092949712}, {9., 
          1.415721503501938}, {10., 0.1301937997341156}, {11., 
          0.1301937997341156}, {12., 0.1301937997341156}, {13., 
          0.1301937997341156}, {14., 0.1301937997341156}, {15., 
          0.1301937997341156}, {16., 0.1301937997341156}, {17., 
          0.1301937997341156}, {18., 0.1301937997341156}}]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[7, 360]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             
             Line[{{1., 1.3565495943877905`}, {2., 1.3604943883287337`}, {3., 
              1.3713425716663274`}, {4., 1.5399825126416469`}, {5., 
              1.465031427763727}, {6., 1.5103965580845733`}, {7., 
              1.5271619323335817`}, {8., 1.552803092949712}, {9., 
              1.415721503501938}, {10., 0.1301937997341156}, {11., 
              0.1301937997341156}, {12., 0.1301937997341156}, {13., 
              0.1301937997341156}, {14., 0.1301937997341156}, {15., 
              0.1301937997341156}, {16., 0.1301937997341156}, {17., 
              0.1301937997341156}, {18., 0.1301937997341156}}]}, 
            "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{0., 18.}, {0, 1.552803092949712}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{0., 18.}, {0, 1.552803092949712}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[7, 360]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[7, 360]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[{{1., 1.3565495943877905`}, {2., 1.3604943883287337`}, {3., 
          1.3713425716663274`}, {4., 1.5399825126416469`}, {5., 
          1.465031427763727}, {6., 1.5103965580845733`}, {7., 
          1.5271619323335817`}, {8., 1.552803092949712}, {9., 
          1.415721503501938}, {10., 0.1301937997341156}, {11., 
          0.1301937997341156}, {12., 0.1301937997341156}, {13., 
          0.1301937997341156}, {14., 0.1301937997341156}, {15., 
          0.1301937997341156}, {16., 0.1301937997341156}, {17., 
          0.1301937997341156}, {18., 0.1301937997341156}}]}, 
        "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{0., 18.}, {0, 1.552803092949712}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0., 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 18.}, {0, 1.552803092949712}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9290432247970867`*^9, 3.9290432514495296`*^9}, {
   3.9290433754381943`*^9, 3.9290434319099064`*^9}, {3.929043468125185*^9, 
   3.929043496406025*^9}, {3.929043589554199*^9, 3.9290436007954063`*^9}, 
   3.929043651316921*^9, 3.929043700827257*^9, 3.9290438264639187`*^9},
 CellLabel->
  "Out[2055]=",ExpressionUUID->"4a644804-9508-f74a-a1fa-1a7b6c610331"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"randNums", "[", 
    RowBox[{"n_List", ",", " ", "amount_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "+", 
        RowBox[{"amount", "*", 
         RowBox[{"RandomReal", "[", "]"}]}]}]}], "}"}], "&"}], "/@", 
    "n"}]}]}]], "Input",
 CellChangeTimes->{{3.929044018539337*^9, 3.9290440908988667`*^9}, {
  3.9290441955510406`*^9, 3.9290442082780952`*^9}, {3.929044307576044*^9, 
  3.9290443565570393`*^9}},
 CellLabel->
  "In[2106]:=",ExpressionUUID->"e024530d-705b-9d4e-a1f8-97a8a674e6e8"],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9290440324012375`*^9, 
  3.9290440376536617`*^9}},ExpressionUUID->"3da9ee6a-4a68-944d-adfb-\
ce8f1b4b1ea1"],

Cell[BoxData["1.2684375342978536`"], "Output",
 CellChangeTimes->{3.929044034609707*^9},
 CellLabel->
  "Out[2057]=",ExpressionUUID->"1ab5beb5-f2d6-a844-b23e-a651eaf6125b"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.929043227513872*^9, 
  3.929043240867613*^9}},ExpressionUUID->"418bcc86-0ec0-8945-ab0a-\
70b10af151a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TimeSeries", "[", "\"\<Values\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9290441170303383`*^9, 3.929044139537882*^9}},
 CellLabel->
  "In[2066]:=",ExpressionUUID->"0b2a7731-8e52-4e4c-abdd-6e75bc07b02c"],

Cell[BoxData[
 TemplateBox[{
  "TimeSeries", "ntprs", 
   "\"The argument Values at position 1 is expected to be a list of time\
\[Hyphen]value pairs or a list of states with equal dimensionality.\"", 2, 
   2066, 160, 17058780316267577655, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.929044139853712*^9},
 CellLabel->
  "During evaluation of \
In[2066]:=",ExpressionUUID->"c20f2dce-8baa-ff41-ae74-41d76d1d14c5"],

Cell[BoxData[
 RowBox[{"TimeSeries", "[", "\<\"Values\"\>", "]"}]], "Output",
 CellChangeTimes->{3.929044139931059*^9},
 CellLabel->
  "Out[2066]=",ExpressionUUID->"b4be111b-7fdb-ad4f-9c00-27e140d15ea4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"randNums", "[", 
    RowBox[{"n_List", ",", " ", "amount_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"v", "=", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1", ",", "6", ",", "5", ",", "7", ",", "4"}], 
     "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"t", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "5", ",", "10", ",", "12", ",", "15"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ts", "=", 
  RowBox[{"TimeSeries", "[", 
   RowBox[{"v", ",", 
    RowBox[{"{", "t", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Normal", "[", "ts", "]"}], "\[IndentingNewLine]", 
 RowBox[{"randNums", "[", 
  RowBox[{
   RowBox[{"Normal", "[", "ts", "]"}], ",", " ", "1"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"TimeSeries", "[", 
  RowBox[{"randNums", "[", 
   RowBox[{
    RowBox[{"Normal", "[", "ts", "]"}], ",", " ", "10"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"TimeSeries", "[", "%", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9290441680708904`*^9, 3.9290442660431232`*^9}, {
  3.9290443743704815`*^9, 
  3.929044403670044*^9}},ExpressionUUID->"1eb3197e-8708-7b4e-8ff9-\
fbb224812584"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[2]], 
                  LineBox[CompressedData["
1:eJwVx300lQcAx/Fnrpco4d7nudfFxeVyvdxu1pg5mee3OXTyflHpeA3b0rxk
QpGXUbPI2AmpqOnm5di8Ljoawsyhl9m4B83LQoyV1xxEuWt/fM/nfPmhMd6f
KRAEYf+u/1WRNNIEsUy/rnXvkMvltPEnc4r9Fa/o8XbOttXxN/R0k6WELtmg
eS6y2o6wTXpHKlz9xmObVggYUT/XsEZPtbhLHRZ3aH3nxoBOrRXaurpjwTX6
PfjZZmi/7V6jTe5+aP3ckQEB4wTDY2qLPpn+gcMTKEFh6AjzaCeBvBAnr2hr
FSz+EGelrqCI8JSf9yQrq0Jiakk9UVNBdkDV5RG5Gg5e1y5kHVFD0NnXzWXD
e1DSe2s09At1sKuC540q9qKtuZ/Ds9GElntFzJa7Jr5KP6XhNqyFqOcPae5H
WggRep9KC2Rhdawx9pkNE1d+kzETFClEBJdXMvazoHiL1VUvZcOW6GkM4JDo
euww5rPNgVih2iCIRSFfPi5a6OXgvFHricIdCh6iSoOpaxy8kn6vFP+WjT/O
ni+e+5yDgLrYmvoNDrIS9KrHrDnQe5pmYTSpDXH0bKBImQOlcImq/QQX1y62
Xs0dZMNJXdKW81AHq0WtcS532EiEf7xtoy4yjmfNrcWzMSAzy8up0cPQwaDp
ekc2MrMEqVQxD1zt4PReko3AG9O/HyrSB5+MlK5MUjC3qzEeyjNAUKdj8K56
ChVJA6bu9obIPunUlvQ1BTfV+sjM+4ZI3u9TtuNBgVcpKPW14sN/OVs4YUDh
n0s3+welfJwOzXX+cYWEE2/rgJBvBNe1Gy8uPSDR/+BlOlVkBDJddqA7n8QC
s1M+TBqjzJJLaAaRsI0XRdjkGIP3Z1bMPTGJJL1SGeTG6Bd2JroRJCRnlk4b
pghwe25iElskfEdHNq6vClDV3LBkM0Phxaq0bj7WBEMzh4IHp9lI9jwTMbto
gvWbcwOPxzmw/WVUPTXMFNEJ93Tf9Ggja1gwPT9pir11h3sGf+VCgaEkXT4m
hKKymvNknQ4S4/4NL38kxOKsrM/lqi7SCxqOiQ+bgRgu8ZJG6eJut4aNd7sZ
ihOeFfpn6iCl3NPR5WNzKDeFnPvyIhf0owKf5RZzZEQM+Rlc1oaIiPV4X2yB
KjkvrFTKQe2MOMn5Jwvcsb69O66SDf+/MvPX+ZZwcd2cYLZSKE27P5xUZoke
IsdLrY3ESMS6YY2+CF4iVnt5FwsOYX2+SVdEuGAXdXT3Uybs1FNbdJn78N0M
I7d3VAvBPX27/L7dh0/jIhc9lzTxd5Pqplz+7gteahCEJv4Df86abQ==
                   "]]}, Annotation[#, "Charting`Private`Tag#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0, 1.066834795089003}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 1.0668347950890005`}, DisplayFunction :> 
              Identity, Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{1, 15}, {1.0668347950890005`, 
                6.897746232623588}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["15", "SummaryItem"]}]}, "RowDefault"], 
                "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["6", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[2]], 
                  LineBox[CompressedData["
1:eJwVx300lQcAx/Fnrpco4d7nudfFxeVyvdxu1pg5mee3OXTyflHpeA3b0rxk
QpGXUbPI2AmpqOnm5di8Ljoawsyhl9m4B83LQoyV1xxEuWt/fM/nfPmhMd6f
KRAEYf+u/1WRNNIEsUy/rnXvkMvltPEnc4r9Fa/o8XbOttXxN/R0k6WELtmg
eS6y2o6wTXpHKlz9xmObVggYUT/XsEZPtbhLHRZ3aH3nxoBOrRXaurpjwTX6
PfjZZmi/7V6jTe5+aP3ckQEB4wTDY2qLPpn+gcMTKEFh6AjzaCeBvBAnr2hr
FSz+EGelrqCI8JSf9yQrq0Jiakk9UVNBdkDV5RG5Gg5e1y5kHVFD0NnXzWXD
e1DSe2s09At1sKuC540q9qKtuZ/Ds9GElntFzJa7Jr5KP6XhNqyFqOcPae5H
WggRep9KC2Rhdawx9pkNE1d+kzETFClEBJdXMvazoHiL1VUvZcOW6GkM4JDo
euww5rPNgVih2iCIRSFfPi5a6OXgvFHricIdCh6iSoOpaxy8kn6vFP+WjT/O
ni+e+5yDgLrYmvoNDrIS9KrHrDnQe5pmYTSpDXH0bKBImQOlcImq/QQX1y62
Xs0dZMNJXdKW81AHq0WtcS532EiEf7xtoy4yjmfNrcWzMSAzy8up0cPQwaDp
ekc2MrMEqVQxD1zt4PReko3AG9O/HyrSB5+MlK5MUjC3qzEeyjNAUKdj8K56
ChVJA6bu9obIPunUlvQ1BTfV+sjM+4ZI3u9TtuNBgVcpKPW14sN/OVs4YUDh
n0s3+welfJwOzXX+cYWEE2/rgJBvBNe1Gy8uPSDR/+BlOlVkBDJddqA7n8QC
s1M+TBqjzJJLaAaRsI0XRdjkGIP3Z1bMPTGJJL1SGeTG6Bd2JroRJCRnlk4b
pghwe25iElskfEdHNq6vClDV3LBkM0Phxaq0bj7WBEMzh4IHp9lI9jwTMbto
gvWbcwOPxzmw/WVUPTXMFNEJ93Tf9Ggja1gwPT9pir11h3sGf+VCgaEkXT4m
hKKymvNknQ4S4/4NL38kxOKsrM/lqi7SCxqOiQ+bgRgu8ZJG6eJut4aNd7sZ
ihOeFfpn6iCl3NPR5WNzKDeFnPvyIhf0owKf5RZzZEQM+Rlc1oaIiPV4X2yB
KjkvrFTKQe2MOMn5Jwvcsb69O66SDf+/MvPX+ZZwcd2cYLZSKE27P5xUZoke
IsdLrY3ESMS6YY2+CF4iVnt5FwsOYX2+SVdEuGAXdXT3Uybs1FNbdJn78N0M
I7d3VAvBPX27/L7dh0/jIhc9lzTxd5Pqplz+7gteahCEJv4Df86abQ==
                   "]]}, Annotation[#, "Charting`Private`Tag#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0, 1.066834795089003}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 1.0668347950890005`}, DisplayFunction :> 
              Identity, Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{1, 15}, {1.0668347950890005`, 
                6.897746232623588}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["15", "SummaryItem"]}]}, "RowDefault"], 
                "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["6", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[
  TimeSeries, {{{2, 1, 6, 5, 7, 4}}, {{{1, 2, 5, 10, 12, 15}}}, 1, {
    "Continuous", 1}, {"Discrete", 1}, 1, {
    ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
     ValueDimensions -> 1}}, False, 14.],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.929044188430031*^9, {3.9290442214108677`*^9, 3.92904424253504*^9}, {
   3.9290443210182304`*^9, 3.929044376337164*^9}},
 CellLabel->
  "Out[2117]=",ExpressionUUID->"42eceb8e-07be-dd47-b709-2a1c1e3df7f1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.929044188430031*^9, {3.9290442214108677`*^9, 3.92904424253504*^9}, {
   3.9290443210182304`*^9, 3.9290443764173374`*^9}},
 CellLabel->
  "Out[2118]=",ExpressionUUID->"31a120ae-4829-964d-a3d6-6a61fd7cd21c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2.6826489701428393`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1.6781663079223907`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6.531666177220948`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "5.263801707549713`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "7.566957252500872`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "4.38704820686934`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.929044188430031*^9, {3.9290442214108677`*^9, 3.92904424253504*^9}, {
   3.9290443210182304`*^9, 3.929044376494854*^9}},
 CellLabel->
  "Out[2119]=",ExpressionUUID->"f83b09a0-f29d-a34c-a097-0f0e42acda7f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[2]], 
                  LineBox[CompressedData["
1:eJwVxXsw2wcAB/B4Fb3SeYQk8vjlIYmEWOt9p/K11HqtRxvc0lujHuVwOuaK
EvW4s9JOHd0UbZlVSpUYU9qjWF8XrXbTmsWjagQr85jpHWUb2/743IcdkxIa
Z0gikXz/8/+m8nYpibQq7bmoKTJb4ILrP2882PBOWrApERnfY2OmUyyXVm9I
n/RHxJ1pZmJbLVgrDPlL2vV4Tl7rQ4O+K1jtt7It9dJpbRmTZLg3PVgOTDaA
5uorfY6YDMcOT/dZmRGqt/U9uUtkJOS7+f0IE+z2ULg39tqhNCrgWLK7KZRD
dnyDYnvE5tzZk73LHAfZFaSSIxR8qWy8NLqzG83+mZn+NCpOZm7evTGyB402
tDHhBBV2jZELnAZLXAgy7ZBeo8EquCFlK/gDzH+icM5LcMBnswNSqrcVJq3j
S/4U0rE20Z465WGNsG/Hii9t0pEYWX/LyNUGzeWVxgotA14kbbvS3hYPrAZS
5jKYkBg2sU7akNGxnEH7tImJc5ye6CvbZDjt8+RHjzPxTn3ZJP0fO/RGy+4n
WbKgbE1taduwh5L/oq/AnwX6WJ6IM01Bdmg8V5LKgkms3Nx3korupGNWEzdZ
CLCQ9xYP0JC1FBhF/4WFsziR7tXugLr8aUsPQwJDw8LS4hY6KgwOtr9xIFBQ
xMslVzEQeNe1cNCNQMT1mZ8OVTBRFv2I+TiYgJNPC1dXysK47qvkA/EEGlRD
/GBfArN5SyukPAJB5m2nC7oJ5LKW3bRVBBi3eDXhH7IxupZxe7iNwNuL3wz+
rGbDu8xPl/iUQABja7+AzYGA19JP0hMY/GEpn1zBgW7x5sLUJoFl64c7I7Zc
2DXJXj6yYcMr3TnRo5gLcnXS22UxGyp6zTB2uKAdf9VZK2NDnvbH50QOD08p
izPqUg7CX49uXFvjIcS4ztO7n4vFNXXrQqoj3pOrzCYpjsg+mpb424oj9ipP
pylj+fC6/9oi9xQf9yKSTSuvClA0wptZmObji/Ot1Jl5IQyNTNSrCgGmEphh
i2wRzp75Pbb+uQCa/CT+i3Ax8su/V0gOC3FOk1X/5m8ROp7s9QjtE2KS6coY
v+yEnPqjsiMHnLD9MGYrykwI6fPysNUuJwycD7pOKeTDmZQask8igm+Mmesw
wxHfzUlUH2tESEr5SEir5OLEeEHZOlsMXAmxjRVxUJPXPaK6IcbLxdE471oC
o4nrRAvTGXTt/nWVJxN+p56Fq752hn5OsaskxgE+FrldDtYu4MRnTd+RUxCp
fWZ2/IILNFRpnT6NjF87zd/v7LhA1+d9W1ZqjX8Bie6Taw==
                   "]]}, Annotation[#, "Charting`Private`Tag#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0, 4.639906543816069}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 4.639906543816059}, DisplayFunction :> 
              Identity, Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{1, 15}, {4.639906543816059, 
                13.665620041487578`}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["15", "SummaryItem"]}]}, "RowDefault"], 
                "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["6", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[2]], 
                  LineBox[CompressedData["
1:eJwVxXsw2wcAB/B4Fb3SeYQk8vjlIYmEWOt9p/K11HqtRxvc0lujHuVwOuaK
EvW4s9JOHd0UbZlVSpUYU9qjWF8XrXbTmsWjagQr85jpHWUb2/743IcdkxIa
Z0gikXz/8/+m8nYpibQq7bmoKTJb4ILrP2882PBOWrApERnfY2OmUyyXVm9I
n/RHxJ1pZmJbLVgrDPlL2vV4Tl7rQ4O+K1jtt7It9dJpbRmTZLg3PVgOTDaA
5uorfY6YDMcOT/dZmRGqt/U9uUtkJOS7+f0IE+z2ULg39tqhNCrgWLK7KZRD
dnyDYnvE5tzZk73LHAfZFaSSIxR8qWy8NLqzG83+mZn+NCpOZm7evTGyB402
tDHhBBV2jZELnAZLXAgy7ZBeo8EquCFlK/gDzH+icM5LcMBnswNSqrcVJq3j
S/4U0rE20Z465WGNsG/Hii9t0pEYWX/LyNUGzeWVxgotA14kbbvS3hYPrAZS
5jKYkBg2sU7akNGxnEH7tImJc5ye6CvbZDjt8+RHjzPxTn3ZJP0fO/RGy+4n
WbKgbE1taduwh5L/oq/AnwX6WJ6IM01Bdmg8V5LKgkms3Nx3korupGNWEzdZ
CLCQ9xYP0JC1FBhF/4WFsziR7tXugLr8aUsPQwJDw8LS4hY6KgwOtr9xIFBQ
xMslVzEQeNe1cNCNQMT1mZ8OVTBRFv2I+TiYgJNPC1dXysK47qvkA/EEGlRD
/GBfArN5SyukPAJB5m2nC7oJ5LKW3bRVBBi3eDXhH7IxupZxe7iNwNuL3wz+
rGbDu8xPl/iUQABja7+AzYGA19JP0hMY/GEpn1zBgW7x5sLUJoFl64c7I7Zc
2DXJXj6yYcMr3TnRo5gLcnXS22UxGyp6zTB2uKAdf9VZK2NDnvbH50QOD08p
izPqUg7CX49uXFvjIcS4ztO7n4vFNXXrQqoj3pOrzCYpjsg+mpb424oj9ipP
pylj+fC6/9oi9xQf9yKSTSuvClA0wptZmObji/Ot1Jl5IQyNTNSrCgGmEphh
i2wRzp75Pbb+uQCa/CT+i3Ax8su/V0gOC3FOk1X/5m8ROp7s9QjtE2KS6coY
v+yEnPqjsiMHnLD9MGYrykwI6fPysNUuJwycD7pOKeTDmZQask8igm+Mmesw
wxHfzUlUH2tESEr5SEir5OLEeEHZOlsMXAmxjRVxUJPXPaK6IcbLxdE471oC
o4nrRAvTGXTt/nWVJxN+p56Fq752hn5OsaskxgE+FrldDtYu4MRnTd+RUxCp
fWZ2/IILNFRpnT6NjF87zd/v7LhA1+d9W1ZqjX8Bie6Taw==
                   "]]}, Annotation[#, "Charting`Private`Tag#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0, 4.639906543816069}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 4.639906543816059}, DisplayFunction :> 
              Identity, Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{1, 15}, {4.639906543816059, 
                13.665620041487578`}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["15", "SummaryItem"]}]}, "RowDefault"], 
                "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["6", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[
  TimeSeries, {{{9.955144344838514, 5.145453080740397, 7.61145121933713, 
    8.632375672489003, 13.93681973616156, 4.639905808466934}}, {{{1, 2, 5, 10,
     12, 15}}}, 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
    ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
     ValueDimensions -> 1}}, False, 14.],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.929044188430031*^9, {3.9290442214108677`*^9, 3.92904424253504*^9}, {
   3.9290443210182304`*^9, 3.9290443765838184`*^9}},
 CellLabel->
  "Out[2120]=",ExpressionUUID->"60a9664c-e54b-0e47-87ee-7a66846fc976"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[2], 
         LineBox[{{1., 9.955144344838514}, {2., 5.145453080740397}, {5., 
          7.61145121933713}, {10., 8.632375672489003}, {12., 
          13.93681973616156}, {15., 4.639905808466934}}]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[7, 360]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             
             Line[{{1., 9.955144344838514}, {2., 5.145453080740397}, {5., 
              7.61145121933713}, {10., 8.632375672489003}, {12., 
              13.93681973616156}, {15., 4.639905808466934}}]}, 
            "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{0, 15.}, {0, 13.93681973616156}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{0, 15.}, {0, 13.93681973616156}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[7, 360]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[7, 360]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[{{1., 9.955144344838514}, {2., 5.145453080740397}, {5., 
          7.61145121933713}, {10., 8.632375672489003}, {12., 
          13.93681973616156}, {15., 4.639905808466934}}]}, 
        "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{0, 15.}, {0, 13.93681973616156}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 15.}, {0, 13.93681973616156}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.929044188430031*^9, {3.9290442214108677`*^9, 3.92904424253504*^9}, {
   3.9290443210182304`*^9, 3.9290443766997414`*^9}},
 CellLabel->
  "Out[2121]=",ExpressionUUID->"79ee7c79-125a-2a4c-b61e-b247662491d3"]
}, Open  ]]
},
WindowSize->{1152, 579.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
Magnification:>0.9 Inherited,
FrontEndVersion->"14.0 for Microsoft Windows (64-bit) (December 16, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"165c98e3-2a6b-8348-a086-4a6f7a5abeec"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[583, 22, 470, 11, 56, "Input",ExpressionUUID->"71645a0c-0bd7-e94a-8eca-77bd520e485a"],
Cell[1056, 35, 993, 19, 64, "Output",ExpressionUUID->"637014ab-fa10-c54e-8fa4-5992566f5034"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2086, 59, 230, 4, 38, "Input",ExpressionUUID->"9b66a4ba-dc13-7543-96bd-6a1aff9dcdf6"],
Cell[2319, 65, 406, 9, 26, "Message",ExpressionUUID->"b80777eb-3995-b340-acbe-9f7bb92e2b93"],
Cell[2728, 76, 183, 3, 41, "Output",ExpressionUUID->"90d1d5bd-32b2-0249-a390-ef6b9004cc76"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2948, 84, 1909, 45, 158, "Input",ExpressionUUID->"dde69e13-0472-4d4d-8252-9a03132e6a06"],
Cell[4860, 131, 549, 12, 41, "Output",ExpressionUUID->"55192d31-f986-4945-b393-d0f9fce76f3d"],
Cell[5412, 145, 28545, 584, 69, "Output",ExpressionUUID->"160e10f3-e582-b54d-8cdd-c0822824da45"],
Cell[33960, 731, 23839, 495, 69, "Output",ExpressionUUID->"8077e0f9-0396-684a-a934-bcfd4a47e211"],
Cell[57802, 1228, 369, 6, 41, "Output",ExpressionUUID->"b04255d9-9371-5249-9d98-a308a60ae993"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58208, 1239, 151, 3, 25, "Input",ExpressionUUID->"8fb93cd3-564d-2440-ac37-2d5cdfcdfa11"],
Cell[58362, 1244, 19974, 415, 68, "Output",ExpressionUUID->"da79517f-bc9c-1741-8db2-6d43264041aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78373, 1664, 176, 3, 25, "Input",ExpressionUUID->"e306186d-378d-d748-b0c3-737468c9a69d"],
Cell[78552, 1669, 223, 4, 41, "Output",ExpressionUUID->"acba38b0-1ea9-cc40-bfbb-a95708e7b9c5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78812, 1678, 270, 5, 43, "Input",ExpressionUUID->"5f8b19f0-e757-3642-b265-1f6628aa4b28"],
Cell[79085, 1685, 370, 9, 25, "Message",ExpressionUUID->"4f5c7b7b-3c87-0842-91e4-068a23468ece"],
Cell[79458, 1696, 160, 3, 41, "Output",ExpressionUUID->"faa35c6a-ee14-eb4e-a116-39fd3e908cf5"],
Cell[79621, 1701, 174, 3, 41, "Output",ExpressionUUID->"0999585f-39f5-d646-87cf-e05c111d0463"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79832, 1709, 158, 3, 43, "Input",ExpressionUUID->"c99cb1b7-bff4-8548-aef9-1f64dc77bda0"],
Cell[79993, 1714, 971, 19, 63, "Output",ExpressionUUID->"1e875d3c-e594-0245-b488-9c85653da877"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81001, 1738, 282, 6, 25, "Input",ExpressionUUID->"a59cfd4e-c5c7-f247-9276-13406dc166fb"],
Cell[81286, 1746, 3511, 61, 147, "Output",ExpressionUUID->"83db894d-036b-0b4d-a183-c5d5ea94842c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84834, 1812, 308, 8, 25, "Input",ExpressionUUID->"26c74d04-02f5-e240-bec5-b848622ae886"],
Cell[85145, 1822, 3511, 61, 147, "Output",ExpressionUUID->"6de77fc4-66e1-ca40-9535-5288a1f27fb4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88693, 1888, 252, 6, 25, "Input",ExpressionUUID->"d6910605-be68-4344-9a00-66e54675bb4e"],
Cell[88948, 1896, 675, 13, 63, "Output",ExpressionUUID->"07dab847-1f16-d146-9c5b-14a4f8a8111f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89660, 1914, 222, 5, 25, "Input",ExpressionUUID->"56273f47-0683-4b4b-9882-ce149c226d8a"],
Cell[89885, 1921, 173, 4, 41, "Output",ExpressionUUID->"84d2c7e7-55bb-1f4e-b178-2acda6332ef0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90095, 1930, 464, 13, 25, "Input",ExpressionUUID->"f25ac232-bfd4-0e42-9f02-e4982ed57c27"],
Cell[90562, 1945, 102574, 1710, 5937, "Output",ExpressionUUID->"b47d5f63-2a97-be4a-acf2-ad50a0e71c0d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193173, 3660, 1580, 43, 129, "Input",ExpressionUUID->"2540d235-20af-3b4b-ba66-ed6dc3514db8"],
Cell[194756, 3705, 450, 11, 41, "Output",ExpressionUUID->"43793de4-f6df-414a-8336-beaaf602ac10"],
Cell[195209, 3718, 74118, 1481, 68, "Output",ExpressionUUID->"ff5cddce-9bf2-5f4e-b4d1-9ac2f6f380db"],
Cell[269330, 5201, 60575, 1236, 69, "Output",ExpressionUUID->"839ffdb7-12f3-094c-bb28-0f8113cc8980"],
Cell[329908, 6439, 274, 5, 41, "Output",ExpressionUUID->"f6f5189c-b2e1-da47-96e2-4004b3bbff0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[330219, 6449, 366, 9, 38, "Input",ExpressionUUID->"7340e4a4-0f26-7948-b908-96bc000cf923"],
Cell[330588, 6460, 10238, 214, 199, "Output",ExpressionUUID->"15e36409-542e-e94e-8f44-7f0bbb6878f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[340863, 6679, 534, 13, 56, "Input",ExpressionUUID->"8873faf9-6cce-974d-b407-949d222e0d3b"],
Cell[341400, 6694, 116646, 2177, 599, "Output",ExpressionUUID->"03319be0-5eff-e644-89f6-de8b28b1a50b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[458083, 8876, 1071, 29, 60, "Input",ExpressionUUID->"ea3b8c8f-2f06-0d43-b161-98c9ab16746f"],
Cell[459157, 8907, 1067, 17, 76, "Output",ExpressionUUID->"ad4aeed1-4ac9-134d-a998-497350ecf5d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[460261, 8929, 219, 4, 38, "Input",ExpressionUUID->"24b00262-82aa-d245-a953-4a78080e4221"],
Cell[460483, 8935, 833, 15, 71, "Output",ExpressionUUID->"cf23200b-4678-2a4a-a465-677b446d2c07"]
}, Open  ]],
Cell[CellGroupData[{
Cell[461353, 8955, 374, 9, 43, "Input",ExpressionUUID->"c4cd9a29-a7bd-4948-be3d-8bef8ecb439a"],
Cell[461730, 8966, 3590, 62, 149, "Output",ExpressionUUID->"52f89e6f-cdbd-874b-9b39-699f26a5b33f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[465357, 9033, 1992, 45, 227, "Input",ExpressionUUID->"07da3841-71d7-ce4f-a384-e29fc899ed90"],
Cell[467352, 9080, 636, 10, 41, "Output",ExpressionUUID->"95ba1a38-1be2-1d43-a45f-b56065bc85b7"],
Cell[467991, 9092, 614, 9, 41, "Output",ExpressionUUID->"33996408-5fd2-4044-9584-3d7e1c17b8c6"],
Cell[468608, 9103, 9494, 187, 367, "Output",ExpressionUUID->"a6ad9819-ff2b-5a4c-b4bb-ad8802314c4b"],
Cell[478105, 9292, 5086, 87, 175, "Output",ExpressionUUID->"71f63795-9b2a-7a41-b610-83f9adb2423c"],
Cell[483194, 9381, 4149, 87, 174, "Output",ExpressionUUID->"3bba9077-cd5a-dc46-9fc0-25c66affaddc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[487380, 9473, 1360, 40, 141, "Input",ExpressionUUID->"11afa352-f2ae-af4b-8416-eddf0c8788c9"],
Cell[488743, 9515, 205, 4, 41, "Output",ExpressionUUID->"74549927-392e-4046-a539-66905ded07f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[488985, 9524, 278, 6, 38, "Input",ExpressionUUID->"2ab292a0-d6ad-9343-837a-0780fa737560"],
Cell[489266, 9532, 970, 19, 64, "Output",ExpressionUUID->"43c72a8b-f862-8648-a5a5-e2196f8b0e7f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[490273, 9556, 1658, 42, 112, "Input",ExpressionUUID->"68029645-f20c-1041-b165-f5f971cc98fc"],
Cell[491934, 9600, 102523, 1709, 5852, "Output",ExpressionUUID->"e5efde3d-77e9-734f-9e1e-7bbf92f08dbc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[594494, 11314, 1770, 44, 124, "Input",ExpressionUUID->"fa6f5996-3067-994a-b26e-c99d4842e326"],
Cell[596267, 11360, 67266, 1326, 1960, "Output",ExpressionUUID->"dbd9b56c-4a5c-c246-b8e2-c198bdfa9488"],
Cell[663536, 12688, 208, 4, 41, "Output",ExpressionUUID->"b56e35d9-ee68-4e47-992a-157436e555d4"]
}, Open  ]],
Cell[663759, 12695, 1048, 29, 107, "Input",ExpressionUUID->"6b559010-fd81-f14c-a9dd-40c41851797b"],
Cell[CellGroupData[{
Cell[664832, 12728, 2035, 45, 141, "Input",ExpressionUUID->"a720f84f-546b-c446-a9e5-b4232d0aad19"],
Cell[666870, 12775, 44830, 897, 69, "Output",ExpressionUUID->"9d126526-c95b-6b44-a3be-37886b7f52d8"],
Cell[711703, 13674, 37910, 750, 91, "Output",ExpressionUUID->"25a0eb07-45ce-bd49-bf8e-51687181921b"],
Cell[749616, 14426, 606, 9, 41, "Output",ExpressionUUID->"8bb42160-fbd7-2a4b-8722-a51a53e79328"],
Cell[750225, 14437, 603, 9, 41, "Output",ExpressionUUID->"89a9465c-b8a5-fd42-be77-9b4431af465b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[750865, 14451, 1079, 29, 107, "Input",ExpressionUUID->"52a7002a-13d5-a641-bb9b-28afe70634a3"],
Cell[751947, 14482, 697, 13, 41, "Output",ExpressionUUID->"0ef7ed02-95cc-c045-8f53-a70183b48ac2"],
Cell[752647, 14497, 963, 17, 41, "Output",ExpressionUUID->"032b8355-d17a-e242-b5ea-bf10e95a1b89"],
Cell[753613, 14516, 10113, 230, 231, "Output",ExpressionUUID->"4a644804-9508-f74a-a1fa-1a7b6c610331"]
}, Open  ]],
Cell[763741, 14749, 754, 21, 56, "Input",ExpressionUUID->"e024530d-705b-9d4e-a1f8-97a8a674e6e8"],
Cell[CellGroupData[{
Cell[764520, 14774, 156, 3, 25, "Input",ExpressionUUID->"3da9ee6a-4a68-944d-adfb-ce8f1b4b1ea1"],
Cell[764679, 14779, 172, 3, 41, "Output",ExpressionUUID->"1ab5beb5-f2d6-a844-b23e-a651eaf6125b"]
}, Open  ]],
Cell[764866, 14785, 152, 3, 25, "Input",ExpressionUUID->"418bcc86-0ec0-8945-ab0a-70b10af151a7"],
Cell[CellGroupData[{
Cell[765043, 14792, 228, 4, 38, "Input",ExpressionUUID->"0b2a7731-8e52-4e4c-abdd-6e75bc07b02c"],
Cell[765274, 14798, 440, 10, 26, "Message",ExpressionUUID->"c20f2dce-8baa-ff41-ae74-41d76d1d14c5"],
Cell[765717, 14810, 203, 4, 41, "Output",ExpressionUUID->"b4be111b-7fdb-ad4f-9c00-27e140d15ea4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[765957, 14819, 1221, 34, 146, "Input",ExpressionUUID->"1eb3197e-8708-7b4e-8ff9-fbb224812584"],
Cell[767181, 14855, 14524, 291, 69, "Output",ExpressionUUID->"42eceb8e-07be-dd47-b709-2a1c1e3df7f1"],
Cell[781708, 15148, 640, 19, 41, "Output",ExpressionUUID->"31a120ae-4829-964d-a3d6-6a61fd7cd21c"],
Cell[782351, 15169, 741, 19, 41, "Output",ExpressionUUID->"f83b09a0-f29d-a34c-a097-0f0e42acda7f"],
Cell[783095, 15190, 14606, 292, 69, "Output",ExpressionUUID->"60a9664c-e54b-0e47-87ee-7a66846fc976"],
Cell[797704, 15484, 8751, 211, 233, "Output",ExpressionUUID->"79ee7c79-125a-2a4c-b61e-b247662491d3"]
}, Open  ]]
}
]
*)

